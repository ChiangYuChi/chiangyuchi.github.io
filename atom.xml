<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CYC&#39;S BLOG</title>
  
  <subtitle>CYC&#39;S NOTEBOOK</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-11T05:57:22.329Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript 練習 - 預算計算器</title>
    <link href="http://yoursite.com/2019/10/02/2019-08-15/"/>
    <id>http://yoursite.com/2019/10/02/2019-08-15/</id>
    <published>2019-10-02T09:32:58.438Z</published>
    <updated>2019-10-11T05:57:22.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 預算控制器- <a href="https://chiangyuchi.github.io/budgetapp/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是 Udemy 上的課程的一個練習，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/FuAgkaM.jpg" alt></p><ul><li>程式碼撰寫將運用關注點分離、閉包、IIFE、封裝…等概念。使用閉包及 IIFE 創件模塊模式，能確保某些數據只能在模塊內被使用，避免數據被覆蓋。確保程式碼的安全性。</li><li>取得輸入欄位數據</li><li>添加項目到預算控制器</li><li>添加項目到使用者介面</li><li>計算預算</li><li>把預算放到使用者介面</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="設置事件監聽"><a href="#設置事件監聽" class="headerlink" title="設置事件監聽"></a>設置事件監聽</h2><p>首先使用 IIFE 建立三塊功能模組。建立好模組後，因為有輸入後鍵盤確認及滑鼠點擊，因此有兩個監聽項目，為了不重複撰寫同樣的功能，所以建立一個自定義函數。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//BUDGET CONTROLLER</span></span><br><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)();</span><br><span class="line"><span class="comment">//UI CONTROLLER</span></span><br><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)();</span><br><span class="line"><span class="comment">//GLOBAL APP CONTROLLER</span></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1. get the input field data</span></span><br><span class="line">    <span class="comment">//2. add item to the budget controller</span></span><br><span class="line">    <span class="comment">//3. add item to the UI</span></span><br><span class="line">    <span class="comment">//4. Calculate the budget</span></span><br><span class="line">    <span class="comment">//5. Display the budget on UI</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"it works"</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".add__btn"</span>).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">"keypress"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.keyCode === <span class="number">13</span> || which.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">      ctrlAddItem();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="獲取輸入數據"><a href="#獲取輸入數據" class="headerlink" title="獲取輸入數據"></a>獲取輸入數據</h2><p>接下來，我們要使來自不同 HTML 類型的數據可以輸入之後，在應用程式內被使用。這個項目的邏輯是：由 APP Controller 來控制其他模組的行動；所以 我們在 UI Controller 編寫的方法及 Budget Controller 裡面獲取的數據，最後再由 Global APP 調用這些方法。以下是進入 UI 控制器獲取數據的方法，這個功能要能被其他的控制器使用，所以不能是私有函數。由於 IIFE 將會立即執行，所以回傳的物件，將被分配給 UIcontroller，所定義的變數及函數，在函數中將停留在閉包狀態。所以即使這個函數已經回傳，將從中回傳的物件，將有權限訪問這些私有變數、方法及函數。我們要在使用者介面獲取的數據有三項。如何讓控制器同時調用這個方法與三個值？因此與其使用三個獨立的變數，解決方法是回傳一個物件，裡面有三種屬性。</p><ol><li>資料類型</li><li>資料內容描述</li><li>資料的值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getInput: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> type = <span class="built_in">document</span>.querySelector(<span class="string">".add__type"</span>).value;</span><br><span class="line">      <span class="keyword">var</span> description = <span class="built_in">document</span>.querySelector(<span class="string">".add__description"</span>).value;</span><br><span class="line">      <span class="keyword">var</span> value = <span class="built_in">document</span>.querySelector(<span class="string">".add__value"</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>並且在控制器調用這個方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input = UICtrl.getInput();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>但是假設我們在用戶介面修改，像是修改 class 名稱，這些會很耗時，因為很多地方都需要更改。所以我們把原先放在 UI 控制器的那些類別選擇器，直接新增一個物件來管理。所以我們直接而且別忘了要把這些 DOMstrings 公開，讓它們可被調用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    inputType: <span class="string">".add__type"</span>,</span><br><span class="line">    inputDescription: <span class="string">".add__description"</span>,</span><br><span class="line">    inputValue: <span class="string">".add__value"</span>,</span><br><span class="line">    inputBtn: <span class="string">".add__btn"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getDOMstrings: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DOMstrings;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">  <span class="built_in">document</span>.querySelector(DOM.inputBtn).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="建立初始化函數"><a href="#建立初始化函數" class="headerlink" title="建立初始化函數"></a>建立初始化函數</h2><p>建立一個初始化函數讓程式碼結構更優化。為什麼要設置初始化函式？因為要更便於管理四散的事件監聽，而且要讓它能被公開使用，我們調用 init 函數的時候，就會啟動事件監聽</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">    <span class="built_in">document</span>.querySelector(DOM.inputBtn).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"keypress"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (event.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">        ctrlAddItem();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"start"</span>);</span><br><span class="line">      setupEventListeners();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br><span class="line"></span><br><span class="line">controller.init();</span><br></pre></td></tr></table></figure><h2 id="將數據儲存到-budget-controller"><a href="#將數據儲存到-budget-controller" class="headerlink" title="將數據儲存到 budget controller"></a>將數據儲存到 budget controller</h2><p>首先建立收入與支出的數據模型，每個項目裡面包含 ID、值與描述。但因為有很多不同的項目，為了能夠區分不同的收入跟支出，所以它們要有獨一的 ID，所以物件是儲存這些數據的方式。如何創建複數物件？使用函數建構式。</p><p>根據網路上的說明：<br><a href="。https://pjchender.blogspot.com/2016/06/javascriptfunction-constructorprototype.html">。https://pjchender.blogspot.com/2016/06/javascriptfunction-constructorprototype.html</a></p><p>在 JavaScript 中的函式其實也是一種物件，其中包含一些屬性像是該函式的名稱（Name）和該函式的內容（Code），但其實 function 這裡面還有一個屬性，這個屬性稱做 prototype，這個屬性會以空物件的型式呈現</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> Expense = <span class="function"><span class="keyword">function</span>(<span class="params">id, description, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.description = description;</span><br><span class="line">    <span class="keyword">this</span>.value = value;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> Income = <span class="function"><span class="keyword">function</span>(<span class="params">id, description, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.description = description;</span><br><span class="line">    <span class="keyword">this</span>.value = value;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = &#123;</span><br><span class="line">    allItems: &#123;</span><br><span class="line">      exp: [],</span><br><span class="line">      inc: []</span><br><span class="line">    &#125;,</span><br><span class="line">    totals: &#123;</span><br><span class="line">      exp: <span class="number">0</span>,</span><br><span class="line">      inc: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="使用用戶輸入數據創建新項目"><a href="#使用用戶輸入數據創建新項目" class="headerlink" title="使用用戶輸入數據創建新項目"></a>使用用戶輸入數據創建新項目</h2><p>接下來使用用戶數據在預算控制器數據結構中創建新項目，重點是：如何避免資料結構的衝突？為什麼及如何把數據從一個模組傳到另一個模組？</p><p>首先先在預算控制器建立一個公共方法，讓其他模組可以向數據結構添加新項目。如果調用此方法創建新項目，首先要知道類型、描述以及值。使用不同的名稱減少混淆</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addItem: <span class="function"><span class="keyword">function</span>(<span class="params">type, des, val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> newItem, ID;</span><br><span class="line">      <span class="comment">// [1 2 3 4 5], next ID =6;</span></span><br><span class="line">      <span class="comment">// [1 2 4 6 8], next ID =9;</span></span><br><span class="line">      <span class="comment">// ID = last ID+1;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//建立新 ID</span></span><br><span class="line">      <span class="keyword">if</span> (data.allItems[type].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ID = data.allItems[type][data.allItems[type].length - <span class="number">1</span>].id + <span class="number">1</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ID = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 以類型建立新項目</span></span><br><span class="line">      <span class="keyword">if</span> (type === <span class="string">"exp"</span>) &#123;</span><br><span class="line">        newItem = <span class="keyword">new</span> Expense(ID, des, val);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"inc"</span>) &#123;</span><br><span class="line">        newItem = <span class="keyword">new</span> Income(ID, des, val);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//把項目推到資料結構</span></span><br><span class="line">      data.allItems[type].push(newItem);</span><br><span class="line">      <span class="keyword">return</span> newItem;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line">    newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(input);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="向用戶介面添加項目"><a href="#向用戶介面添加項目" class="headerlink" title="向用戶介面添加項目"></a>向用戶介面添加項目</h2><p>現在要把 HTML 加進 DOM 當中、更換字串、使用 insertAdjacentHTML 方法操作 DOM;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    incomeContainer: <span class="string">".income__list"</span>,</span><br><span class="line">    expensesContainer: <span class="string">".expenses__list"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addListItem: <span class="function"><span class="keyword">function</span>(<span class="params">obj, type</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> html, newHtml, element;</span><br><span class="line">      <span class="keyword">if</span> (type === <span class="string">"inc"</span>) &#123;</span><br><span class="line">        element = DOMstrings.incomeContainer;</span><br><span class="line">        html =</span><br><span class="line">          <span class="string">'&lt;div class="item clearfix" id="income-%id%"&gt;&lt;div class="item__description"&gt;%description%&lt;/div&gt;&lt;div class="right clearfix"&gt;&lt;div class="item__value"&gt;%value%&lt;/div&gt;&lt;div class="item__delete"&gt; &lt;button class="item__delete--btn"&gt;&lt;i class="ion-ios-close-outline"&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"exp"</span>) &#123;</span><br><span class="line">        element = DOMstrings.expensesContainer;</span><br><span class="line">        html =</span><br><span class="line">          <span class="string">'&lt;div class="item clearfix" id="expense-%id%"&gt;&lt;div class="item__description"&gt;%description%&lt;/div&gt;&lt;div class="right clearfix"&gt;&lt;div class="item__value"&gt;%value%&lt;/div&gt;&lt;div class="item__percentage"&gt;21%&lt;/div&gt;&lt;div class="item__delete"&gt;&lt;button class="item__delete--btn"&gt;&lt;i class="ion-ios-close-outline"&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      newHtml = html.replace(<span class="string">"%id%"</span>, obj.id);</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%description%"</span>, obj.description);</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%value%"</span>, obj.value);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(element).insertAdjacentHTML(<span class="string">"beforeend"</span>, newHtml);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line">    newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">    UICtrl.addListItem(newItem, input.type);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="清除輸入項目"><a href="#清除輸入項目" class="headerlink" title="清除輸入項目"></a>清除輸入項目</h2><p>現在要在點擊輸入後，可以清空輸入欄位的值，我們使用 querySelectorAll 選擇器。但是 querySelectorAll 回傳的並非陣列，而是一組類似陣列的列表 (NodeList)，所以要將列表轉為陣列。這裡我們使用 prototype 取得 slice 函式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    clearFields: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields, fieldsArr;</span><br><span class="line">      fields = <span class="built_in">document</span>.querySelectorAll(</span><br><span class="line">        DOMstrings.inputDescription + <span class="string">","</span> + DOMstrings.inputValue</span><br><span class="line">      );</span><br><span class="line">      fieldsArr = <span class="built_in">Array</span>.prototype.slice.call(fields);</span><br><span class="line">      fieldsArr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">current, index, array</span>) </span>&#123;</span><br><span class="line">        current.value = <span class="string">""</span>;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      fieldsArr[<span class="number">0</span>].focus();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    UICtrl.clearFields();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="更新控制器的小修正"><a href="#更新控制器的小修正" class="headerlink" title="更新控制器的小修正"></a>更新控制器的小修正</h2><p>接著將輸入的字串轉成數字，並且限制輸入類型的錯誤。目前輸入欄位還不是數字：</p><p><img src="https://i.imgur.com/HTJpfjz.png" alt></p><p>回到使用者介面，我們一開始獲取輸入資料的地方，使用 <code>parseFloat</code> 把字串轉成數字。分析函數 <code>parseFloat</code>，會在給與字串作為參數時返回數值。parseFloat 的語句如下</p><pre><code>parseFloat(str)</code></pre><p>此處的 <code>parseFloat</code> 會分析他自己的參數，字串 str，並試著返回浮點數。如果遇到正負符號 (+ 或 -)、數字 (0-9)、小數點、指數以外的字元，他就會返回在此之前的數值，並忽略那些字元。如果連第一個字元也不可以轉換為數字，就會返回〝NaN〞（不是數字）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    inputType: <span class="string">".add__type"</span>,</span><br><span class="line">    inputDescription: <span class="string">".add__description"</span>,</span><br><span class="line">    inputValue: <span class="string">".add__value"</span>,</span><br><span class="line">    inputBtn: <span class="string">".add__btn"</span>,</span><br><span class="line">    incomeContainer: <span class="string">".income__list"</span>,</span><br><span class="line">    expensesContainer: <span class="string">".expenses__list"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getInput: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// var type = document.querySelector(".add__type").value;</span></span><br><span class="line">      <span class="comment">// var description = document.querySelector(".add__description").value;</span></span><br><span class="line">      <span class="comment">// var value = document.querySelector(".add__value").value;</span></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        type: <span class="built_in">document</span>.querySelector(DOMstrings.inputType).value, <span class="comment">//will be either inc or ex</span></span><br><span class="line">        description: <span class="built_in">document</span>.querySelector(DOMstrings.inputDescription).value,</span><br><span class="line">        value: <span class="built_in">parseFloat</span>(<span class="built_in">document</span>.querySelector(DOMstrings.inputValue).value)</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>另一個問題是避免輸入空白欄位、0，所以回到控制器設定一個條件句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    <span class="comment">//1.獲得輸入欄的資料</span></span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//2.把項目新增到 budget 控制器</span></span><br><span class="line">      newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">      <span class="comment">//3.把項目新增到 UI</span></span><br><span class="line">      UICtrl.addListItem(newItem, input.type);</span><br><span class="line">      <span class="comment">//4.清除輸入欄位</span></span><br><span class="line">      UICtrl.clearFields();</span><br><span class="line">      <span class="comment">//5.update budget</span></span><br><span class="line">      updateBudget();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(input);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="計算預算"><a href="#計算預算" class="headerlink" title="計算預算"></a>計算預算</h2><p>我們計算的收入與支出只需要是私有資料，現在要取得都儲存在 <code>allItems</code>的資料，循環遍歷取得所有值求和，並且將所得值重新存入 <code>allItems</code>。並且在原始數據結構裡面，新增儲存預算的結構，也就是接下來要將收入減去花費所剩下的預算。也要獲取我們花費的百分比。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> calculateTotal = <span class="function"><span class="keyword">function</span>(<span class="params">type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    data.allItems[type].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">current</span>) </span>&#123;</span><br><span class="line">      sum += current.value;</span><br><span class="line">      data.totals[type] = sum;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Loop 的原理</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">[200,100,100]</span></span><br><span class="line"><span class="comment">sum = 0+200</span></span><br><span class="line"><span class="comment">sum = 200+100</span></span><br><span class="line"><span class="comment">sum = 300+100 = 400</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = &#123;</span><br><span class="line">    allItems: &#123;</span><br><span class="line">      exp: [],</span><br><span class="line">      inc: []</span><br><span class="line">    &#125;,</span><br><span class="line">    totals: &#123;</span><br><span class="line">      exp: <span class="number">0</span>,</span><br><span class="line">      inc: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    budget: <span class="number">0</span>,</span><br><span class="line">    percentage: <span class="number">-1</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    calculateBudget: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//calculate total income and expenses</span></span><br><span class="line">      calculateTotal(<span class="string">"exp"</span>);</span><br><span class="line">      calculateTotal(<span class="string">"inc"</span>);</span><br><span class="line">      <span class="comment">//calculate the budget:income-expenses</span></span><br><span class="line">      data.budget = data.totals.inc - data.totals.exp;</span><br><span class="line">      <span class="comment">//calculate the percentage</span></span><br><span class="line">      data.percentage = <span class="built_in">Math</span>.round((data.totals.exp / data.totals.inc) * <span class="number">100</span>);</span><br><span class="line">      <span class="comment">// expenses = 100 income = 300, spent 33.3333% = 100/300=0.3333*100</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>回到全局控器使用這些方法，但我們還需要一種可以回傳預算的方法，讓它可以儲存在變數中，才能將預算傳遞並顯示在 UI</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updateBudget = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. Calculate the budget</span></span><br><span class="line">    budgetCtrl.calculateBudget();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. Return the budget</span></span><br><span class="line">    <span class="keyword">var</span> budget = budgetCtrl.getBudget();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. Display the budget on the UI</span></span><br><span class="line">    <span class="built_in">console</span>.log(budget);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    <span class="comment">//1.獲得輸入欄的資料</span></span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//2.把項目新增到 budget 控制器</span></span><br><span class="line">      newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">      <span class="comment">//3.把項目新增到 UI</span></span><br><span class="line">      UICtrl.addListItem(newItem, input.type);</span><br><span class="line">      <span class="comment">//4.清除輸入欄位</span></span><br><span class="line">      UICtrl.clearFields();</span><br><span class="line">      <span class="comment">//5.update budget</span></span><br><span class="line">      updateBudget();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="更新使用者介面控制器"><a href="#更新使用者介面控制器" class="headerlink" title="更新使用者介面控制器"></a>更新使用者介面控制器</h2><p>這裡我們要把預算、收入、支出、百分比都呈現在畫面上。回到 UI 控制器，傳入的參數是資料結構裡的物件。在呈現百分比的地方設定一個條件句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    budgetLabel: <span class="string">".budget__value"</span>,</span><br><span class="line">    incomeLabel: <span class="string">".budget__income--value"</span>,</span><br><span class="line">    expensesLabel: <span class="string">".budget__expenses--value"</span>,</span><br><span class="line">    percentageLabel: <span class="string">".budget__expenses--percentage"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayBudget: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.budgetLabel).textContent = obj.budget;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.incomeLabel).textContent = obj.totalInc;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.expensesLabel).textContent =</span><br><span class="line">        obj.totalExp;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (obj.percentage &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(DOMstrings.percentageLabel).textContent =</span><br><span class="line">          obj.percentage + <span class="string">"%"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(DOMstrings.percentageLabel).textContent = <span class="string">"---"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updateBudget = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    UICtrl.displayBudget(budget);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>每次重載畫面的時候，別忘了要清除之前輸入的資料，所以要設定初始值歸 0</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"start"</span>);</span><br><span class="line">      UICtrl.displayBudget(&#123;</span><br><span class="line">        budget: <span class="number">0</span>,</span><br><span class="line">        totalInc: <span class="number">0</span>,</span><br><span class="line">        totalExp: <span class="number">0</span>,</span><br><span class="line">        percentage: <span class="number">-1</span></span><br><span class="line">      &#125;);</span><br><span class="line">      setupEventListeners();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="事件委派"><a href="#事件委派" class="headerlink" title="事件委派"></a>事件委派</h2><p>這個部分將會用到事件委派（Event Delegation） 概念。事件委派的特性有以下幾點：是一種受惠於 Event Bubbling 而能減少監聽器數目的方法。</p><p>事件委派的使用時機有兩個：</p><ol><li>父元素底下有好幾個我們想使用的子元素，這時不必在所有子元素使用事件處理程序，我們把事件委派添加到父元素，例如將 <code>click</code>事件加到父元素，<br>藉由 <code>Event Bubbling</code> 然後決定事件要傳遞在哪個子元素觸發，而非綁定在子元素上。優點是可減少監聽數目。缺點是由於需要判斷是哪些子元素節點是我們有興趣觸發的項目，因此需額外寫程式碼判斷。</li><li>當我們想要把事件處理程序附加到元素上時，但是載入畫面的時候，還沒有出現在 DOM 上面</li></ol><p>首先先在父元素上綁定事件，並建立刪除功能。由於事件冒泡發生了，所以父元素藉由事件的目標屬性（target property) 知道它的來源，事件冒泡觸發的地點：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .querySelector(DOM.container)</span><br><span class="line">      .addEventListener(<span class="string">"click"</span>, ctrlDeleteItem);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      splitID = itemID.split(<span class="string">"-"</span>);</span><br><span class="line">      type = splitID[<span class="number">0</span>];</span><br><span class="line">      ID = splitID[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>但在我們點擊的時候，儘管我們點擊圖示，但我們要刪除的是包含子元素及它的父元素的整個 HTML 結構，所以這裡使用 DOM 遍歷同時使用 <code>split</code>，獲取父元素的 ID。在使用 <code>split</code>拆分的時候， JavaScript 會把拆分的結果從其原始類型轉換為物件。像這樣：</p><p><img src="https://i.imgur.com/oFGwqbM.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      splitID = itemID.split(<span class="string">"-"</span>);</span><br><span class="line">      type = splitID[<span class="number">0</span>];</span><br><span class="line">      ID = <span class="built_in">parseInt</span>(splitID[<span class="number">1</span>]); <span class="comment">//字串轉為數字</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="從預算控制器刪除一個項目"><a href="#從預算控制器刪除一個項目" class="headerlink" title="從預算控制器刪除一個項目"></a>從預算控制器刪除一個項目</h2><p>如果要刪除一個項目，應用程式控制器要傳遞給刪除方法的參數包括類型、ID。<code>indexOf</code>方法回傳元素的索引號。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    deleteItem: <span class="function"><span class="keyword">function</span>(<span class="params">type, id</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> ids, index;</span><br><span class="line">      <span class="comment">//ids =[1,2,4,5,6]</span></span><br><span class="line">      <span class="comment">//index = 3</span></span><br><span class="line">      ids = data.allItems[type].map(<span class="function"><span class="keyword">function</span>(<span class="params">current</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> current.id;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      index = ids.indexOf(id);</span><br><span class="line">      <span class="keyword">if</span> (index !== <span class="number">-1</span>) &#123;<span class="comment">//索引不是負值的時候執行</span></span><br><span class="line">        data.allItems[type].splice(index, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">        <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">            <span class="comment">//inc-1</span></span><br><span class="line">            splitID = itemID.split(<span class="string">'-'</span>);</span><br><span class="line">            type = splitID[<span class="number">0</span>];</span><br><span class="line">            ID = <span class="built_in">parseInt</span>(splitID[<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//delete item from data structure</span></span><br><span class="line">            budgetCtrl.deleteItem(type, ID);</span><br><span class="line">            <span class="comment">//delete item from UI</span></span><br><span class="line">            <span class="comment">//update and show the new budget</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="刪除畫面上的項目，並且更新預算"><a href="#刪除畫面上的項目，並且更新預算" class="headerlink" title="刪除畫面上的項目，並且更新預算"></a>刪除畫面上的項目，並且更新預算</h2><p>我們要先移動到該元素的父層再移除其子節點</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">   deleteListItem: <span class="function"><span class="keyword">function</span> (<span class="params">selectorId</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> el = <span class="built_in">document</span>.getElementById(selectorId);</span><br><span class="line">            el.parentNode.removeChild(el);</span><br><span class="line">        &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">        <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//delete item from UI</span></span><br><span class="line">            UICtrl.deleteListItem(itemID);</span><br><span class="line">            <span class="comment">//update and show the new budget</span></span><br><span class="line">             updateBudget();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="更新百分比"><a href="#更新百分比" class="headerlink" title="更新百分比"></a>更新百分比</h2><p>透過在函數建構式裡添加新方法，同時也會將它新增到它的原型當中，所有透過此費用原型創建的物件，因為原型鏈的關係，都會繼承這個方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  Expense.prototype.calcPercentage = <span class="function"><span class="keyword">function</span>(<span class="params">totalIncome</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (totalIncome &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.percentage = <span class="built_in">Math</span>.round((<span class="keyword">this</span>.value / totalIncome) * <span class="number">100</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.percentage = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Expense.prototype.getPercentage = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.percentage;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    calculatePercentages: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">/*a=40</span></span><br><span class="line"><span class="comment">              b=10</span></span><br><span class="line"><span class="comment">              c=20</span></span><br><span class="line"><span class="comment">              income=100</span></span><br><span class="line"><span class="comment">              a=40/100=40%</span></span><br><span class="line"><span class="comment">              b=10/100=10%</span></span><br><span class="line"><span class="comment">              c=20/100=20% */</span></span><br><span class="line">      data.allItems.exp.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        cur.calcPercentage(data.totals.inc);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    getPercentages: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> allPerc = data.allItems.exp.map(<span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cur.getPercentage();</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> allPerc;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updatePercentage = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1. Calculate the percentage</span></span><br><span class="line">    budgetCtrl.calculatePercentages();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. Read the percentage from the budget controller</span></span><br><span class="line">    <span class="keyword">var</span> percentage = budgetCtrl.getPercentages();</span><br><span class="line">    <span class="comment">//3. Update the UI withe the new percentage</span></span><br><span class="line">    <span class="built_in">console</span>.log(percentage);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//6. calculate and update percentage</span></span><br><span class="line">      updatePercentage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      <span class="comment">// calculate and update percentage</span></span><br><span class="line">      updatePercentage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="把百分比顯示在-UI"><a href="#把百分比顯示在-UI" class="headerlink" title="把百分比顯示在 UI"></a>把百分比顯示在 UI</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    expensesPercLabel: <span class="string">".item__percentage"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayPercentages: <span class="function"><span class="keyword">function</span>(<span class="params">percentage</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields = <span class="built_in">document</span>.querySelectorAll(DOMstrings.expensesPercLabel);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> nodeListForEach = <span class="function"><span class="keyword">function</span>(<span class="params">list, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">          callback(list[i], [i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      nodeListForEach(fields, <span class="function"><span class="keyword">function</span>(<span class="params">current, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (percentage[index] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          current.textContent = percentage[index] + <span class="string">"%"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          current.textContent = <span class="string">"---"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updatePercentages = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="title">UICtrl</span>.<span class="title">displayPercentages</span>(<span class="params">percentages</span>);</span></span><br><span class="line"><span class="function">  &#125;;</span></span><br><span class="line"><span class="function">&#125;)(<span class="params">budgetController, UIcontroller</span>);</span></span><br></pre></td></tr></table></figure><h2 id="格式化數字"><a href="#格式化數字" class="headerlink" title="格式化數字"></a>格式化數字</h2><p>接著在 UI 控制器添加方法，接下來每次在銀幕上顯示數字，就會調用這個方法，然後把數字輸入該方法，然後輸出格式化的數字。使用<code>substr()</code>取得我們要放入千分號的位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> formateNumber = <span class="function"><span class="keyword">function</span>(<span class="params">num, type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> numSplit, int, dec, type;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        數字前有＋或-</span></span><br><span class="line"><span class="comment">        小數點後正好2位數</span></span><br><span class="line"><span class="comment">        逗號分隔千位數</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    num = <span class="built_in">Math</span>.abs(num);</span><br><span class="line">    num = num.toFixed(<span class="number">2</span>);</span><br><span class="line">    numSplit = num.split(<span class="string">"."</span>);</span><br><span class="line">    int = numSplit[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (int.length &gt; <span class="number">3</span>) &#123;</span><br><span class="line">      int = int.substr(<span class="number">0</span>, int.length - <span class="number">3</span>) + <span class="string">","</span> + int.substr(int.length - <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dec = numSplit[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (type === <span class="string">"exp"</span> ? <span class="string">"-"</span> : <span class="string">"+"</span>) + <span class="string">""</span> + int + <span class="string">"."</span> + dec;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addListItem: <span class="function"><span class="keyword">function</span>(<span class="params">obj, type</span>) </span>&#123;</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%value%"</span>, formateNumber(obj.value, type));</span><br><span class="line">    &#125;,</span><br><span class="line">    displayBudget: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> type;</span><br><span class="line">      obj.budget &gt; <span class="number">0</span> ? (type = <span class="string">"inc"</span>) : (type = <span class="string">"exp"</span>);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.budgetLabel</span><br><span class="line">      ).textContent = formateNumber(obj.budget, type);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.incomeLabel</span><br><span class="line">      ).textContent = formateNumber(obj.totalInc, <span class="string">"inc"</span>);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.expensesLabel</span><br><span class="line">      ).textContent = formateNumber(obj.totalExp, <span class="string">"exp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="取得日期"><a href="#取得日期" class="headerlink" title="取得日期"></a>取得日期</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayMonth: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> now, month, year;</span><br><span class="line">      now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">      months = [</span><br><span class="line">        <span class="string">"January"</span>,</span><br><span class="line">        <span class="string">"February"</span>,</span><br><span class="line">        <span class="string">"March"</span>,</span><br><span class="line">        <span class="string">"April"</span>,</span><br><span class="line">        <span class="string">"May"</span>,</span><br><span class="line">        <span class="string">"June"</span>,</span><br><span class="line">        <span class="string">"July"</span>,</span><br><span class="line">        <span class="string">"August"</span>,</span><br><span class="line">        <span class="string">"September"</span>,</span><br><span class="line">        <span class="string">"October"</span>,</span><br><span class="line">        <span class="string">"November"</span>,</span><br><span class="line">        <span class="string">"December"</span></span><br><span class="line">      ];</span><br><span class="line">      month = now.getMonth();</span><br><span class="line">      year = now.getFullYear();</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.dateLabel).textContent =</span><br><span class="line">        months[month] + <span class="string">" "</span> + year;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      UICtrl.displayMonth();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="觸發-change-事件改變輸入欄位顏色"><a href="#觸發-change-事件改變輸入欄位顏色" class="headerlink" title="觸發 change 事件改變輸入欄位顏色"></a>觸發 change 事件改變輸入欄位顏色</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> nodeListForEach = <span class="function"><span class="keyword">function</span>(<span class="params">list, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">      callback(list[i], [i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    changeType: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields = <span class="built_in">document</span>.querySelectorAll(</span><br><span class="line">        DOMstrings.inputType +</span><br><span class="line">          <span class="string">","</span> +</span><br><span class="line">          DOMstrings.inputDescription +</span><br><span class="line">          <span class="string">","</span> +</span><br><span class="line">          DOMstrings.inputValue</span><br><span class="line">      );</span><br><span class="line">      nodeListForEach(fields, <span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        cur.classList.toggle(<span class="string">"red-focus"</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.inputBtn).classList.toggle(<span class="string">"red"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .querySelector(DOM.inputType)</span><br><span class="line">      .addEventListener(<span class="string">"change"</span>, UICtrl.changeType);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 預算控制器- &lt;a href=&quot;https://chiangyuchi.github.io/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue 練習 - Todo list 待辦事項清單</title>
    <link href="http://yoursite.com/2019/08/26/2019-8-26/"/>
    <id>http://yoursite.com/2019/08/26/2019-8-26/</id>
    <published>2019-08-25T16:00:00.000Z</published>
    <updated>2019-10-11T09:56:41.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>Vue 練習 - Todo List 待辦事項清單 - <a href="https://chiangyuchi.github.io/vue-simple-todolist/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>以 Vue 實作代辦事項清單的新增、刪除、修改。</p><p><img src="https://i.imgur.com/t728S4N.png" alt></p><ul><li>可動態修改 ClassName 與 style</li><li>運用指令與修飾符</li><li>表單資料綁定</li><li>動態新增、刪除、修改</li></ul><p>有一個 input 欄位，現在要在輸入後把文字加入代辦事項列表，首先設定一個代辦事項列表的基礎結構，包括：</p><ul><li>新增項目的輸入框、</li><li>點擊後把資料加入 vue 原始碼的按鈕</li><li>以陣列儲存資料內容的區段</li></ul><p>我們以 <code>v-for</code> 動態產生資料於畫面上。todos 陣列用來儲存所有待辦事項內容（*:id 是 v-bind 的縮寫，用來綁定 Vue 資料與 HTML 屬性）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group mb-3"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-prepend"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-text"</span> <span class="attr">id</span>=<span class="string">"basic-addon1"</span>&gt;</span>待辦事項<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"準備要做的任務"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-append"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group list-group-flush text-left"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-check"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"form-check-input"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span>&gt;</span> <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 刪除按鈕 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close ml-auto"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="STEP-1-建立待辦事項的列表"><a href="#STEP-1-建立待辦事項的列表" class="headerlink" title="STEP 1 建立待辦事項的列表"></a>STEP 1 建立待辦事項的列表</h1><p><code>v-model</code> 實現雙向綁定輸入資料，也就是綁定 <code>HTML 屬性</code></p><ul><li>以 <code>@click</code> 在 button 新增方法</li><li>以 <code>@keyup.enter</code> 在 input 欄位新增方法</li><li>以 <code>v-for</code> 將資料內容儲存在陣列裡，名稱定義為 <code>item in todos</code>，是代辦事項內容取出呈現的位置。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">placeholder</span>=<span class="string">"準備要做的任務"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">"newTodo "</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">keyup.enter</span>=<span class="string">"addTodo"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> @<span class="attr">click</span>=<span class="string">"addTodo"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"todoItem"</span> <span class="attr">v-for</span>=<span class="string">"item in todos"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"form-check-input"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">"item.completed"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span> <span class="attr">:for</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">    &#123;&#123;item.title&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span>&gt;</span>刪除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">v-model</span>=<span class="string">"item.completed"</span> ：<span class="attr">for</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">  &#123;&#123;item.title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份"><a href="#JavaScript-部份" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">//儲存新增的待辦事項</span><br><span class="line">newTodo:&apos;&apos;</span><br><span class="line">//一個陣列，儲存目前待辦事項的內容</span><br><span class="line">todos:[&#123;</span><br><span class="line">//對應checkbox與待辦事項</span><br><span class="line">id:&apos;345&apos;,</span><br><span class="line">title: &apos;你好&apos;,</span><br><span class="line">completed:false</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods&#123;</span><br><span class="line">//新增一個待辦事項的方法</span><br><span class="line">addTodo:function()&#123;</span><br><span class="line">  var value = this.newTodo;</span><br><span class="line">  var timestamp = Math.floor(Date.now());</span><br><span class="line">  if(!value)&#123;</span><br><span class="line">  return</span><br><span class="line">  &#125;</span><br><span class="line">  this.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: false</span><br><span class="line">  &#125;);</span><br><span class="line">  this.newTodo = &apos;&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>###STEP2 刪除陣列上的特定資料</p><h4 id="HTML-部份"><a href="#HTML-部份" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><ul><li>新增 <code>＠click=&quot;removeTodo(key)</code> 方法</li><li>為了讓電腦知道點擊的是哪一個，所以必須傳入相關參數，在 <code>item in todos</code> 加入索引值：<code>item,key)in todos</code></li><li>同時把索引值傳給 <code>＠click=&quot;removeTodo</code>方法:<code>＠click=&quot;removeTodo(key)</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;準備要做的任務&quot; v-model=&quot;newTodo &quot; :id=&quot;item.id&quot; @keyup.enter=&quot;addTodo&quot;&gt;</span><br><span class="line"> &lt;button class=&quot;btn btn-primary&quot; @click=&quot;addTodo&quot;&gt;新增&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"> //刪除時必須傳入是哪一筆資料的參數,key是陣列索引位置</span><br><span class="line">&lt;li class=&quot;todoItem&quot; v-for=&quot;(item,key)in todos&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; v-model=&quot;item.completed&quot; :id=&quot;item.id&quot;&gt;</span><br><span class="line">&lt;label class=&quot;form-check-label&quot; :for=&quot;item.id&quot;&gt;</span><br><span class="line">&#123;&#123;item.title&#125;&#125;</span><br><span class="line"></span><br><span class="line">//傳入陣列索引位置</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn-delete&quot; ＠click=&quot;removeTodo(key)&quot;&gt;刪除&lt;/button&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;/label&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot;&gt;</span><br><span class="line">&lt;/li</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-1"><a href="#JavaScript-部份-1" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><ul><li>在 methods 裡新增一個判斷式，如果輸入值是空的就不能新增；並以 <code>trim()</code>刪除多餘空白鍵</li><li>removeTodo 方法包含一個 key</li><li>用 splice() 方法刪除所存在位置（key) 的資料</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:&apos;&apos;</span><br><span class="line">todos:[&#123;</span><br><span class="line">id:&apos;345&apos;,</span><br><span class="line">title: &apos;你好&apos;,</span><br><span class="line">completed:false</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods&#123;</span><br><span class="line"></span><br><span class="line">addTodo:function()&#123;</span><br><span class="line">//去除多餘的空白</span><br><span class="line">  var value = this.newTodo.trim();</span><br><span class="line">  var timestamp = Math.floor(Date.now());</span><br><span class="line">//如果沒有輸入值就無法新增</span><br><span class="line">  if(!value)&#123;</span><br><span class="line">  return</span><br><span class="line">  &#125;</span><br><span class="line">  this.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: false</span><br><span class="line">  &#125;);</span><br><span class="line">  this.newTodo = &apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line">//刪除的方法包括了一個陣列索引的參數</span><br><span class="line">removeTodo:function(key)&#123;</span><br><span class="line">this.todos.splice(key,1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>###STEP3 製作頁籤分類功能</p><h4 id="HTML-部份-1"><a href="#HTML-部份-1" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><ul><li>利用動態切換 className 功能製造刪節線效果：<code>:class=&quot;{&#39;completed&#39;:item.completed}&quot;</code></li><li>利用動態切換 className 功能動態切換頁籤，如果 className 是 all 的時候，visibility 就切換為 all。切換條件是「按下頁籤」<code>:class=&quot;{&#39;active&#39;:visibility == &#39;all&#39;}&quot; @click=&quot;visibility=&#39;all&#39;&quot;</code></li><li>列表裡原始的 <code>todos</code> 現在是過濾後的 <code>filteredTodos</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;準備要做的任務&quot; v-model=&quot;newTodo &quot; :id=&quot;item.id&quot; @keyup.enter=&quot;addTodo&quot;&gt;</span><br><span class="line"> &lt;button class=&quot;btn btn-primary&quot; @click=&quot;addTodo&quot;&gt;新增&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//過濾是否完成</span><br><span class="line">&lt;li class=&quot;todoItem&quot; v-for=&quot;(item,key)in filteredTodos&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; v-model=&quot;item.completed&quot; :id=&quot;item.id&quot;&gt;</span><br><span class="line"></span><br><span class="line">//動態切換class</span><br><span class="line">&lt;label class=&quot;form-check-label&quot; :class=&quot;&#123;&apos;completed&apos;:item.completed&#125;&quot; :for=&quot;item.id&quot;&gt;</span><br><span class="line">&#123;&#123;item.title&#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn-delete&quot; ＠click=&quot;removeTodo(key)&quot;&gt;刪除&lt;/button&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;/label&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot;&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">//動態切換頁籤狀態</span><br><span class="line">&lt;div class=&quot;control&quot;&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;btn&quot; :class=&quot;&#123;&apos;active&apos;:visibility == &apos;all&apos;&#125;&quot; @click=&quot;visibility=&apos;all&apos;&quot;&gt;全部&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;btn&quot; :class=&quot;&#123;&apos;active&apos;:visibility == &apos;active&apos;&#125;&quot; @click=&quot;visibility=&apos;active&apos;&quot;&gt;進行中&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;btn&quot; :class=&quot;&#123;&apos;active&apos;:visibility == &apos;completed&apos;&#125;&quot;</span><br><span class="line">  @click=&quot;visibility=&apos;completed&apos;&quot;&gt;已完成&lt;/a&gt;</span><br><span class="line">&lt;a class=&quot;btn&quot; href=&quot;#&quot;&gt;清除所有任務&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-2"><a href="#JavaScript-部份-2" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><ul><li>在 data 結構裡，新增一個變數 visibility，用來決定呈現哪一個頁籤</li><li>過濾要呈現在不同頁籤的內容，使用 computed 功能，並在裡面宣告一個 <code>filteredTodos</code> 方法，在裡面新增判斷式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:&apos;&apos;</span><br><span class="line">todos:[&#123;</span><br><span class="line">id:&apos;345&apos;,</span><br><span class="line">title: &apos;你好&apos;,</span><br><span class="line">completed:false</span><br><span class="line">&#125;],</span><br><span class="line">//新增變數</span><br><span class="line">visibility:&apos;all&apos;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods&#123;</span><br><span class="line"></span><br><span class="line">addTodo:function()&#123;</span><br><span class="line"></span><br><span class="line">  var value = this.newTodo.trim();</span><br><span class="line">  var timestamp = Math.floor(Date.now());</span><br><span class="line"></span><br><span class="line">  if(!value)&#123;</span><br><span class="line">  return</span><br><span class="line">  &#125;</span><br><span class="line">  this.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: false</span><br><span class="line">  &#125;);</span><br><span class="line">  this.newTodo = &apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">removeTodo:function(key)&#123;</span><br><span class="line">this.todos.splice(key,1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">//過濾</span><br><span class="line">computed: &#123;</span><br><span class="line">filteredTodos: function () &#123;</span><br><span class="line">if (this.visibility == &apos;all&apos;) &#123;</span><br><span class="line">return this.todos;</span><br><span class="line">&#125; else if (this.visibility == &apos;active&apos;) &#123;</span><br><span class="line">var newTodos = [];</span><br><span class="line">this.todos.forEach(function (item) &#123;</span><br><span class="line">if (!item.completed) &#123;</span><br><span class="line">newTodos.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">return newTodos;</span><br><span class="line">&#125; else if (this.visibility == &apos;completed&apos;) &#123;</span><br><span class="line">var newTodos = [];</span><br><span class="line"> this.todos.forEach(function (item) &#123;</span><br><span class="line">if (item.completed) &#123;</span><br><span class="line">newTodos.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">return newTodos;</span><br><span class="line">&#125;</span><br><span class="line"> return [];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="CSS-部份"><a href="#CSS-部份" class="headerlink" title="CSS 部份"></a>CSS 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">          .completed &#123;</span><br><span class="line">            text-decoration: line-through</span><br><span class="line">          &#125;</span><br><span class="line"> &lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="STEP4-雙擊修改資料內容"><a href="#STEP4-雙擊修改資料內容" class="headerlink" title="STEP4 雙擊修改資料內容"></a>STEP4 雙擊修改資料內容</h3><h4 id="HTML-部份-2"><a href="#HTML-部份-2" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><ul><li>雙擊觸發 <code>@dblclick=&quot;editTodo(item)&quot;</code>方法</li><li>新增 <code>v-if</code> 判斷式：假如原本畫面上的資料的 id 不等於暫存編輯中的 id，就顯示出來</li><li>編輯中的資料內容：<code>v-model=&quot;cacheTitle&quot;</code></li><li>取消編輯：<code>@keyup.esc=&quot;cancelEdit()</code></li><li>儲存編輯內容：<code>@keyup.enter=&quot;doneEdit(item)&quot;</code></li></ul><p>-</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;準備要做的任務&quot; v-model=&quot;newTodo &quot; :id=&quot;item.id&quot; @keyup.enter=&quot;addTodo&quot;&gt;</span><br><span class="line"> &lt;button class=&quot;btn btn-primary&quot; @click=&quot;addTodo&quot;&gt;新增&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//雙擊修改</span><br><span class="line"> &lt;li class=&quot;todoItem&quot; v-for=&quot;(item,key) in filteredTodos&quot; @dblclick=&quot;editTodo(item)&quot;&gt;</span><br><span class="line">//判斷是否顯示編輯框</span><br><span class="line">&lt;div class=&quot;d-flex&quot; v-if=&quot;item.id !==cacheTodo.id&quot;&gt;</span><br><span class="line"> &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; v-model=&quot;item.completed&quot; :id=&quot;item.id&quot;&gt;</span><br><span class="line">  &lt;label class=&quot;form-check-label&quot; :class=&quot;&#123;&apos;completed&apos;:item.completed&#125;&quot; :for=&quot;item.id&quot;&gt;</span><br><span class="line">&#123;&#123;item.title&#125;&#125;</span><br><span class="line"> &lt;button type=&quot;button&quot; class=&quot;btn-delete&quot; @click=&quot;removeTodo(key)&quot;&gt;刪除&lt;/button&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"> &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">//cache所存id與item id如果相同就隱藏內容顯示輸入框</span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-if=&quot;item.id ===cacheTodo.id&quot; v-model=&quot;cacheTitle&quot;</span><br><span class="line">@keyup.esc=&quot;cancelEdit()&quot; @keyup.enter=&quot;doneEdit(item)&quot;&gt;</span><br><span class="line"> &lt;/li&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-3"><a href="#JavaScript-部份-3" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><ul><li>新增 <code>cacheTodo:{}</code>，暫存編輯資料，新增 <code>cacheTitle</code>，暫存編輯標題</li><li>取消編輯：cacheTodo 等於一個空物件 <code>this.cacheTodo = {}</code></li><li>完成編輯：把 item 的標題指向剛剛預存的標題 <code>item.title = this.cacheTitle;</code> 然後把預存標題清空，將 cacheTodo 替換回來</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:&apos;&apos;</span><br><span class="line">todos:[&#123;</span><br><span class="line">id:&apos;345&apos;,</span><br><span class="line">title: &apos;你好&apos;,</span><br><span class="line">completed:false</span><br><span class="line">&#125;],</span><br><span class="line">//暫存編輯事項</span><br><span class="line">cacheTodo: &#123;&#125;,</span><br><span class="line">cacheTitle: &apos;&apos;,</span><br><span class="line"></span><br><span class="line">visibility:&apos;all&apos;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods&#123;</span><br><span class="line"></span><br><span class="line">addTodo:function()&#123;</span><br><span class="line"></span><br><span class="line">  var value = this.newTodo.trim();</span><br><span class="line">  var timestamp = Math.floor(Date.now());</span><br><span class="line"></span><br><span class="line">  if(!value)&#123;</span><br><span class="line">  return</span><br><span class="line">  &#125;</span><br><span class="line">  this.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: false</span><br><span class="line">  &#125;);</span><br><span class="line">  this.newTodo = &apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">removeTodo:function(key)&#123;</span><br><span class="line">this.todos.splice(key,1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">//編輯待辦事項的方法</span><br><span class="line">editTodo: function (item) &#123;</span><br><span class="line">this.cacheTodo = item;</span><br><span class="line">this.cacheTitle = item.title;</span><br><span class="line">console.log(item)</span><br><span class="line"> &#125;,</span><br><span class="line"> //取消編輯</span><br><span class="line"> cancelEdit: function () &#123;</span><br><span class="line"> this.cacheTodo = &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  //儲存完成的編輯</span><br><span class="line">   doneEdit: function (item) &#123;</span><br><span class="line">                    item.title = this.cacheTitle;</span><br><span class="line">                    this.cacheTitle = &apos;&apos;;</span><br><span class="line">                    this.cacheTodo = &#123;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure><h3 id="STEP5-修改刪除項目的索引"><a href="#STEP5-修改刪除項目的索引" class="headerlink" title="STEP5 修改刪除項目的索引"></a>STEP5 修改刪除項目的索引</h3><p>修正刪除項目的索引位置</p><h4 id="HTML-部份-3"><a href="#HTML-部份-3" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><ul><li>刪除鍵本來傳入的是 key，改成傳入 item</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;準備要做的任務&quot; v-model=&quot;newTodo &quot; :id=&quot;item.id&quot; @keyup.enter=&quot;addTodo&quot;&gt;</span><br><span class="line"> &lt;button class=&quot;btn btn-primary&quot; @click=&quot;addTodo&quot;&gt;新增&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//雙擊修改</span><br><span class="line"> &lt;li class=&quot;todoItem&quot; v-for=&quot;(item,key) in filteredTodos&quot; @dblclick=&quot;editTodo(item)&quot;&gt;</span><br><span class="line">//判斷是否顯示編輯框</span><br><span class="line">&lt;div class=&quot;d-flex&quot; v-if=&quot;item.id !==cacheTodo.id&quot;&gt;</span><br><span class="line"> &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; v-model=&quot;item.completed&quot; :id=&quot;item.id&quot;&gt;</span><br><span class="line">  &lt;label class=&quot;form-check-label&quot; :class=&quot;&#123;&apos;completed&apos;:item.completed&#125;&quot; :for=&quot;item.id&quot;&gt;</span><br><span class="line">&#123;&#123;item.title&#125;&#125;</span><br><span class="line"> &lt;button type=&quot;button&quot; class=&quot;btn-delete&quot;</span><br><span class="line"> //參數是item，就是目前點選的物件</span><br><span class="line"> @click=&quot;removeTodo(item)&quot;&gt;刪除&lt;/button&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"> &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-if=&quot;item.id ===cacheTodo.id&quot; v-model=&quot;cacheTitle&quot;</span><br><span class="line">@keyup.esc=&quot;cancelEdit()&quot; @keyup.enter=&quot;doneEdit(item)&quot;&gt;</span><br><span class="line"> &lt;/li&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-4"><a href="#JavaScript-部份-4" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><ul><li>在 removeTodo 裡，原本傳入的是索引值，現修正為 todo list 本身</li><li>在裡面宣告 newIndex 等於一空值</li><li>用迴圈比對刪除的物件跟所有物件的 id 要符合，如果符合就取出他的索引值，並放到要刪除的位置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:&apos;&apos;</span><br><span class="line">todos:[&#123;</span><br><span class="line">id:&apos;345&apos;,</span><br><span class="line">title: &apos;你好&apos;,</span><br><span class="line">completed:false</span><br><span class="line">&#125;],</span><br><span class="line">//暫存編輯事項</span><br><span class="line">cacheTodo: &#123;&#125;,</span><br><span class="line">cacheTitle: &apos;&apos;,</span><br><span class="line"></span><br><span class="line">visibility:&apos;all&apos;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods&#123;</span><br><span class="line"></span><br><span class="line">addTodo:function()&#123;</span><br><span class="line"></span><br><span class="line">  var value = this.newTodo.trim();</span><br><span class="line">  var timestamp = Math.floor(Date.now());</span><br><span class="line"></span><br><span class="line">  if(!value)&#123;</span><br><span class="line">  return</span><br><span class="line">  &#125;</span><br><span class="line">  this.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: false</span><br><span class="line">  &#125;);</span><br><span class="line">  this.newTodo = &apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">//讓所有待辦事項的索引值保持一致，函數參數要改成todo本身</span><br><span class="line"> removeTodo: function (todo) &#123;</span><br><span class="line"> var newIndex = &quot;&quot;;</span><br><span class="line"> var vm = this;</span><br><span class="line">vm.todos.forEach(function (item, key) &#123;</span><br><span class="line">if (todo.id === item.id) &#123;</span><br><span class="line">newIndex = key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">this.todos.splice(newIndex, 1)</span><br><span class="line">&#125;,,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="STEP6-刪除全部及還有幾筆任務未完成"><a href="#STEP6-刪除全部及還有幾筆任務未完成" class="headerlink" title="STEP6 刪除全部及還有幾筆任務未完成"></a>STEP6 刪除全部及還有幾筆任務未完成</h3><h4 id="HTML-部份-4"><a href="#HTML-部份-4" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;control&quot;&gt;</span><br><span class="line">&lt;a class=&quot;btn&quot; href=&quot;#&quot; @click=&quot;clearAll&quot;&gt;清除所有任務&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">&lt;span&gt;還有 &#123;&#123;undoneRecords &#125;&#125; 筆任務未完成&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-5"><a href="#JavaScript-部份-5" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line"> clearAll: function () &#123; this.todos = [];</span><br><span class="line">&#125;&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> computed: &#123;</span><br><span class="line"> undoneRecords:function()&#123;</span><br><span class="line">var undoneRecords=[];</span><br><span class="line"> this.todos.forEach(function(item)&#123;</span><br><span class="line"> if(!item.completed)&#123;</span><br><span class="line"> undoneRecords.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"> return.undoneRecords.length;</span><br><span class="line"> &#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;Vue 練習 - Todo List 待辦事項清單 - &lt;a href=&quot;https://chiangyuchi.githu
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 -  串接環保署空氣品質開放資料</title>
    <link href="http://yoursite.com/2019/08/23/2019-08-23/"/>
    <id>http://yoursite.com/2019/08/23/2019-08-23/</id>
    <published>2019-08-22T16:00:00.000Z</published>
    <updated>2019-10-11T05:40:28.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 取得環保署開放數據資料 - <a href="https://chiangyuchi.github.io/air-quality/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>串接環保署的空氣數據開放資料，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/PZ3PIVz.png" alt></p><ul><li>運用 fecth 取得遠端資料</li><li>載入資料完成後，關閉 loading ring</li><li>將自定義色彩搭配遠端數據</li></ul><h1 id="2-功能"><a href="#2-功能" class="headerlink" title="2.功能"></a>2.功能</h1><p>首先設定 HTML 結構，並且設定相應變數：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ar loading = <span class="built_in">document</span>.querySelector(<span class="string">'.loading'</span>)</span><br><span class="line"><span class="keyword">var</span> select = <span class="built_in">document</span>.getElementById(<span class="string">'location'</span>); <span class="comment">//區域選單</span></span><br><span class="line"><span class="keyword">var</span> placeTitle = <span class="built_in">document</span>.querySelector(<span class="string">'.location'</span>); <span class="comment">//區域名稱顯示</span></span><br><span class="line"><span class="keyword">var</span> degree = <span class="built_in">document</span>.querySelector(<span class="string">'.degree'</span>);<span class="comment">//呈現空氣品質的色彩表</span></span><br><span class="line"><span class="keyword">var</span> time = <span class="built_in">document</span>.querySelector(<span class="string">'.time'</span>);<span class="comment">//更新時間</span></span><br><span class="line"><span class="keyword">var</span> infoList = <span class="built_in">document</span>.querySelector(<span class="string">'.infoList'</span>);<span class="comment">//該區域的詳細鄉鎮列表與數據</span></span><br><span class="line"><span class="keyword">var</span> detailTitle = <span class="built_in">document</span>.querySelector(<span class="string">'.detailTitle'</span>);<span class="comment">//點選鄉鎮後會被呈顯於左方的個別鄉鎮名稱</span></span><br><span class="line"><span class="keyword">var</span> detail = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.detail .number'</span>);<span class="comment">//個別鄉鎮的數據</span></span><br></pre></td></tr></table></figure><p>這次練習使用 <code>fetch</code> 取得遠端資料。網路說明 <code>fetch</code> 和 <code>jQuery.ajax()</code> 有幾個主要的的差異:</p><pre><code>- fetch 會使用 ES6 的 Promise 作回應- then 作為下一步- catch 作為錯誤回應 (404, 500…)- 回傳的為 ReadableStream 物件，需要使用不同資料類型使用對應方法，才能正確取得資料物件。`fetch` 後方會接 `then()`，這是 `Promise`的特性，資料取得後可在 then 裡面接收。return response.json(); 的資料則會傳到下一個 then()；Fetch API 的 Response 物件中的 body 屬性提供了一個 ReadableStream 的實體，這個階段我們無法直接讀取資料內容，而 ReadableStream 物件中，可用 json() 取得資料</code></pre><p>將遠端資料儲存在變數，並且用 for 迴圈以及 add()方法將縣市的欄位添加到 Set 結構當中。再依序為資料添加新的 DOM 元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url =</span><br><span class="line">  <span class="string">"https://cors-anywhere.herokuapp.com/http://opendata.epa.gov.tw/webapi/Data/REWIQA/?format=json"</span>;</span><br><span class="line">fetch(url, &#123;&#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//會得到一個 ReadableStream 的物件</span></span><br><span class="line">    <span class="keyword">return</span> response.json();</span><br><span class="line">    <span class="comment">//透過 json()轉成可用的資訊</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    getData(data); <span class="comment">//save data</span></span><br><span class="line">    updateAll(<span class="string">"新北市"</span>); <span class="comment">//更新所有頁面 ( datail, infoList)</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    loading.style.display = <span class="string">"none"</span>; <span class="comment">//待資料渲染至頁面後，關閉 loading page</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> datalist;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  datalist = data;</span><br><span class="line">  <span class="keyword">let</span> location = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; datalist.length; i++) &#123;</span><br><span class="line">    location.add(datalist[i].County);</span><br><span class="line">  &#125;</span><br><span class="line">  addInSelect(location);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addInSelect</span>(<span class="params">location</span>) </span>&#123;</span><br><span class="line">  location.forEach(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> option = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>);</span><br><span class="line">    option.setAttribute(<span class="string">"value"</span>, element);</span><br><span class="line">    option.innerHTML = element;</span><br><span class="line">    select.appendChild(option);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設定 2 個監聽事件：獲取該區域全部資料、獲取個別鄉鎮的數據。點擊選單後，會將該縣市的資料都顯示在畫面上，另外，如果點擊下方的單一鄉鎮，如果點到的節點是連結，就會把細節更新在左方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select.addEventListener(<span class="string">"change"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  updateAll(e.target.value);</span><br><span class="line">&#125;);</span><br><span class="line">infoList.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">if</span> (e.target.nodeName == <span class="string">"A"</span>) &#123;</span><br><span class="line">    updateDetail(e.target.textContent);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>將色彩資訊儲存在陣列裡面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//儲存色彩資訊</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> colors = [</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"良好"</span>,</span><br><span class="line">    color: <span class="string">"#95F084"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"普通"</span>,</span><br><span class="line">    color: <span class="string">"#FFE695"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"對敏感族群不健康"</span>,</span><br><span class="line">    color: <span class="string">"#FFAF6A"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"對所有族群不健康"</span>,</span><br><span class="line">    color: <span class="string">"#FF5757"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"非常不健康"</span>,</span><br><span class="line">    color: <span class="string">"#9777FF"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"危害"</span>,</span><br><span class="line">    color: <span class="string">"#AD1774"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//套用顏色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; degree.children.length; i++) &#123;</span><br><span class="line">  degree.children[i].style.backgroundColor = colors[i].color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新選擇的縣市所有資料在畫面上，點擊的縣市名稱會顯示在畫面上，並且用那個縣市的第一筆資料的更新時間。這裡要用幾個判斷式：過濾的資料要等於我們點擊的縣市、呈現在列表中的空氣品質顏色是根據取得回來的數據比對剛剛我們自行設定的顏色物件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateAll</span>(<span class="params">location</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//更新標題</span></span><br><span class="line">  placeTitle.innerHTML = location;</span><br><span class="line">  <span class="comment">//更新時間</span></span><br><span class="line">  time.innerHTML = datalist[<span class="number">0</span>].PublishTime + <span class="string">" 更新"</span>;</span><br><span class="line">  <span class="comment">//清空 infoList</span></span><br><span class="line">  infoList.innerHTML = <span class="string">""</span>;</span><br><span class="line">  <span class="comment">//更新 infoList</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//我們想要呈現在銀幕上的資料，在datalist裡一個一個過去</span></span><br><span class="line">  <span class="keyword">let</span> data = datalist.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//如果過濾出來的，是我們點選的，就回傳</span></span><br><span class="line">    <span class="keyword">if</span> (item.County == location) &#123;</span><br><span class="line">      <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//以 AQI 由大到小排序</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//這裡的data 是上面過濾過的data</span></span><br><span class="line">  <span class="keyword">let</span> sortedData = data.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> x = a.AQI;</span><br><span class="line">    <span class="keyword">let</span> y = b.AQI;</span><br><span class="line">    <span class="keyword">return</span> y - x;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//排序過的資料，要組字串放入畫面</span></span><br><span class="line">  <span class="comment">//傳入並在給定的函式當做參數，都執行一次</span></span><br><span class="line">  sortedData.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//宣告一個新變數，是新的li 節點</span></span><br><span class="line">    <span class="keyword">let</span> newList = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">    <span class="comment">//如果傳入的參數的 AQI 是空值或hypen，就替代為N/A</span></span><br><span class="line">    <span class="keyword">if</span> ((el.AQI == <span class="string">""</span>) | (el.AQI == <span class="string">"-"</span>)) &#123;</span><br><span class="line">      el.AQI = <span class="string">"N/A"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上色，在上面的顏色陣列裡尋找，如果顏色的狀態跟傳入的el狀態一樣，回傳顏色</span></span><br><span class="line">    <span class="keyword">let</span> colorList = colors.find(<span class="function"><span class="params">col</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (col.status == el.Status) &#123;</span><br><span class="line">        <span class="keyword">return</span> col;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//若資料內沒有 status (設備維修) 則套用此顏色</span></span><br><span class="line">    <span class="keyword">if</span> (colorList == <span class="literal">undefined</span>) &#123;</span><br><span class="line">      colorList = &#123;</span><br><span class="line">        color: <span class="string">"#EEEEEE"</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//組字串並更新</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">`&lt;div class="infoBox"&gt;</span></span><br><span class="line"><span class="string">                       &lt;a href='#' class="place infoBox"&gt;<span class="subst">$&#123;el.SiteName&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">                       &lt;div class="AQI infoBox" style="background-color:<span class="subst">$&#123;colorList.color&#125;</span>"&gt;<span class="subst">$&#123;el.AQI&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">                   &lt;/div&gt;`</span>;</span><br><span class="line">    newList.innerHTML = str;</span><br><span class="line"></span><br><span class="line">    infoList.appendChild(newList);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//並且更新細項，把排序第一個</span></span><br><span class="line">  updateDetail(sortedData[<span class="number">0</span>].SiteName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新單一鄉鎮的資料在左邊欄位。點擊單一鄉鎮的名稱，比對資料裡的 SiteName 如果符合，就渲染在左邊欄位。首先要將該鄉鎮的資料重新儲存在一個空陣列裡面細節標題的第一項，更新成上面的 SiteName ，就是該站點的 AQI 屬性。著色的方式同上，它是在 colors 陣列裡面比對要取回的顏色，find 方法會對每個元素執行一次 callback 函式，直到找到一個讓 callback 函式回傳 true 的元素。當元素被找到的時候，find 會立刻回傳該元素，否則 find 會回傳 undefined。這個陣列裡面比對的狀態，當成 col 參數在這個方法裡運作，比對傳入元素的狀態，如果符合，就回傳色彩。所以要判斷這個 colorlist 的 status 是否等於傳入的項目的 status，如果是，就回傳。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateDetail</span>(<span class="params">place</span>) </span>&#123;</span><br><span class="line">  datalist.find(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//如果在d</span></span><br><span class="line">    <span class="keyword">if</span> (item.SiteName == place) &#123;</span><br><span class="line">      <span class="comment">//將各項空污指標存入陣列中</span></span><br><span class="line">      <span class="keyword">let</span> data = [];</span><br><span class="line">      data.push(item.O3, item.PM10, item[<span class="string">"PM2.5"</span>], item.CO, item.SO2, item.NO2);</span><br><span class="line">      <span class="comment">//更新 detailTitle</span></span><br><span class="line">      detailTitle.children[<span class="number">0</span>].innerHTML = place; <span class="comment">//更新地點</span></span><br><span class="line">      detailTitle.children[<span class="number">1</span>].innerHTML = item.AQI; <span class="comment">//更新分數</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//上色</span></span><br><span class="line">      <span class="keyword">let</span> colorList = colors.find(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (el.status == item.Status) &#123;</span><br><span class="line">          <span class="keyword">return</span> el;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      detailTitle.children[<span class="number">1</span>].style.backgroundColor = colorList.color;</span><br><span class="line">      <span class="comment">//將 data內的資料更新至 detail上</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (data[i] == <span class="string">""</span>) &#123;</span><br><span class="line">          data[i] = <span class="string">"N/A"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        detail[i].innerHTML = data[i];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 取得環保署開放數據資料 - &lt;a href=&quot;https://chiangyuchi.git
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 練習 - 串接新北市 Youbike 開放資料</title>
    <link href="http://yoursite.com/2019/08/20/2019-08-20/"/>
    <id>http://yoursite.com/2019/08/20/2019-08-20/</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2019-10-11T05:39:47.695Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>jQuery 練習 - 取得新北市 Youbike 開放數據資料 - <a href="https://chiangyuchi.github.io/youbike/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>串接新北市政府提供的 Youbike 位置資訊，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/iuIlX7J.jpg" alt></p><ul><li>利用 Ajax 取得數據資料</li><li>解決跨來源資源共用（Cross-Origin Resource Sharing）問題</li><li>運用 jQuery</li><li>載入畫面時呈現全部資料</li><li>可過濾點擊地區</li></ul><h1 id="2-功能"><a href="#2-功能" class="headerlink" title="2.功能"></a>2.功能</h1><p>基礎的 HTML 結構先設定選單，由於選擇區域的顯示數量不一定，所以我們先單純設定選單及待會要放置的項目類別即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>新北市 YouBike 租借資訊<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"select-area"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"choosePos"</span> <span class="attr">id</span>=<span class="string">"select"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ..... --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"五股區"</span>&gt;</span>五股<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"八里區"</span>&gt;</span>八里<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"淡水區"</span>&gt;</span>淡水<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"三芝區"</span>&gt;</span>三芝<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"石門區"</span>&gt;</span>石門<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"site-content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site-items"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先設定監聽事件，並且觸發事件的時候，到時會先呈現所有的資料</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>)</span><br><span class="line">    .val(<span class="string">"all"</span>)</span><br><span class="line">    .trigger(<span class="string">"change"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>接著使用 <code>jQuery.ajax()</code> 取得 XMLHttpRequest 物件，並且使用跨域代理伺服器(CORS PROXY)，解決讀取第三方網站資料問題。否則在系統控制台會出現以下訊息：<br><img src="https://i.imgur.com/XUX9ROK.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> URI =</span><br><span class="line">    <span class="string">"https://cors-anywhere.herokuapp.com/https://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001"</span>;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  $(<span class="string">"#select"</span>)</span><br><span class="line">    .val(<span class="string">"all"</span>)</span><br><span class="line">    .trigger(<span class="string">"change"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>成功取得資料<br><img src="https://i.imgur.com/AkWZeTS.png" alt></p><p>接著設定一個變數是我們待會要將篩選資料放置到畫面上的位置，並且以 <code>each(function(index,element)</code>遍歷我們取得的資料，<code>index</code>是個別資訊在全部資料中的索引位置，要取得它們的值接著依序將它們各自存入變數中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chooseArea = e.target.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">""</span>;</span><br><span class="line">        $.each(location, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">let</span> stationName = value.sna;</span><br><span class="line">          <span class="keyword">let</span> updateTime = value.mday;</span><br><span class="line">          <span class="keyword">let</span> bikeAvailble = value.sbi;</span><br><span class="line">          <span class="keyword">let</span> parkingSpace = value.bemp;</span><br><span class="line">          <span class="keyword">let</span> addCN = value.ar;</span><br><span class="line">          <span class="keyword">let</span> addEn = value.sareaen;</span><br><span class="line">          <span class="keyword">let</span> stationEn = value.snaen;</span><br><span class="line">          <span class="keyword">let</span> stationInfo =</span><br><span class="line">            <span class="string">'&lt;div class="site-item"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-name"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="station"&gt;'</span> +</span><br><span class="line">            stationName +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="update-time"&gt;'</span> +</span><br><span class="line">            <span class="string">"更新："</span> +</span><br><span class="line">            updateTime +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">' &lt;div class="site-info"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-bike"&gt;'</span> +</span><br><span class="line">            <span class="string">"可租借數量："</span> +</span><br><span class="line">            bikeAvailble +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-empty"&gt;'</span> +</span><br><span class="line">            <span class="string">"可還空位數:"</span> +</span><br><span class="line">            parkingSpace +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-add"&gt;'</span> +</span><br><span class="line">            <span class="string">"地址："</span> +</span><br><span class="line">            addCN +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="sareaen"&gt;'</span> +</span><br><span class="line">            <span class="string">"Area:"</span> +</span><br><span class="line">            addEn +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="snaen"&gt;'</span> +</span><br><span class="line">            <span class="string">"Site-Name:"</span> +</span><br><span class="line">            stationEn +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>設定條件，如果點擊選單的地區值等於所取得的遠端資料的地區值，則將相關資料放置到畫面上；如果選擇的區域是顯示全部，則放入所有取回的資料。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> URI =</span><br><span class="line">    <span class="string">"https://cors-anywhere.herokuapp.com/https://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001"</span>;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chooseArea = e.target.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">""</span>;</span><br><span class="line">        $.each(location, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">          <span class="comment">//...</span></span><br><span class="line">          <span class="keyword">if</span> (chooseArea == value.sarea) &#123;</span><br><span class="line">            str += stationInfo;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (chooseArea == <span class="string">"all"</span>) &#123;</span><br><span class="line">            str += stationInfo;</span><br><span class="line">          &#125;</span><br><span class="line">          $(<span class="string">".site-items"</span>)</span><br><span class="line">            .hide()</span><br><span class="line">            .html(str)</span><br><span class="line">            .fadeIn(<span class="number">400</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;jQuery 練習 - 取得新北市 Youbike 開放數據資料 - &lt;a href=&quot;https://chiangyuch
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 牌卡記憶遊戲</title>
    <link href="http://yoursite.com/2019/08/17/2019-08-17/"/>
    <id>http://yoursite.com/2019/08/17/2019-08-17/</id>
    <published>2019-08-16T16:00:00.000Z</published>
    <updated>2019-10-11T05:37:01.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 牌卡記憶遊戲 - <a href="https://chiangyuchi.github.io/memory-game/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是一個蠻常見的 JavaScript 基礎題目練習，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/OzXLTaW.jpg" alt></p><ul><li>把陣列的十二張圖片顯示在畫面</li><li>複製圖片為偶數</li><li>隨機顯示圖片排列順序</li><li>呈現圖片的選擇狀態</li><li>一次只能選取兩張</li><li>如果圖片配對成功就隱藏</li><li>如果猜錯或猜對都可以重新開始選擇</li><li>牌卡可以翻面</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>這個練習的 HTML 原始結構較為簡單，因為希望牌卡順序可以隨機排列，所以先不設定圖片位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"game"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">900px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">80px</span> auto;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: contain;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: center center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先要建立儲存牌卡的地方，每一張卡都有不同的值，所以建立一個陣列，將它儲存在 <code>cardsArray</code> 變數中，每個物件都包含一個名稱與圖片。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cardsArray = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"spade"</span>,</span><br><span class="line">    img: <span class="string">"img/spade.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"two"</span>,</span><br><span class="line">    img: <span class="string">"img/two.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"three"</span>,</span><br><span class="line">    img: <span class="string">"img/three.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"four"</span>,</span><br><span class="line">    img: <span class="string">"img/four.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"five"</span>,</span><br><span class="line">    img: <span class="string">"img/five.jpg"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"ten"</span>,</span><br><span class="line">    img: <span class="string">"img/ten.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"knight"</span>,</span><br><span class="line">    img: <span class="string">"img/knight.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"queen"</span>,</span><br><span class="line">    img: <span class="string">"img/queen.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"king"</span>,</span><br><span class="line">    img: <span class="string">"img/king.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"joker"</span>,</span><br><span class="line">    img: <span class="string">"img/joker.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"heart"</span>,</span><br><span class="line">    img: <span class="string">"img/heart3.png"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>接著要把牌卡顯示在畫面上，需先獲取放置牌卡的位置，先以 <code>Document.createElement()</code>方法建立 <code>section</code> 元素，再以<code>Element.setAttribute()</code>方法設定元素的 <code>class</code> 屬性名稱，最後將新增元素附加到 <code>DOM</code> 結構中。顯示圖片的重點是使用迴圈獲取陣列裡儲存的資料、為每一張卡片建立一個類別、名稱、屬性，最後再附加到我剛建立的放圖片的位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> game = <span class="built_in">document</span>.getElementById(<span class="string">"game"</span>);</span><br><span class="line"><span class="keyword">const</span> grid = <span class="built_in">document</span>.createElement(<span class="string">"section"</span>);</span><br><span class="line">grid.setAttribute(<span class="string">"class"</span>, <span class="string">"grid"</span>);</span><br><span class="line">game.appendChild(grid);</span><br><span class="line"></span><br><span class="line">cardsArray.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> card = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  card.classList.add(<span class="string">"card"</span>);</span><br><span class="line">  card.dataset.name = item.name;</span><br><span class="line">  card.style.backgroundImage = <span class="string">`url(<span class="subst">$&#123;item.img&#125;</span>)`</span>;</span><br><span class="line">  grid.appendChild(card);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>接下來要使每種圖片都成偶數，這裡使用 <code>concat()</code> 方法，這個方法可以合併陣列，但不會改變現有的陣列，而是回傳一個新的陣列。<br>舉例來說：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>];</span><br><span class="line"><span class="built_in">console</span>.log(array1.concat(array2));</span><br><span class="line"><span class="comment">// Array ["a", "b", "c", "d", "e", "f"]</span></span><br></pre></td></tr></table></figure><p>因此建立一個新的變數，並且以剛剛儲存陣列的變數為傳入方法的參數，再以<code>sort</code>與 <code>Math.random()</code>隨機排列陣列。<code>sort()</code> 方法會原地對一個陣列的所有元素進行排序，並回傳此陣列。<code>Math.random</code> 回傳 0~1 之間的隨機數字。最後修改剛剛迴圈要遍歷的對象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lvar gameGrid = cardsArray.concat(cardsArray).sort(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.5</span> - <span class="built_in">Math</span>.random();</span><br><span class="line">&#125;);</span><br><span class="line">gameGrid.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br></pre></td></tr></table></figure><p>設定監聽事件，如果點擊的確實是卡片，就會翻面</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.selected</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(180deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> clicked = event.target;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (clicked.nodeName === <span class="string">"SECTION"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>卡片一次只能點選 2 張，因此設定一個計數器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">  count++;</span><br><span class="line">  clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設定卡片配對條件，如果配對成功，就會從畫面隱藏。新增一個函數遍歷所有被點擊的卡片，如果配對成功就為卡片新增 class 屬性 <code>match</code>。條件是第一個點擊的卡片的名稱屬性要等於第二個點擊卡片的名稱屬性，如果相同，就呼叫 <code>match()</code>函數。並且不能同一張卡片的位置點擊 2 次。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.match</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> firstGuess = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> secondGuess = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> previousTarget = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> match = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> selected = <span class="built_in">document</span>.querySelectorAll(<span class="string">".selected"</span>);</span><br><span class="line">  selected.forEach(<span class="function"><span class="params">card</span> =&gt;</span> &#123;</span><br><span class="line">    card.classList.add(<span class="string">"match"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (clicked.nodeName === <span class="string">"SECTION"</span> || clicked === previousTarget) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">if</span> (count === <span class="number">1</span>) &#123;</span><br><span class="line">      firstGuess = clicked.dataset.name;</span><br><span class="line">      clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      secondGuess = clicked.dataset.name;</span><br><span class="line">      clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (firstGuess !== <span class="string">""</span> &amp;&amp; secondGuess !== <span class="string">""</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (firstGuess === secondGuess) &#123;</span><br><span class="line">        match();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  previousTarget = clicked;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>點擊卡片 2 次後，猜錯或猜對都可以重新開始選擇。設定一個可以讓我們再次遊戲的函數。也就是以迴圈檢查所有已被選擇的卡片，並且移除他們的目前的選擇樣式。在條件句裡面呼叫這個函數。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> resetGuesses = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  firstGuess = <span class="string">""</span>;</span><br><span class="line">  secondGuess = <span class="string">""</span>;</span><br><span class="line">  count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> selected = <span class="built_in">document</span>.querySelectorAll(<span class="string">".selected"</span>);</span><br><span class="line">  selected.forEach(<span class="function"><span class="params">card</span> =&gt;</span> &#123;</span><br><span class="line">    card.classList.remove(<span class="string">"selected"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  <span class="keyword">if</span> (firstGuess === secondGuess) &#123;</span><br><span class="line">  match();</span><br><span class="line">  resetGuesses();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    resetGuesses();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>目前卡片都還只有一面，我們現在新增了一個 <code>front</code> 與 <code>back</code> 標籤，但是卡片的名稱屬性還是屬於它們的父層，所以要修改一下使點擊時的選擇狀態仍是添加在被點擊者的父層。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">gameGrid.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> card = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  card.classList.add(<span class="string">"card"</span>);</span><br><span class="line">  card.dataset.name = item.name;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卡片正面</span></span><br><span class="line">  <span class="keyword">const</span> front = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  front.classList.add(<span class="string">"front"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卡片背面</span></span><br><span class="line">  <span class="keyword">const</span> back = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  back.classList.add(<span class="string">"back"</span>);</span><br><span class="line">  back.style.backgroundImage = <span class="string">`url(<span class="subst">$&#123;item.img&#125;</span>)`</span>;</span><br><span class="line"></span><br><span class="line">  grid.appendChild(card);</span><br><span class="line">  card.appendChild(front);</span><br><span class="line">  card.appendChild(back);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (count === <span class="number">1</span>) &#123;</span><br><span class="line">    firstGuess = clicked.parentNode.dataset.name;</span><br><span class="line">    <span class="built_in">console</span>.log(firstGuess);</span><br><span class="line">    clicked.parentNode.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    secondGuess = clicked.parentNode.dataset.name;</span><br><span class="line">    <span class="built_in">console</span>.log(secondGuess);</span><br><span class="line">    clicked.parentNode.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>最後設定翻面的時候，另一面不可見</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.back</span>,</span><br><span class="line"><span class="selector-class">.front</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 牌卡記憶遊戲 - &lt;a href=&quot;https://chiangyuchi.github.i
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 骰子遊戲</title>
    <link href="http://yoursite.com/2019/08/12/2019-08-12/"/>
    <id>http://yoursite.com/2019/08/12/2019-08-12/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2019-10-11T05:36:07.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - Rolling Dice Game - <a href="https://chiangyuchi.github.io/rolldice/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是 Udemy 上的課程的一個小遊戲，操作 click 事件，並搭配判斷式切換玩家，以及新增 class，實現擲骰子遊戲。</p><p><img src="https://i.imgur.com/YbiR3M7.jpg" alt></p><ul><li>以判斷式當擲出 1，則切換玩家，並且此輪不累積分數</li><li>當連續擲出 2 個 6 的時候，判定兩方誰目前累積的所有分數歸零</li><li>可儲存該輪暫存分數到總分裡</li><li>需判定誰達到勝利標準</li><li>可由玩家輸入自行決定最後的勝利標準</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>宣告儲存累積總分、每一輪獲得的分數、該輪玩家、啟動遊戲的變數，並且在載入畫面的時候，就呼叫一個初始化的函數，裡面會將累積總分、每一輪獲得的分數、遊戲啟動狀態、骰子是否顯示、預設玩家…都恢復到初始值。這樣的寫法，可促進程式碼的簡潔度，只要在需要的時候，如展開新遊戲的時候，在該函式內再度呼叫初始化。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-0-panel active"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-name"</span> <span class="attr">id</span>=<span class="string">"name-0"</span>&gt;</span>Player 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-score"</span> <span class="attr">id</span>=<span class="string">"score-0"</span>&gt;</span>43<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-label"</span>&gt;</span>Current<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-score"</span> <span class="attr">id</span>=<span class="string">"current-0"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-1-panel"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-name"</span> <span class="attr">id</span>=<span class="string">"name-1"</span>&gt;</span>Player 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-score"</span> <span class="attr">id</span>=<span class="string">"score-1"</span>&gt;</span>72<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-label"</span>&gt;</span>Current<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-current-score"</span> <span class="attr">id</span>=<span class="string">"current-1"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-new"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"ion-ios-plus-outline"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>New game<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-roll"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"ion-ios-loop"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>Roll dice<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-hold"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"ion-ios-download-outline"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>Hold<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./dice-5.png"</span> <span class="attr">alt</span>=<span class="string">" dice"</span> <span class="attr">class</span>=<span class="string">"dice"</span> <span class="attr">id</span>=<span class="string">"dice-1"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Final score"</span> <span class="attr">class</span>=<span class="string">"final-score"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scores, roundScore, activePlayer, gamePlaying;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  scores = [<span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  activePlayer = <span class="number">0</span>;</span><br><span class="line">  gamePlaying = <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-0"</span>).textContent = <span class="string">"Player 1"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-1"</span>).textContent = <span class="string">"Player 2"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.add(<span class="string">"active"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遊戲的進行，主要都是由 <code>if</code>、<code>else if</code>、<code>else</code> 來判斷。觸發 click 事件後，先判定遊戲啟動，再產生隨機數字，並且將產生的隨機數字儲存在宣告在判斷式當中的變數裡面，依據儲存的數字，調用要顯示在畫面上的骰子圖案。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-roll"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    <span class="keyword">var</span> dice = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">6</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> diceDOM = <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>);</span><br><span class="line">    diceDOM.style.display = <span class="string">"block"</span>;</span><br><span class="line">    diceDOM.src = <span class="string">"dice-"</span> + dice + <span class="string">".png"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>這裡加入兩個遊戲規則：第一個規則、如果連續擲出 2 個 6，則目前累積的總分，以及該輪的暫存分數都歸 0。所以要設定儲存前一個骰子的變數。<code>lastDice</code>。<img src="https://i.imgur.com/vbWIyxZ.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dice === <span class="number">6</span> &amp;&amp; lastDice === <span class="number">6</span>) &#123;</span><br><span class="line">  scores[activePlayer] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent = <span class="string">"0"</span>;</span><br><span class="line">  nextPlayer();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lastDice = dice;</span><br></pre></td></tr></table></figure><p>第二個規則、如果擲出 1，該輪暫存分數不能計分，會直接跳到下一個玩家。<br><img src="https://i.imgur.com/jU47Md2.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dice !== <span class="number">1</span>) &#123;</span><br><span class="line">            roundScore += dice;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">'#current-'</span> + activePlayer).textContent = roundScore;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            nextPlayer();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>使用 ternary operator 及 toggle 切換玩家</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextPlayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  activePlayer === <span class="number">0</span> ? (activePlayer = <span class="number">1</span>) : (activePlayer = <span class="number">0</span>);</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>玩家可擲無限多次骰子後，再選擇把分數儲存到總分裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-hold"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    scores[activePlayer] += roundScore;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent =</span><br><span class="line">      scores[activePlayer];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>預設勝利分數是 20 分，也可以由玩家自行決定勝利總分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.querySelector(<span class="string">".final-score"</span>).value;</span><br><span class="line"><span class="keyword">var</span> winningScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (input) &#123;</span><br><span class="line">  winningScore = input;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  winningScore = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (scores[activePlayer] &gt;= winningScore) &#123;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#name-"</span> + activePlayer).textContent = <span class="string">"Winner!"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.add(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  gamePlaying = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新開始遊戲</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-new"</span>).addEventListener(<span class="string">"click"</span>, init);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - Rolling Dice Game - &lt;a href=&quot;https://chiangyuc
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 九九乘法表</title>
    <link href="http://yoursite.com/2019/08/08/2019-08-08/"/>
    <id>http://yoursite.com/2019/08/08/2019-08-08/</id>
    <published>2019-08-07T16:00:00.000Z</published>
    <updated>2019-10-11T05:35:36.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 九九乘法表 - <a href="https://chiangyuchi.github.io/multiplication-chart/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是 六角學院的一個小挑戰，使用 JavaScript for 迴圈獲取九九乘法表所有內容。</p><p><img src="https://i.imgur.com/l5wfo8D.png" alt></p><ul><li>使用 for 迴圈獲取九九成法表全部內容</li><li>不能將數字直接寫在 HTML 上，必須用 JavaScript 渲染</li></ul><h1 id="2-功能"><a href="#2-功能" class="headerlink" title="2. 功能"></a>2. 功能</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"mainTitle"</span>&gt;</span>九九乘法表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"secondTitle"</span>&gt;</span>MULTIPLICATION CHART<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>這個練習，用到的是最基本的 <code>for Loop</code>、<code>createElement</code>、<code>setAttribute</code> 觀念。創造一個原本不在 HTML 結構裡的畫面。</p><ol><li>使用雙迴圈獲得九九乘法表前後相乘的 2 個數字</li><li>以 <code>Document.createElement()</code> 方法可以依指定的標籤名稱（tagName）建立 HTML 元素，</li><li>以 <code>Element.setAttribute()</code>，設定元素的屬性值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">".wrap"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createChart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> box = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">    box.setAttribute(<span class="string">"class"</span>, <span class="string">"box"</span>);</span><br><span class="line">    wrap.appendChild(box);</span><br><span class="line">    <span class="keyword">const</span> chart = <span class="built_in">document</span>.createElement(<span class="string">"ul"</span>);</span><br><span class="line">    chart.setAttribute(<span class="string">"class"</span>, <span class="string">"chart"</span>);</span><br><span class="line">    box.appendChild(chart);</span><br><span class="line">    <span class="keyword">const</span> title = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">    title.textContent = i;</span><br><span class="line">    title.setAttribute(<span class="string">"class"</span>, <span class="string">"chart_title"</span>);</span><br><span class="line">    chart.appendChild(title);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">const</span> answer = i * j;</span><br><span class="line">      <span class="keyword">const</span> list = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">      list.textContent = <span class="string">`<span class="subst">$&#123;i&#125;</span>x<span class="subst">$&#123;j&#125;</span>=<span class="subst">$&#123;answer&#125;</span>`</span>;</span><br><span class="line">      chart.appendChild(list);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createChart();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 九九乘法表 - &lt;a href=&quot;https://chiangyuchi.github.io
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 時鐘功能</title>
    <link href="http://yoursite.com/2019/08/07/2019-08-07/"/>
    <id>http://yoursite.com/2019/08/07/2019-08-07/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2019-10-11T05:35:01.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - Clock - <a href="https://chiangyuchi.github.io/clock/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是 六角學院的一個小挑戰，使用 JavaScript 原生語法獲取時間，並且讓時針持續轉動，實現時鐘功能。</p><p><img src="https://i.imgur.com/ZPAMSh5.png" alt></p><ul><li>使用 JavaScript 原生語法的 getDate() 獲取時間</li><li>使用 JavaScript 原生語法的 setInterval() 方式讓指針持續轉動。</li><li>使用 for 迴圈渲染出鐘面</li><li>以 nth-child(n) 改變重疊圖示的傾斜角度</li></ul><h1 id="2-功能"><a href="#2-功能" class="headerlink" title="2. 功能"></a>2. 功能</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-m"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-hand"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-hour"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-min"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-sec"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"round"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先刻出鐘面的底</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clock</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: $light-green-color;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line">  &amp;::before &#123;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 310<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 310<span class="selector-tag">px</span>;</span><br><span class="line">    background-color: $green-color;</span><br><span class="line">    <span class="selector-tag">border-radius</span>: 100%;</span><br><span class="line">    <span class="selector-tag">content</span>: "";</span><br><span class="line">    <span class="selector-tag">top</span>: 0;</span><br><span class="line">    <span class="selector-tag">right</span>: 0;</span><br><span class="line">    <span class="selector-tag">bottom</span>: 0;</span><br><span class="line">    <span class="selector-tag">left</span>: 0;</span><br><span class="line">    <span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;</span><br><span class="line">    <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#212f0b</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著要開始做鐘面，這裡分為兩個部分進行，這兩層的作法是類似的：</p><ol><li>12 小時及橘色的區間</li><li>60 分鐘及白色小點</li></ol><p>先設定數字及中間橘色的分隔線先以中上的 24-12 為基準點</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hour-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">48%</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">45%</span> <span class="number">245%</span>;</span><br><span class="line"></span><br><span class="line">  .line &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    background: $orange-color;</span><br><span class="line">    <span class="selector-tag">margin</span>: 8<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且用 for 迴圈，推出所有畫面所需的小時標示，所有的標示並寫入畫面上，但會發現全部的圖示都是疊在一起的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> clock = <span class="built_in">document</span>.querySelector(<span class="string">".clock"</span>);</span><br><span class="line"><span class="keyword">const</span> clockM = <span class="built_in">document</span>.querySelector(<span class="string">".clock-m"</span>);</span><br><span class="line"><span class="comment">//clock face</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> clockHour = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> clockMin = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">  clockHour += <span class="string">`&lt;div class="hour-wrap"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="hour-24"&gt;<span class="subst">$&#123;i + <span class="number">12</span>&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="line"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="hour-12"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line">  clockMin += <span class="string">`&lt;div class="minute-wrap"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;`</span>;</span><br><span class="line"></span><br><span class="line">  clock.innerHTML += clockHour;</span><br><span class="line">  clockM.innerHTML += clockMin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是結果會全部疊在一起</p><p><img src="https://i.imgur.com/6gVCKQn.png" alt></p><p>這裡的作法是用 nth-child(n) 選取器改變重疊圖示的傾斜角度，也是分成 2 個部分，第一個是小時區間＋分鐘區間，總共有 2 層，但這 2 層都分成 12 等分，一個圓 360 度，每一個小時要增加 30 度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hour-wrap</span> &#123;</span><br><span class="line">  .line &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    background: $orange-color;</span><br><span class="line">    <span class="selector-tag">margin</span>: 8<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(60deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下來是鐘面的最後一個步驟，也就是做出設計稿上每小時中間的白色點點。因為每一個小時是 30 度，因此每一個點都要多加 5 度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clock-m</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line"></span><br><span class="line">  .minute-wrap &#123;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">    <span class="selector-tag">top</span>: 30<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">left</span>: 50%;</span><br><span class="line">    <span class="selector-tag">width</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 58<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-left</span>: <span class="selector-tag">-7px</span>;</span><br><span class="line">    <span class="selector-tag">transform-origin</span>: 55% 255%;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(60deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(4)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(120deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(5)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(150deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(6)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(180deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(7)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(210deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(8)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(240deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(9)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(270deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(10)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(300deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(11)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(330deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(12)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dot</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">27px</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">58px</span>;</span><br><span class="line">      <span class="attribute">margin-left</span>: -<span class="number">7px</span>;</span><br><span class="line">      <span class="attribute">color</span>: white;</span><br><span class="line">      <span class="attribute">transform-origin</span>: <span class="number">55%</span> <span class="number">255%</span>;</span><br><span class="line"></span><br><span class="line">      &amp;:after &#123;</span><br><span class="line">        <span class="selector-tag">content</span>: "";</span><br><span class="line">        <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">        <span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-tag">white</span>;</span><br><span class="line">        <span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(5deg);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(10deg);</span><br><span class="line"></span><br><span class="line">        &amp;:before &#123;</span><br><span class="line">          <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">          <span class="selector-tag">content</span>: "";</span><br><span class="line">          <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">          <span class="selector-tag">width</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">          <span class="selector-tag">height</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">          background-color: $orange-color;</span><br><span class="line">          <span class="selector-tag">right</span>: <span class="selector-tag">-2px</span>;</span><br><span class="line">          <span class="selector-tag">top</span>: <span class="selector-tag">-10px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(15deg);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(4)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(20deg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>現在鐘面已經完成了，最後的步驟就是把指針放上，並取得時間。我們先把指針以頂端的 24-12 為基準點對準中心，　<code>transform-origin: center bottom</code>。它的轉動的方式，依照 css 的 <code>transform</code>來修改。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">hand-sec</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">126px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: $lighter-green-color;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: center bottom;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(0.1, 2.7, 0.58, 1);</span><br></pre></td></tr></table></figure><p>方式是每秒獲取一次時間，並依據取得時間的結果，去修改時針，分針，秒針的轉動角度，接下來要讓指針取得時間，這裡的取得時間的作法是參考 JavaScript 30 Days 的寫法，以 <code>new Date()</code>取得時針、分針、秒針的時間，並且用<code>setInterval()</code> 方式讓指針持續轉動。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> secondHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-sec"</span>);</span><br><span class="line"><span class="keyword">const</span> minsHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-min"</span>);</span><br><span class="line"><span class="keyword">const</span> hourHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-hour"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">const</span> seconds = now.getSeconds();</span><br><span class="line">  <span class="keyword">const</span> secondsDegree = (seconds / <span class="number">60</span>) * <span class="number">360</span>;</span><br><span class="line">  secondHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;secondsDegree&#125;</span>deg)`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(seconds);</span><br><span class="line">  <span class="keyword">const</span> mins = now.getMinutes();</span><br><span class="line">  <span class="keyword">const</span> minsDegree = (mins / <span class="number">60</span>) * <span class="number">360</span>;</span><br><span class="line">  minsHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;minsDegree&#125;</span>deg)`</span>;</span><br><span class="line">  <span class="keyword">const</span> hours = now.getHours();</span><br><span class="line">  <span class="keyword">const</span> hoursDegree = (hours / <span class="number">12</span>) * <span class="number">360</span> + (mins / <span class="number">60</span>) * <span class="number">30</span>;</span><br><span class="line">  hourHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;hoursDegree&#125;</span>deg)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setInterval(setDate, <span class="number">1000</span>);</span><br><span class="line">setDate();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - Clock - &lt;a href=&quot;https://chiangyuchi.github.io
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>AJAX (2)</title>
    <link href="http://yoursite.com/2019/08/04/2019-08-04/"/>
    <id>http://yoursite.com/2019/08/04/2019-08-04/</id>
    <published>2019-08-03T16:00:00.000Z</published>
    <updated>2019-10-11T05:39:07.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>AJAX 練習 - 取得數據資料 - <a href="https://codepen.io/Shengzhi/pen/oRVqYa" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是一個網路上 JavaScript 30 天的課程練習，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/LswgPfk.png" alt></p><ul><li>利用 Fetch API 取得數據資料</li><li>建立正規式</li><li>認識 promise</li><li>利用正規式找到內容</li><li>利用正規式取代內容</li><li>使用 change 事件和 keyup 事件</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="利用-Fetch-API-取得數據資料"><a href="#利用-Fetch-API-取得數據資料" class="headerlink" title="利用 Fetch API 取得數據資料"></a>利用 Fetch API 取得數據資料</h2><p>利用 fetch 取得數據資料的時候會先回傳 promise 給我們。Promise 是一個根據附加給他的 Callback 回傳的物件，以取代傳遞 Callback 到這個函數。它回傳的還不是我們要的資料。</p><p>查詢一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const prom = fetch(endpoint);</span><br><span class="line">console.log(prom);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/qhO5Wtw.png" alt></p><h2 id="關於-promise"><a href="#關於-promise" class="headerlink" title="關於 promise"></a>關於 promise</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Using_promises" target="_blank" rel="noopener">https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Using_promises </a></p><p>第一個回傳的是一個 <code>readableStream</code><br><img src="https://i.imgur.com/gUlw0Js.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const endpoint =&apos;https://gist.githubusercontent.com</span><br><span class="line">/Miserlou/c5cd8364bf9b2420bb29/raw/</span><br><span class="line">2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/</span><br><span class="line">cities.json&apos;;</span><br><span class="line"></span><br><span class="line">const cities = [];</span><br><span class="line">fetch(endpoint).then(blob =&gt; blob.json()).then(data =&gt; console.log(data));</span><br></pre></td></tr></table></figure><p>在上面可以看到我們已經抓取到資料，但是要怎麼把它一個一個參數個別放進陣列裡呢？ 這裡運用的是 ES6 的展開運算符<code>...</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch(endpoint).then(blob =&gt; blob.json()).then(data =&gt; cities.push(...data));</span><br></pre></td></tr></table></figure><h2 id="建立正規式"><a href="#建立正規式" class="headerlink" title="建立正規式"></a>建立正規式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let regex = new RegExp(wordToMatch, &apos;gi&apos;)</span><br></pre></td></tr></table></figure><ul><li>第一個參數是正規式的內容</li><li>第二個參數是一個 flag 旗標<ul><li>global search，會去搜尋整份文件</li><li>i 表示 case insensitive，也就是不去區分大小寫</li></ul></li></ul><h2 id="利用正規式找到內容"><a href="#利用正規式找到內容" class="headerlink" title="利用正規式找到內容"></a>利用正規式找到內容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function findMatch(wordToMatch, cities) &#123;</span><br><span class="line">      return cities.filter(place =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        const regex = new RegExp(wordToMatch, &apos;gi&apos;);</span><br><span class="line">        return place.city.match(regex) || place.state.match(regex)</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="利用正規式取代內容"><a href="#利用正規式取代內容" class="headerlink" title="利用正規式取代內容"></a>利用正規式取代內容</h2><p>replace() 方法會傳回一個新字串，此新字串是透過將原字串與 pattern 比對，但不會改變原本的字串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const regex = new RegExp(this.value, &apos;gi&apos;);</span><br><span class="line"></span><br><span class="line">const cityName = place.city.replace(regex,</span><br><span class="line">`&lt;span class=&apos;hl&apos;&gt;$&#123;this.value&#125;&lt;/span&gt;`);</span><br><span class="line"></span><br><span class="line">const stateName = place.state.replace(regex,</span><br><span class="line">`&lt;span class=&apos;hl&apos;&gt;$&#123;this.value&#125;&lt;/span&gt;`);</span><br></pre></td></tr></table></figure><h2 id="change-事件和-keyup-事件"><a href="#change-事件和-keyup-事件" class="headerlink" title="change 事件和 keyup 事件"></a>change 事件和 keyup 事件</h2><ul><li>keyup 事件 會在任何元素值改變的時候被出發（例如每打一個字都會觸發一次）</li><li>change event 則是會在有元素值改變，且該元素脫離 focus 狀態時才觸發</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">searchInput.addEventListener(&apos;change&apos;, displayMatches);</span><br><span class="line">searchInput.addEventListener(&apos;keyup&apos;, displayMatches);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;AJAX 練習 - 取得數據資料 - &lt;a href=&quot;https://codepen.io/Shengzhi/pen/oR
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://yoursite.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>AJAX (1)</title>
    <link href="http://yoursite.com/2019/08/03/2019-08-03/"/>
    <id>http://yoursite.com/2019/08/03/2019-08-03/</id>
    <published>2019-08-02T16:00:00.000Z</published>
    <updated>2019-10-11T05:38:44.534Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><p>AJAX 並非是一個技術（Technology），而是一種網站設計的架構（Architecture），雖然主要以 JavaScript 與 XML 為主，但還包括其它成員，也就是 CSS、DOM（Document Object Model）與 HTML 等，特別是 XMLHttpRequest 元件，使 AJAX 能達到非同步資料交換的目的。</p><p>在 Jesse Garrett 的文章中，對 AJAX 的定義如下：</p><p>● 使用 XHTML 與 CSS 作為展現標準<br>● 使用 DOM 作為動態顯示與互動<br>● 使用 XML 與 XSLT 作為資料交換與運用<br>● 使用 XMLHttpRequest 作為非同步的資料回饋<br>● 使用 JavaScript 結合以上所有結果</p><p>採用 AJAX，用戶端瀏覽或使用網頁時，如同在個人電腦中的應用程式一樣，不會感覺到網頁與後端伺服器交談過程，以及資料刷新的細節，頁面也不需要換頁，資料的交換等動態動作隱藏在背景執行。簡單地說，AJAX 網頁有兩種主要特性：向伺服器發出請求，以及回傳結果時，瀏覽器不需要重新載入所有頁面；藉由 XML 解析傳遞與交換的資料。例如註冊帳戶時提示帳號已被使用，或者是在搜尋欄跳出相關字詞、購物欄顯示庫存量，這些都是透過 ajax 的方式，不需要重新載入頁面就能完成。</p><h1 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h1><p>首先要產生 XMLHttpRequest()，才能物件跨瀏覽器撈資料，執行 request 之後，就會出現相對的資料。<br><img src="https://i.imgur.com/0cHCAgB.png" alt></p><p>readystate 代表目前狀態</p><pre><code>0-你已經產生一個XMLHttpRequest，但是還沒有連結你要撈的資料1-用了open()，但還沒有把資料傳送過去。2-偵側到用了send。3 - (processing request)資訊處理中。4 - (request finished and response is ready)撈到資料，數據完全接收到了。</code></pre><p>以 xhr.open(,,true)來初始設定，需要代入 3 個參數。第一個參數是發出 request 的方式，格式有 get (讀取)、post (發送資料到伺服器)；第二個參數是要讀取的網址；第三個參數是同步與非同步</p><pre><code>var xhr = new XMLHttpRequest();// 格式,要讀取的網址,同步與非同步// 格式: get(讀取), post(傳送資料到伺服器)xhr.open(&quot;get&quot;, &quot;這裡放網址&quot;, true);// 空值，單純get，沒有要傳資料，括號中用nullxhr.send(null);</code></pre><p>如果資料傳輸完畢且成功，在 XMLHttpRequest 中的 readyState 會等於 4，responseText 則是內容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;AJAX&lt;/h1&gt;&lt;p&gt;AJAX 並非是一個技術（Technology），而是一種網站設計的架構（Architecture），雖然主要以 JavaS
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://yoursite.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>認識 Webpack</title>
    <link href="http://yoursite.com/2019/07/19/2019-07-19/"/>
    <id>http://yoursite.com/2019/07/19/2019-07-19/</id>
    <published>2019-07-18T16:00:00.000Z</published>
    <updated>2019-10-11T05:42:01.117Z</updated>
    
    <content type="html"><![CDATA[<p>Webpack 是一個開源的前端打包工具。Webpack 提供了前端開發缺乏的模組化開發方式，將各種靜態資源視為模組，並從它生成最佳化過的程式碼。</p><h1 id="安裝並開一個新的-webpack"><a href="#安裝並開一個新的-webpack" class="headerlink" title="安裝並開一個新的 webpack"></a>安裝並開一個新的 webpack</h1><p><img src="https://i.imgur.com/mSgaiRx.png" alt></p><h1 id="安裝套件在-webpack-裡"><a href="#安裝套件在-webpack-裡" class="headerlink" title="安裝套件在 webpack 裡"></a>安裝套件在 webpack 裡</h1><ol><li>透過 sass 載入 bootstrap 4</li><li>vue-axios ，一個 ajax 工具</li></ol><p>因為 sass 在 vue cli 沒有安裝完整的 loader 所以這裡要再安裝 node-sass 、sass-loader</p><ul><li>安裝</li></ul><p>建議將 node-sass 與 sass-loader 添加到開發環境中，因為這兩個套件只有在開發時需要使用到，</p><p>可使用以下指令：</p><p>sudo npm install node-sass sass-loader –save-dev</p><p>加上 -dev 能夠將套件限制在開發環境下才能使用，</p><p>boostrap 因為打包後也要使用因此可以不用加上 -dev ，</p><p>可使用以下指令安裝：</p><p>sudo npm install bootstrap –save</p><ul><li>載入 bootstrap</li></ul><p>這一段的路徑是連接到 node_modules 裡的 bootstrap</p><p><img src="https://i.imgur.com/p4z47lM.png" alt></p><p>Vue 的 style 還有一個特色，可以用 scope 限制樣式運用範圍<br>例如下面的紅色就限制在元件的 h1 裡面</p><p><img src="https://i.imgur.com/wQgnTBA.png" alt></p><h1 id="使用-vue-axios"><a href="#使用-vue-axios" class="headerlink" title="使用 vue-axios"></a>使用 vue-axios</h1><p>一個 ajax 套件，安裝方式<br>sudo npm install –save axios vue-axios</p><p>載入並且啟動它<br><img src="https://i.imgur.com/oozyr8I.png" alt></p><p>使用 randomuser 的 API 取用隨機個人資料，利用 Ajax 取得 data</p><p><img src="https://i.imgur.com/2VMlhgc.png" alt></p><h1 id="webpack-腳本介紹及自定義環境變數"><a href="#webpack-腳本介紹及自定義環境變數" class="headerlink" title="webpack 腳本介紹及自定義環境變數"></a>webpack 腳本介紹及自定義環境變數</h1><p>webpack 會有一個 main.js 的主要檔案，它會載入其他相依的內容。webpack 會監控 main.js 及它載入的相關檔案，一更動的時候就會進行編譯。這些編譯的內容就會輸出成 .jpg、.js 等檔案</p><p><img src="https://i.imgur.com/3WZXwqP.png" alt></p><p>webpack.base 是最主要的腳本檔案，另外兩個會 required 它，透過 webpack merge 合併這兩個腳本。<br><img src="https://i.imgur.com/JWKwhve.jpg" alt></p><p>dev 腳本的 serve 提供開發中預覽畫面用，包含 hot reload 及一些 host 與 port 供給預覽使用</p><p><img src="https://i.imgur.com/fPxCNQd.png" alt></p><p>在 production 版本就沒有 dev serve 功能，比較重視輸出結果，下方有一個套件將檔案內容輸出，它使用的是 index.html 這個 templete<br>。inject 是要不要把編譯完的內容注入進去。下方還包含壓縮：是否移除多餘空白字元、移除多餘的 html 屬性以及引號<br><img src="https://i.imgur.com/UhhlPtb.png" alt></p><p>核心腳本是 webpack.base</p><p>監控 main.js 的檔案叫做 entry。它指向的是 src/main.js</p><p><img src="https://i.imgur.com/r0sxF3J.png" alt></p><p>這個檔案是整個 Vue Cli 的進入點它會 import 許多檔案並在此編譯。<br><img src="https://i.imgur.com/3RKpzt6.png" alt></p><p>並在 output 輸出，底下有對應一些路徑，像是 path:config<br><img src="https://i.imgur.com/uyOt5tQ.png" alt></p><p>resolove 是省略附檔名用，像 extension 是 main.js import 的檔案可以省略的附檔名,alias 是路徑的縮寫，像是＠就是 src</p><p><img src="https://i.imgur.com/8WE6dKf.png" alt></p><p>但 main.js 是一個 js 檔，它沒辦法閱讀.png 等等的檔案，webpack 有一個叫 loader 的工具，會依據不同的類別不同的設定檔，決定該怎樣呈現在 js 裡面，最後再執行輸出（output） 。這些 loader 都在 module 裡，有一些規則例如處理圖片的 loader ，如果圖片在 10 kb 以下就會轉成 base64，否則它會轉成圖檔並加上一些 hash 字串<br><img src="https://i.imgur.com/auiQ1eT.png" alt></p><p>一些沒有寫在 webpack.base 的重要 loader 像是 css loader、sass loader 都在 utils.js 裡面</p><p><img src="https://i.imgur.com/yLVbVMn.png" alt></p><p>剛剛上面提到的 webpack.base 裡面的 config 怎樣調整呢？config 裡的 index.js 是針對整個編譯環境使用，像是可以設定 host 、port。而 dev.js、prod.js 則是寫 Vue 的時候可以用到的環境變數。這些變數是可以輸出到 Vue 檔裡面的。</p><p>例如這兩處可以使用不同的變數，經常使用到 Ajax 裡面，Ajax 在開發及正式版的時候會使用不同路徑，這時就可以把兩個路徑明顯切分</p><p><img src="https://i.imgur.com/CKjsXi7.png" alt></p><p>現在切換到 helloworld.vue 裡面，這裡指向的是呈現在畫面上的訊息，config 底下的 env 指的是環境變數。用 npm run build 指令的話會執行的是 prod.env.js 這個檔案。<br><img src="https://i.imgur.com/Jo9Vwri.png" alt></p><p>現再再加入另一個變數，這是 Ajax 使用的路徑，記得要用 2 種引號否則會跳錯。另外加入環境變數之後，要記得重啟 vue 的環境 (npm run dev)，以下已經替換成正確路徑</p><p><img src="https://i.imgur.com/CWfHo2p.png" alt></p><p>別忘了正式版本也要加上我們新增的環境變數<br><img src="https://i.imgur.com/dA1PSCJ.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Webpack 是一個開源的前端打包工具。Webpack 提供了前端開發缺乏的模組化開發方式，將各種靜態資源視為模組，並從它生成最佳化過的程式碼。&lt;/p&gt;
&lt;h1 id=&quot;安裝並開一個新的-webpack&quot;&gt;&lt;a href=&quot;#安裝並開一個新的-webpack&quot; class
      
    
    </summary>
    
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="Webpack" scheme="http://yoursite.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [8] - Vue Router</title>
    <link href="http://yoursite.com/2019/07/16/2019-07-16/"/>
    <id>http://yoursite.com/2019/07/16/2019-07-16/</id>
    <published>2019-07-15T16:00:00.000Z</published>
    <updated>2019-10-11T05:42:20.019Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-Vue-Router-及配置路由文件"><a href="#使用-Vue-Router-及配置路由文件" class="headerlink" title="使用 Vue Router 及配置路由文件"></a>使用 Vue Router 及配置路由文件</h1><p>//進入點<br>main.js<br>//Router 配置檔案 (前端路由，決定哪個網址讀取哪個元件。假如在新建 Vue cli 的時候選擇需要包含 router 配置，就會直接建立在這個目錄下面)<br>router/index.js<br>//分頁內容<br>Vue components (**.vue)</p><h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><pre><code>npm install vue-router --save</code></pre><h1 id="概念描述"><a href="#概念描述" class="headerlink" title="概念描述"></a>概念描述</h1><p>Vue-router 是 Vue.js 的官方路由插件，它適合運用在建立單面應用。Vue 的單面應用。Vue 的單面應用基礎是路由和元件，路由用在設定訪問路徑，並將路徑和組件對應起來。</p><p>傳統的頁面應用是利用抄連結來實現頁面的切換和跳轉。在 Vue-router 的單面應用，則是路徑之間的切換，也就是組件的切換。</p><h1 id="基本設置"><a href="#基本設置" class="headerlink" title="基本設置"></a>基本設置</h1><h2 id="Router-設定"><a href="#Router-設定" class="headerlink" title="Router 設定"></a>Router 設定</h2><p><code>src/router/index.js</code><br><img src="https://i.imgur.com/0rCN8ZF.png" alt></p><h2 id="載入配置檔"><a href="#載入配置檔" class="headerlink" title="載入配置檔"></a>載入配置檔</h2><p>把配置檔載入 entry<br><img src="https://i.imgur.com/NQwZYnu.png" alt></p><h2 id="定義路徑"><a href="#定義路徑" class="headerlink" title="定義路徑"></a>定義路徑</h2><p>假設目前的網站規劃有一個登入 login 頁面、登入後的 home 及購物車三個頁面，而登入後的 home 又包含三個子路由頁面 A,B,C 元件：這就像一個樹狀結構是有父子關係存在的，而父路由組件中會包含 <code>router-view</code> 作為子路由元件的渲染出口（如示意圖中藍色及黃色虛線區塊），而這些路由規則（例如：路由符合/login 時會載入 login.vue 組件到父層 App.vue) 的 router-view 中），都會明確定義在 <code>router</code>設定中<br><img src="https://i.imgur.com/d9LVmUR.png" alt><br>實際 Router 設定如下，會與上圖的動線設計有對應階層關係。<br><img src="https://i.imgur.com/JLhM6E8.png" alt></p><h2 id="視圖-router-view"><a href="#視圖-router-view" class="headerlink" title="視圖 router-view"></a>視圖 router-view</h2><p><code>src/App.vue</code><br>視圖的作用就是在符合路由規則的情境下，以元件從指定路由取代父層元件中的視圖。整個應用元件的第一個視圖是在 App.vue 檔案裡面，這表示在 vue-router 設定的第一層路由元件在匹配的狀況下，會直接取代 App.vue 裡的 router-view 元素<br><img src="https://i.imgur.com/Gk2enGQ.png" alt><br><img src="https://i.imgur.com/o9dbp03.png" alt></p><p><a href="http://www.網址/＃/home" target="_blank" rel="noopener">http://www.網址/＃/home</a></p><h1 id="新增路由路徑及連結達成分頁切換"><a href="#新增路由路徑及連結達成分頁切換" class="headerlink" title="新增路由路徑及連結達成分頁切換"></a>新增路由路徑及連結達成分頁切換</h1><p>先載入 Bootstrap<br><img src="https://i.imgur.com/8GgDLBp.png" alt><br>新增一個資料夾管理分頁<br><img src="https://i.imgur.com/5ykWqt9.png" alt><br>新增一個分頁<br><img src="https://i.imgur.com/6zFijCH.png" alt><br>並使用 bootstrap 的 navbar，首先把平常使用的 <code>&lt;a&gt;</code> 標籤替換成 <code>&lt;router-link&gt;</code>，把<code>href</code>替換成 router-view 切換分頁的方法 <code>to</code>。，在這個範例裡面有 2 種切換分頁的方法</p><ul><li>path 搭配 to<br><code>to=&quot;/page&quot;</code></li><li>動態切換<br><code>:to=&quot;{name:&#39;首頁&#39;}&quot;</code></li></ul><p><img src="https://i.imgur.com/PTgIvei.png" alt></p><h1 id="製作巢狀路由頁面"><a href="#製作巢狀路由頁面" class="headerlink" title="製作巢狀路由頁面"></a>製作巢狀路由頁面</h1><p>現在要做一個巢狀路由頁面，讓 <code>child</code> 切換的時候，可以維持 card 的外觀，但是內容更換。首先先定義 children 路徑，他們都是在 page 底下的子路由頁面元件<br><img src="https://i.imgur.com/jYJzi69.png" alt><br>新增三個元件，點擊的時候切換 children 內容到視圖層<br><img src="https://i.imgur.com/X3G9coI.png" alt></p><h1 id="使用動態路由切換頁面-Ajax-的使用情景"><a href="#使用動態路由切換頁面-Ajax-的使用情景" class="headerlink" title="使用動態路由切換頁面 Ajax 的使用情景"></a>使用動態路由切換頁面 Ajax 的使用情景</h1><p>我們經常需要把所有路由，都使用同一個組件來渲染。例如相同的版型，卻要動態載入不同內容。好比說在寫商品詳情頁面的時候，也面結構都一樣，只是商品 id 不同，這時候就可以用動態路由。以下用 children 這一層的路由做動態路由範例</p><ul><li>引入元件並填寫路由參數<br><img src="https://i.imgur.com/P4fsv9t.png" alt></li><li>到元件中獲取路由參數<br><code>$route.params.id</code> 就是獲取當前路由的參數。<br><img src="https://i.imgur.com/kjcbhyG.png" alt><br>現在隨意輸入一個參數就可以看到結果如下：<br><img src="https://i.imgur.com/kHU8vOQ.png" alt></li></ul><p>動態路由的其它模式<br><a href="https://zhuanlan.zhihu.com/p/39275718" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/39275718</a></p><h1 id="命名路由，同一個路徑載入-2-個頁面元件"><a href="#命名路由，同一個路徑載入-2-個頁面元件" class="headerlink" title="命名路由，同一個路徑載入 2 個頁面元件"></a>命名路由，同一個路徑載入 2 個頁面元件</h1><p>原本的路徑只能以 component 屬性載入單一的元件 Page，現在我們利用 components 就可以使用 default 屬性不僅載入原先的 Page，另外還可以再載入其它元件，只是這些元件都必須再新增 router-view 而且要加上各自的 name 屬性。</p><p>在新增的 router-view 標籤上加上 name 屬性，主要是要與對應的組件匹配以顯示組件內容，</p><p>在 components 屬性裡透過定義預設路由對應組件(Page)，所以 name: ‘分頁’，省略時不會影響 router-view 的顯示，</p><p><img src="https://i.imgur.com/EEhy7VI.png" alt></p><h1 id="Vue-Router-參數設定"><a href="#Vue-Router-參數設定" class="headerlink" title="Vue Router 參數設定"></a>Vue Router 參數設定</h1><p>Vue-router 的構造配置裡的 mode ，可以調整路徑配置方法<br>可选值: “hash” | “history” | “abstract”</p><h2 id="配置路由模式"><a href="#配置路由模式" class="headerlink" title="配置路由模式"></a>配置路由模式</h2><p>可選值: “hash” | “history” | “abstract”</p><ul><li>hash: 使用 URL hash 值來作路由。支持所有瀏覽器，包括不支持 HTML5 History Api 的瀏覽器。</li><li>history: 依賴 HTML5 History API 和服務器配置。查看 HTML5 History 模式。</li><li>abstract: 支持所有 JavaScript 運行環境，如 Node.js 服務器端。如果發現沒有瀏覽器的 API，路由會自動強制進入這個模式。</li></ul><p>不使用 hash 模式而使用 history 模式的時候，</p><p><img src="https://i.imgur.com/x7qoMb8.png" alt></p><p>使用的是後端伺服器的路由，所以前後端要搭配對應的模式使用預設的模式即可</p><h2 id="linkActiveClass"><a href="#linkActiveClass" class="headerlink" title="linkActiveClass"></a>linkActiveClass</h2><p>觸發特定路徑的時候，會在標籤上加上的 class 名稱，可自定義名稱<br><img src="https://i.imgur.com/X0XkQcS.png" alt></p><h1 id="自定義切換路由方法"><a href="#自定義切換路由方法" class="headerlink" title="自定義切換路由方法"></a>自定義切換路由方法</h1><p>切換頁面不能全靠 router-link 切換，例如有些行為必須在 Ajax 結束後再切換畫面，此時就不一定適用 router-link。</p><h2 id="動態切換"><a href="#動態切換" class="headerlink" title="動態切換"></a>動態切換</h2><p>$router.push<br><img src="https://i.imgur.com/QyORw22.png" alt><br>$ router.back<br><img src="https://i.imgur.com/ZKbf3s2.png" alt><br>$router.go(n)<br><img src="https://i.imgur.com/qfC30f8.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用-Vue-Router-及配置路由文件&quot;&gt;&lt;a href=&quot;#使用-Vue-Router-及配置路由文件&quot; class=&quot;headerlink&quot; title=&quot;使用 Vue Router 及配置路由文件&quot;&gt;&lt;/a&gt;使用 Vue Router 及配置路由文件&lt;/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [6] - 表格排序練習</title>
    <link href="http://yoursite.com/2019/07/14/2019-07-14-2/"/>
    <id>http://yoursite.com/2019/07/14/2019-07-14-2/</id>
    <published>2019-07-13T16:00:00.000Z</published>
    <updated>2019-07-15T09:33:38.279Z</updated>
    
    <content type="html"><![CDATA[<p>表格排序練習</p><ul><li>v-on</li><li>v-if</li><li>v-class</li><li>computed</li></ul><p>完成品 <a href="https://codepen.io/Shengzhi/pen/RmbMLw" target="_blank" rel="noopener">https://codepen.io/Shengzhi/pen/RmbMLw</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;表格排序練習&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;v-on&lt;/li&gt;
&lt;li&gt;v-if&lt;/li&gt;
&lt;li&gt;v-class&lt;/li&gt;
&lt;li&gt;computed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完成品 &lt;a href=&quot;https://codepen.io/Shengzhi/pen/RmbM
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [5] - 動態切換 ClassName 及 Style 多種方法</title>
    <link href="http://yoursite.com/2019/07/12/2019-07-12-3/"/>
    <id>http://yoursite.com/2019/07/12/2019-07-12-3/</id>
    <published>2019-07-11T16:00:00.000Z</published>
    <updated>2019-07-14T05:11:22.570Z</updated>
    
    <content type="html"><![CDATA[<p>假設我們要在原始 HTML 結構上動態為 .box 動態加上 className “rotate”</p><h3 id="物件寫法"><a href="#物件寫法" class="headerlink" title="物件寫法"></a>物件寫法</h3><ul><li>v-bind 綁定一個 class，附加一個物件，但因為是物件的關係，所以可以插入一個以上的值<h4 id="HTML-部份"><a href="#HTML-部份" class="headerlink" title="HTML 部份"></a>HTML 部份</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot; :class=&quot;&#123;&apos;rotate&apos;:isTransform,&apos;bg-danger&apos;:  boxColor &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;p&gt;請為此元素加上動態 className&lt;/p&gt;</span><br><span class="line">          &lt;hr&gt;</span><br><span class="line">          &lt;button class=&quot;btn btn-outline-primary&quot; v-on:click=&quot;isTransform = !isTransform&quot;&gt;選轉物件&lt;/button&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;classToggle1&quot; v-model=&quot;boxColor&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;classToggle1&quot;&gt;切換色彩&lt;/label&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份"><a href="#JavaScript-部份" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             isTransform: false,</span><br><span class="line">             boxColor: false</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure><h4 id="CSS-部份"><a href="#CSS-部份" class="headerlink" title="CSS 部份"></a>CSS 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        .box &#123;</span><br><span class="line">          transition: transform .5s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box.rotate &#123;</span><br><span class="line">          transform: rotate(45deg)</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="物件寫法2"><a href="#物件寫法2" class="headerlink" title="物件寫法2"></a>物件寫法2</h3><p>直接在 Vue 的 data 結構裡宣告物件，並在 HTML 裡直接使用，再以點擊事件觸發旋轉，以v-model更改色彩</p><h4 id="HTML-部份-1"><a href="#HTML-部份-1" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot; :class=&quot;objectClass&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;p&gt;請將此範例改為 &quot;物件&quot; 寫法&lt;/p&gt;</span><br><span class="line">          &lt;hr&gt;</span><br><span class="line">          &lt;button class=&quot;btn btn-outline-primary&quot; v-on:click=&quot;objectClass.rotate = !objectClass.rotate&quot;&gt;選轉物件&lt;/button&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;classToggle2&quot; v-model=&quot;objectClass[&apos;bg-danger&apos;]&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;classToggle2&quot;&gt;切換色彩&lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-1"><a href="#JavaScript-部份-1" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             isTransform: false,</span><br><span class="line">             boxColor: false,</span><br><span class="line">             objectClass: &#123;</span><br><span class="line">               &apos;rotate&apos;: false,</span><br><span class="line">               &apos;bg-danger&apos;: false,</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure><h4 id="CSS-部份-1"><a href="#CSS-部份-1" class="headerlink" title="CSS 部份"></a>CSS 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        .box &#123;</span><br><span class="line">          transition: transform .5s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box.rotate &#123;</span><br><span class="line">          transform: rotate(45deg)</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="陣列方式"><a href="#陣列方式" class="headerlink" title="陣列方式"></a>陣列方式</h3><p>適用於 className 長度不確定者，動態地將 className 存在陣列裡面。</p><h4 id="HTML-部份-2"><a href="#HTML-部份-2" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class=&quot;btn  &quot; :class=&quot;arrayClass&quot;&gt;請操作本元件&lt;/button&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-2"><a href="#JavaScript-部份-2" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             isTransform: false,</span><br><span class="line">             boxColor: false,</span><br><span class="line">             objectClass: &#123;</span><br><span class="line">               &apos;rotate&apos;: false,</span><br><span class="line">               &apos;bg-danger&apos;: false,</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure><h4 id="CSS-部份-2"><a href="#CSS-部份-2" class="headerlink" title="CSS 部份"></a>CSS 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        .box &#123;</span><br><span class="line">          transition: transform .5s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box.rotate &#123;</span><br><span class="line">          transform: rotate(45deg)</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="綁定行內樣式的方法"><a href="#綁定行內樣式的方法" class="headerlink" title="綁定行內樣式的方法"></a>綁定行內樣式的方法</h3><p>以 <code>:style：&quot;{&#39;樣式屬性&#39;：&#39;樣式的值&#39;}&quot;</code> 插入行內樣式</p><h4 id="HTML-部份-3"><a href="#HTML-部份-3" class="headerlink" title="HTML 部份"></a>HTML 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot; :style=&quot;&#123;backgroundColor:&apos;red&apos;&#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;box&quot; :style=&quot;styleObject&quot;&gt;&lt;/div&gt;// 以變數方式插入</span><br><span class="line"> &lt;div class=&quot;box&quot; :style=&quot;[&#123;backgroundColor:&apos;red&apos;&#125;,&#123;borderWidth:&apos;5px&apos;&#125;]&quot;&gt;&lt;/div&gt; //以陣列方式插入</span><br><span class="line"> &lt;div class=&quot;box&quot; :style=&quot;[&#123;styleObject,styleObject2]&quot;&gt;&lt;/div&gt; //插入多個物件</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;自動加上 Prefix (每個版本結果不同)&lt;/h5&gt;</span><br><span class="line"> &lt;div class=&quot;box&quot; :style=&quot;styleObject3&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-部份-3"><a href="#JavaScript-部份-3" class="headerlink" title="JavaScript 部份"></a>JavaScript 部份</h4><pre><code>&lt;script&gt;  var app = new Vue({    el: &apos;#app&apos;,    data: {      isTransform: false,      boxColor: false,      objectClass: {        &apos;rotate&apos;: false,        &apos;bg-danger&apos;: false,      },      //行內樣式      //使用駝峰式命名      styleObject: {        backgroundColor: &apos;red&apos;,        borderWidth: &apos;5px&apos;      },      styleObject2: {        backgroundColor: &apos;red&apos;,        boxShadow: &apos;3px 3px 5px rgba(0,0,0,0.16)&apos;      },      styleObject3: {        userSelect: &apos;none&apos;      },    }  })&lt;/script&gt;</code></pre><h4 id="CSS-部份-3"><a href="#CSS-部份-3" class="headerlink" title="CSS 部份"></a>CSS 部份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        .box &#123;</span><br><span class="line">          transition: transform .5s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box.rotate &#123;</span><br><span class="line">          transform: rotate(45deg)</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;假設我們要在原始 HTML 結構上動態為 .box 動態加上 className “rotate”&lt;/p&gt;
&lt;h3 id=&quot;物件寫法&quot;&gt;&lt;a href=&quot;#物件寫法&quot; class=&quot;headerlink&quot; title=&quot;物件寫法&quot;&gt;&lt;/a&gt;物件寫法&lt;/h3&gt;&lt;ul&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [4] - 元件基礎概念</title>
    <link href="http://yoursite.com/2019/07/11/2019-07-11-1/"/>
    <id>http://yoursite.com/2019/07/11/2019-07-11-1/</id>
    <published>2019-07-10T16:00:00.000Z</published>
    <updated>2019-07-18T07:40:33.669Z</updated>
    
    <content type="html"><![CDATA[<p>Vue 的每一個元件都可以獨立儲存各自的狀態，以下是一個元件的範例，此範例以反引號來定義元件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">          // 請在此撰寫 JavaScript</span><br><span class="line">          Vue.component(&apos;counter-component&apos;, &#123;</span><br><span class="line">            data: function () &#123;</span><br><span class="line">              return &#123;</span><br><span class="line">                counter: 0</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            template: `&lt;div&gt;</span><br><span class="line">              &lt;button class=&quot;btn btn-outline-secondary btn-sm&quot; @click=&quot;counter += 1&quot;&gt;&#123;&#123; counter &#125;&#125;&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;`</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              counter: 0</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>元件可以重複使用，而且帶有一個名字，在這個例子中是 <code>counter-component</code>，我們可以在一個 new Vue 建立的 Vue 應用程式使用此組件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            你已經點擊 &lt;counter-component&gt;&lt;/counter-component&gt; 下。</span><br><span class="line">            你已經點擊 &lt;button class=&quot;btn btn-outline-secondary btn-sm&quot; @click=&quot;counter += 1&quot;&gt;&#123;&#123; counter &#125;&#125;&lt;/button&gt; 下。</span><br><span class="line"></span><br><span class="line">            &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">            &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>元件是可以重複使用的，它們與 new Vue 接收相同的選項，例如 data、computed、watch、methods 以及生命周期。</p><h2 id="template-標籤與-v-if"><a href="#template-標籤與-v-if" class="headerlink" title="template 標籤與 v-if"></a>template 標籤與 v-if</h2><p>在希望使用 Vue 指令，但不希望輸出標籤的時候，就可以使用 template 標籤。範例使用 <code>template</code> 標籤搭配 <code>v-if</code> 指令切換多個 DOM 的呈現</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;table&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">              &lt;th&gt;編號&lt;/th&gt;</span><br><span class="line">              &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;template v-if=&quot;showTemplate&quot;&gt;</span><br><span class="line">              &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;1&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;安妮&lt;/td&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">              &lt;tr v-if=&quot;showTemplate&quot;&gt;</span><br><span class="line">                &lt;td&gt;2&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;小明&lt;/td&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              isSuccess: true,</span><br><span class="line">              showTemplate: true,</span><br><span class="line"></span><br><span class="line">              link: &apos;a&apos;,</span><br><span class="line"></span><br><span class="line">              loginType: &apos;username&apos;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">              toggleLoginType: function () &#123;</span><br><span class="line">                return this.loginType = this.loginType === &apos;username&apos; ? &apos;email&apos; : &apos;username&apos;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="templete-與-v-for"><a href="#templete-與-v-for" class="headerlink" title="templete 與 v-for"></a>templete 與 v-for</h1><p>有兩個 tr 一組使用 v-for，這時就可以運用 templete </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;table&quot;&gt;</span><br><span class="line">           &lt;template v-for=&quot;item in arrayData&quot;&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">               &lt;td&gt;&#123;&#123;item.age&#125;&#125;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">               &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">           &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">         &lt;/table&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;list-item&apos;, &#123;</span><br><span class="line">           template: `</span><br><span class="line">   &lt;li&gt;</span><br><span class="line">     &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">   &lt;/li&gt;</span><br><span class="line"> `,</span><br><span class="line">           props: [&apos;item&apos;]</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             arrayData: [&#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             ],</span><br><span class="line">             objectData: &#123;</span><br><span class="line">               ming: &#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               auntie: &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               jay: &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             &#125;,</span><br><span class="line">             filterArray: [],</span><br><span class="line">             filterText: &apos;&apos;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><h1 id="元件基礎練習-把表格包裝成元件"><a href="#元件基礎練習-把表格包裝成元件" class="headerlink" title="元件基礎練習 (把表格包裝成元件)"></a>元件基礎練習 (把表格包裝成元件)</h1><h2 id="使用-x-templete-建立元件"><a href="#使用-x-templete-建立元件" class="headerlink" title="使用 x-templete 建立元件"></a>使用 x-templete 建立元件</h2><ul><li>以 <code>Vue.component</code> 建立元件</li><li>以 <code>x-templete</code> 定義元件，使用方式是在外面再建立一個 <code>script</code> ，它的 type 是<code>text/x-templete</code>，id 是指向 templete 的 id </li></ul><p>這裡要注意元件內資料與外層是不同的，所以必須將資料傳入元件內</p><ul><li>運用 <code>props</code> 傳遞資料<br>另外，<code>tbody</code> 裡面不能放非表格相關的標籤，否則會跑版，這樣寫不行<br><img src="https://i.imgur.com/m4gS9U6.png" alt></li><li>將元件註冊在應用程式下面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;table class=&quot;table&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- &lt;row-component v-for=&quot;(item, key) in data&quot; :person=&quot;item&quot; :key=&quot;key&quot;&gt;&lt;/row-component&gt; --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;tr is=&quot;row-component&quot; v-for=&quot;(item, key) in data&quot; :person=&quot;item&quot; :key=&quot;key&quot;&gt;&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              &lt;!-- &lt;tr v-for=&quot;(item, key) in data&quot; :item=&quot;item&quot; :key=&quot;key&quot;&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; item.cash &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; item.icash &#125;&#125;&lt;/td&gt;</span><br><span class="line">              &lt;/tr&gt; --&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">          &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt; &lt;script type=&quot;text/x-template&quot; id=&quot;rowComponentTemplate&quot;&gt;</span><br><span class="line">          &lt;tr &gt;</span><br><span class="line">              &lt;td&gt;&#123;&#123; person.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">              &lt;td&gt;&#123;&#123; person.cash &#125;&#125;&lt;/td&gt;</span><br><span class="line">              &lt;td&gt;&#123;&#123; person.icash &#125;&#125;&lt;/td&gt;</span><br><span class="line">         &lt;/tr&gt;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">          // Vue.component(&apos;row-component&apos;, &#123;</span><br><span class="line">          //   props: [&apos;person&apos;],</span><br><span class="line">          //   template: &quot;#rowComponentTemplate&quot;</span><br><span class="line">          // &#125;)</span><br><span class="line"></span><br><span class="line">          var child = &#123;</span><br><span class="line">            props: [&apos;person&apos;],</span><br><span class="line">            template: &quot;#rowComponentTemplate&quot;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              data: [&#123;</span><br><span class="line">                  name: &apos;小明&apos;,</span><br><span class="line">                  cash: 100,</span><br><span class="line">                  icash: 500,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;杰倫&apos;,</span><br><span class="line">                  cash: 10000,</span><br><span class="line">                  icash: 5000,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                  cash: 500,</span><br><span class="line">                  icash: 500,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;老媽&apos;,</span><br><span class="line">                  cash: 10000,</span><br><span class="line">                  icash: 100,</span><br><span class="line">                &#125;,</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            components: &#123;</span><br><span class="line">              &quot;row-component&quot;: child</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="元件必須使用-function-return"><a href="#元件必須使用-function-return" class="headerlink" title="元件必須使用 function return"></a>元件必須使用 function return</h1><p>新建一個 Vue 的應用程式，是不需要 return ，直接用 data 插入物件就可以。但是在元件內如果也用這種方式就會報錯。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-template&quot; id=&quot;counter-component&quot;&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  你已經點擊 &lt;button class=&quot;btn btn-outline-secondary btn-sm&quot; @click=&quot;counter += 1&quot;&gt;&#123;&#123; counter &#125;&#125;&lt;/button&gt; 下。</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&apos;counter-component&apos;, &#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    counter: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  template: &apos;#counter-component&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>這裡告訴我們需要用 function return </p><p><img src="https://i.imgur.com/rE3uDgx.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">  &lt;counter-component&gt;&lt;/counter-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-template&quot; id=&quot;counter-component&quot;&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  你已經點擊 &lt;button class=&quot;btn btn-outline-secondary btn-sm&quot; @click=&quot;counter += 1&quot;&gt;&#123;&#123; counter &#125;&#125;&lt;/button&gt; 下。</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&apos;counter-component&apos;, &#123;</span><br><span class="line">  data:function() &#123;</span><br><span class="line">    return&#123;counter: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  template: &apos;#counter-component&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="props-基本觀念-由外到內的資料傳遞"><a href="#props-基本觀念-由外到內的資料傳遞" class="headerlink" title="props 基本觀念 由外到內的資料傳遞"></a>props 基本觀念 由外到內的資料傳遞</h1><p>由於 Vue 的每一個元件資料狀態都是獨立的，因為使用元件的目的就是希望互相干擾的狀況能越小越好，因此資料都是獨立儲存的，除非必要否則不會互相傳遞溝通。如果真的有需要從父層傳遞資料給子層，使用  <code>props</code> 即可。</p><h2 id="props-down"><a href="#props-down" class="headerlink" title="props down"></a>props down</h2><p>在 HTML 模版中，使用屬性「user_name」傳遞名稱（name）「Peter」給元件<prompt-component>。由於屬性 user_name 的值是由 data 的 name 代入，需要與 Vue Instance 結合，未來在解析模版時做處理，因此加上 v-bind 屬性綁定，簡寫為:。而在元件中，必須使用props聲明它所獲得的資料。</prompt-component></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;prompt-component :user-name=&quot;name&quot;&gt;&lt;/prompt-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;prompt-component&apos;, &#123;</span><br><span class="line">  template: &apos;&lt;button @click=&quot;sayHi(userName)&quot;&gt;Say Hi!&lt;/button&gt;&apos;,</span><br><span class="line">  delimiters: [&apos;$&#123;&apos;, &apos;&#125;&apos;],</span><br><span class="line">  props: [&apos;user-name&apos;], //使用`props`聲明它所獲得的資料</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sayHi: function(name) &#123;</span><br><span class="line">      alert(&apos;Hi &apos; + name);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var vm = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  delimiters: [&apos;$&#123;&apos;, &apos;&#125;&apos;],</span><br><span class="line">  data: &#123;</span><br><span class="line">    name: &apos;Peter&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="camelCase-vs-kebab-case"><a href="#camelCase-vs-kebab-case" class="headerlink" title="camelCase vs kebab-case"></a>camelCase vs kebab-case</h2><p>HTML 的屬性名稱是大小寫不敏感的，而 JavaScript 是嚴格區分大小寫的。因此，若非使用以 JavaScript 產生模版的方式，意即「字串模版 (String Template)」，而是使用 HTML 模版時，屬性名稱必須使用以 dash （短橫線） 分隔的 kebab-case 命名。</p><p>例如，在 HTML 中撰寫屬性名稱「user name」如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(O) &lt;prompt-component :user-name=&quot;name&quot;&gt;&lt;/prompt-component&gt;</span><br><span class="line"></span><br><span class="line">(X) &lt;prompt-component :userName=&quot;name&quot;&gt;&lt;/prompt-component&gt;</span><br></pre></td></tr></table></figure><p>重申一次，如果使用字串模板，那就沒有這個限制。</p><h2 id="靜態傳遞與動態傳遞"><a href="#靜態傳遞與動態傳遞" class="headerlink" title="靜態傳遞與動態傳遞"></a>靜態傳遞與動態傳遞</h2><p>由於屬性 id 的值是由 data 的 id 代入，若只是經由屬性傳遞資料，模版不會做任何處理，得到的資料型態是「string」；但若使用 v-bind 屬性綁定（簡寫為:），將來會與 Vue Instance 結合，解析模版會當成 JavaScript 表達式做計算</p><ul><li>靜態傳遞：透過字串直接將資料傳入</li><li>動態傳遞：類似 v-bind 的方式在屬性前加冒號</li></ul><p>如下範例，元件<prompt-component>會代入 id，點擊按鈕後會觸發 checkID method，然後 console 目前 id 的資料型別。</prompt-component></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;prompt-component&apos;, &#123;</span><br><span class="line">  template: &apos;&lt;button @click=&quot;checkID(id)&quot;&gt;Check ID&lt;/button&gt;&apos;,</span><br><span class="line">  delimiters: [&apos;$&#123;&apos;, &apos;&#125;&apos;],</span><br><span class="line">  props: [&apos;id&apos;],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    checkID: function(id) &#123;</span><br><span class="line">      console.log(typeof id);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var vm = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  delimiters: [&apos;$&#123;&apos;, &apos;&#125;&apos;],</span><br><span class="line">  data: &#123;</span><br><span class="line">    id: 1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>case 1 靜態<br>這裡的 id 的資料型態是「string」。點擊按鈕後 console 出來的結果是 string。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;prompt-component id=&quot;id&quot;&gt;&lt;/prompt-component&gt;</span><br></pre></td></tr></table></figure><ul><li>case 2 動態<br>這裡的 id 的資料型態是「number」。點擊按鈕後 console 出來的結果是 number。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;prompt-component :id=&quot;id&quot;&gt;&lt;/prompt-component&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="單向數據流"><a href="#單向數據流" class="headerlink" title="單向數據流"></a>單向數據流</h2><p>Prop 是單向的，只會從父層傳至子層，並且 Prop 的值會隨父層更動設定而改變。</p><p>以下的 url 是從外層所傳入的，如果我直接在顯示在畫面上的網址修改<br><img src="https://i.imgur.com/UKOeK48.png" alt></p><p>就會報錯，告訴我們不要直接修改 props 傳入的內容</p><p><img src="https://i.imgur.com/k8P1k8x.png" alt></p><p>解決方式是必須在元件內新增一個 <code>data</code> 接收外部傳入的 props ，並定義一個新的 url ，不要讓它與外層的 url 綁定。</p><p>因此在使用 props 的時候要維持單向數據流的觀念</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;photo :img-url=&quot;url&quot;&gt;&lt;/photo&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-template&quot; id=&quot;photo&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">  &lt;img :src=&quot;imgUrl&quot; class=&quot;img-fluid&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;newUrl&quot;&gt; //將元件由原先綁定 imgUrl 改成綁定 newUrl</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;photo&apos;, &#123;</span><br><span class="line">  props: [&apos;imgUrl&apos;],</span><br><span class="line">  template: &apos;#photo&apos;,</span><br><span class="line"></span><br><span class="line">  // 解答：</span><br><span class="line">  // data: function () &#123;</span><br><span class="line">  //   return &#123;</span><br><span class="line">  //     newUrl: this.imgUrl</span><br><span class="line">  //   &#125;</span><br><span class="line">  // &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    user: &#123;&#125;,</span><br><span class="line">    url: &apos;https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80&apos;,</span><br><span class="line">    isShow: true </span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="尚未宣告的變數"><a href="#尚未宣告的變數" class="headerlink" title="尚未宣告的變數"></a>尚未宣告的變數</h2><p>現有一個 <code>card</code> 元件，它會接收外部傳進的 userData，並將卡片繪製出來。userData 的來源是 Vue 應用程式。應用程式裡會先宣告一個 user 物件，再透過 ajax 行為抓取遠端資料，最後才存進 user 裡面。所以 user 傳入就會產生時間差。因此會跳出這個錯誤，它找不到某些變數</p><p><img src="https://i.imgur.com/fZnC5Xh.png" alt></p><p>簡單來說：如果資料匯入有時間差，我們可以在元件上面使用 <code>v-if</code> 解決這個問題，設定某個特性如果沒有完全讀進來之前先不要執行這個卡片，讓它與資料完成的時候一起同步繪製</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;col-sm-4&quot;&gt;</span><br><span class="line">              &lt;card :user-data=&quot;user&quot; v-if=&quot;user.phone&quot;&gt;&lt;/card&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;card&apos;, &#123;</span><br><span class="line">           props: [&apos;userData&apos;],</span><br><span class="line">           template: &apos;#card&apos;,</span><br><span class="line">           data: function () &#123;</span><br><span class="line">             return &#123;</span><br><span class="line">               user: this.userData</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;keepCard&apos;, &#123;</span><br><span class="line">            template: &apos;#card&apos;,</span><br><span class="line">            data: function () &#123;</span><br><span class="line">              return &#123;</span><br><span class="line">                user: &#123;&#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            created: function () &#123;</span><br><span class="line">              var vm = this;</span><br><span class="line">              $.ajax(&#123;</span><br><span class="line">                url: &apos;https://randomuser.me/api/&apos;,</span><br><span class="line">                dataType: &apos;json&apos;,</span><br><span class="line">                success: function (data) &#123;</span><br><span class="line">                  vm.user = data.results[0];</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h2 id="維持狀態與生命週期"><a href="#維持狀態與生命週期" class="headerlink" title="維持狀態與生命週期"></a>維持狀態與生命週期</h2><p>這個元件每次銷燬再生成的時候，會執行一段 Ajax。如果符合預期的狀態，這樣執行並沒有錯誤。可是有時我們有時不希望元件重新生成的時候，就重頭執行一次 Ajax。</p><p>這時使用 <code>keep-alive</code> 維持元件的生命週期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 class=&quot;mt-3&quot;&gt;維持狀態與生命週期&lt;/h2&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;isShow&quot; v-model=&quot;isShow&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;isShow&quot;&gt;Check me out&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;col-sm-4&quot; v-if=&quot;isShow&quot;&gt;</span><br><span class="line">              &lt;keep-card&gt;</span><br><span class="line">              &lt;/keep-card&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>也要確保在資料載入完成之後才開始執行，所以使用兩個 <code>v-if</code> 的判斷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;script type=&quot;text/x-template&quot; id=&quot;card&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;img class=&quot;card-img-top&quot; :src=&quot;user.picture.large&quot; v-if=&quot;user.picture&quot; alt=&quot;Card image cap&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">    &lt;h5 class=&quot;card-title&quot; v-if=&quot;user.name&quot;&gt;&#123;&#123; user.name.first &#125;&#125; &#123;&#123; user.name.last &#125;&#125;&lt;/h5&gt;</span><br><span class="line">    &lt;p class=&quot;card-text&quot;&gt;&#123;&#123; user.email &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;card-footer&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;email&quot; class=&quot;form-control&quot; v-model=&quot;user.email&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;keepCard&apos;, &#123;</span><br><span class="line">            template: &apos;#card&apos;,</span><br><span class="line">            data: function () &#123;</span><br><span class="line">              return &#123;</span><br><span class="line">                user: &#123;&#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            created: function () &#123;</span><br><span class="line">              var vm = this;</span><br><span class="line">              $.ajax(&#123;</span><br><span class="line">                url: &apos;https://randomuser.me/api/&apos;,</span><br><span class="line">                dataType: &apos;json&apos;,</span><br><span class="line">                success: function (data) &#123;</span><br><span class="line">                  vm.user = data.results[0];</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              user: &#123;&#125;,</span><br><span class="line">              url: &apos;https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80&apos;,</span><br><span class="line">              isShow: true</span><br><span class="line">            &#125;,</span><br><span class="line">            created: function () &#123;</span><br><span class="line">              var vm = this;</span><br><span class="line">              $.ajax(&#123;</span><br><span class="line">                url: &apos;https://randomuser.me/api/&apos;,</span><br><span class="line">                dataType: &apos;json&apos;,</span><br><span class="line">                success: function (data) &#123;</span><br><span class="line">                  vm.user = data.results[0];</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h2 id="props-型別及預設值"><a href="#props-型別及預設值" class="headerlink" title="props 型別及預設值"></a>props 型別及預設值</h2><p>在傳入 props 的時候就定義型別，避免傳入錯誤內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line"> &lt;h2&gt;Props 的型別&lt;/h2&gt;</span><br><span class="line"> &lt;prop-type :cash=&quot;cash&quot;&gt;&lt;/prop-type&gt;</span><br><span class="line"></span><br><span class="line"> &lt;h2 class=&quot;mt-3&quot;&gt;靜態與動態傳入數值差異&lt;/h2&gt;</span><br><span class="line"> &lt;!-- 有設定type的話，靜態傳入參數就會錯誤，要改為動態傳入參數 --&gt; </span><br><span class="line"> &lt;!-- :cash 有冒號，是動態傳入參數，沒有冒號是靜態傳入參數 --&gt; </span><br><span class="line"> &lt;prop-type :cash=&quot;300&quot;&gt;&lt;/prop-type&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-template&quot; id=&quot;propType&quot;&gt;</span><br><span class="line"> &lt;div&gt;</span><br><span class="line">  &lt;input type=&quot;number&quot; class=&quot;form-control&quot; v-model=&quot;newCash&quot;&gt; &#123;&#123; typeof(cash)&#125;&#125;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&apos;prop-type&apos;, &#123;</span><br><span class="line">  //props: [&apos;cash&apos;],</span><br><span class="line">  //改為以下的寫法，props改設定為物件</span><br><span class="line">  //物件內可設定變數的屬性以及預設值</span><br><span class="line">  //有設定型態的好處就是傳入字串的時候就會出現錯誤</span><br><span class="line">  props: &#123;</span><br><span class="line">cash: &#123;</span><br><span class="line">type: Number,</span><br><span class="line">default: 100</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  template: &apos;#propType&apos;,</span><br><span class="line">  data: function() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">newCash: this.cash</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">el: &apos;#app&apos;,</span><br><span class="line">data: &#123;</span><br><span class="line">cash: 300</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="emit-基本觀念-由內向外傳遞資訊"><a href="#emit-基本觀念-由內向外傳遞資訊" class="headerlink" title="emit 基本觀念 由內向外傳遞資訊"></a>emit 基本觀念 由內向外傳遞資訊</h1><p>現在要透過裡面的元件改變外面 cash 金額</p><ul><li>要觸發 Vue 應用程式，所以要有一個按鈕點擊事件 <code>incrementTotal</code></li><li>再註冊另一個事件，名稱可以自定稱為<code>increment</code>，並啟用上面的 <code>incrementTotal</code></li><li>現在內部元件 click 事件有一個 <code>incrementCounter</code>，使用 <code>emit</code> 讓它可以觸發外層 <code>increment</code> 的實體事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;h2&gt;透過 emit 向外傳遞資訊&lt;/h2&gt;</span><br><span class="line">          我透過元件儲值了 &#123;&#123; cash &#125;&#125; 元</span><br><span class="line">          &lt;button class=&quot;btn btn-primary&quot; v-on:click=&quot;incrementTotal&quot;&gt;點我&lt;/button&gt;</span><br><span class="line">          &lt;button-counter v-on:increment=&quot;incrementTotal&quot;&gt;&lt;/button-counter&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         Vue.component(&apos;buttonCounter&apos;, &#123;</span><br><span class="line">           template: `&lt;div&gt;</span><br><span class="line">   &lt;button @click=&quot;incrementCounter&quot; class=&quot;btn btn-outline-primary&quot; &gt;增加 &#123;&#123; counter &#125;&#125; 元&lt;/button&gt;</span><br><span class="line">   &lt;input type=&quot;number&quot; class=&quot;form-control mt-2&quot; v-model=&quot;counter&quot;&gt;</span><br><span class="line"> &lt;/div&gt;`,</span><br><span class="line">           data: function () &#123;</span><br><span class="line">             return &#123;</span><br><span class="line">               counter: 1</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">           methods: &#123;</span><br><span class="line">             incrementCounter: function () &#123;</span><br><span class="line">               this.$emit(&apos;increment&apos;, Number(this.counter));</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             cash: 300</span><br><span class="line">           &#125;,</span><br><span class="line">           methods: &#123;</span><br><span class="line">             incrementTotal: function (newNumber) &#123;</span><br><span class="line">               this.cash = this.cash + newNumber;</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="Slot-插槽替換"><a href="#Slot-插槽替換" class="headerlink" title="Slot 插槽替換"></a>Slot 插槽替換</h1><p>有時候重複使用的元件需要替換部分內容，所以需要替換一些模版</p><ul><li>沒有插槽可以替換的狀態<br><img src="https://i.imgur.com/O9Ium4r.png" alt><br>插入的內容完全都會被模版替換，該內容不是模版的一部分所以無法顯示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;h2&gt;沒有插槽可替換的狀態&lt;/h2&gt;</span><br><span class="line">          &lt;no-slot-component&gt;</span><br><span class="line">            &lt;p&gt;這是一段插入的內容喔&lt;/p&gt;</span><br><span class="line">          &lt;/no-slot-component&gt;   </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>Slot 基礎範例<br>現在要把 <code>&lt;p&gt;使用這段取代原本的 Slot。&lt;/p&gt;</code> 放進元件內。所以我們在元件內新增一個 <code>slot</code> 標籤</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;single-slot-component&gt;</span><br><span class="line">            &lt;p&gt;使用這段取代原本的 Slot。&lt;/p&gt;</span><br><span class="line">&lt;/single-slot-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script type=&quot;text/x-template&quot; id=&quot;singleSlotComponent&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;alert alert-warning&quot;&gt;</span><br><span class="line">  &lt;h6&gt;我是一個元件&lt;/h6&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    如果沒有內容，則會顯示此段落。</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         Vue.component(&apos;no-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#noSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         Vue.component(&apos;single-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#singleSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         Vue.component(&apos;named-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#namedSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;&#125;</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/yMzWEoa.png" alt></p><ul><li>具名插槽<br>有時有大量內容需要取代而且分布在元件不同地方。我們在 <code>templete</code> 的 <code>slot</code> 標籤加上自定義的名稱做對應。並在實體上加上相同的屬性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;named-slot-component&gt;</span><br><span class="line">           &lt;header slot=&quot;header&quot;&gt;替換的 Header&lt;/header&gt;</span><br><span class="line">           &lt;template&gt;替換的 Footer&lt;/template&gt;</span><br><span class="line">           &lt;template slot=&quot;btn&quot;&gt;按鈕內容&lt;/template&gt;</span><br><span class="line">           &lt;p&gt;其餘的內容&lt;/p&gt;</span><br><span class="line">         &lt;/named-slot-component&gt;</span><br></pre></td></tr></table></figure><p>附註：如果不希望標籤像這樣輸出的話，就使用 <code>templete</code><br><img src="https://i.imgur.com/CUAQpzG.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        &lt;script type=&quot;text/x-template&quot; id=&quot;namedSlotComponent&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;card my-3&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">    &lt;slot name=&quot;header&quot;&gt;這段是預設的文字&lt;/slot&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">    &lt;slot&gt;</span><br><span class="line">      &lt;h5 class=&quot;card-title&quot;&gt;Special title treatment&lt;/h5&gt;</span><br><span class="line">      &lt;p class=&quot;card-text&quot;&gt;With supporting text below as a natural lead-in to additional content.&lt;/p&gt;</span><br><span class="line">    &lt;/slot&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;</span><br><span class="line">      &lt;slot name=&quot;btn&quot;&gt;spanGo somewhere&lt;/slot&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;card-footer&quot;&gt;</span><br><span class="line">    &lt;div&gt;這是預設的 Footer&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         Vue.component(&apos;no-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#noSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         Vue.component(&apos;single-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#singleSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         Vue.component(&apos;named-slot-component&apos;, &#123;</span><br><span class="line">           template: &apos;#namedSlotComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;&#125;</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="使用-is-動態切換組件"><a href="#使用-is-動態切換組件" class="headerlink" title="使用 is 動態切換組件"></a>使用 is 動態切換組件</h1><p>在 Vue 應用程式的 current 變數裡的 <code>primary-component</code>，切換成 <code>danger-component</code>，並透過  <code>:is</code> 動態切換元件內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mt-3&quot;&gt;</span><br><span class="line">            &lt;!-- &lt;primary-component :data=&quot;item&quot; v-if=&quot;current === &apos;primary-component&apos;&quot;&gt;&lt;/primary-component&gt;</span><br><span class="line">            &lt;danger-component :data=&quot;item&quot; v-if=&quot;current === &apos;danger-component&apos;&quot;&gt;&lt;/danger-component&gt; --&gt;</span><br><span class="line">            &lt;div :is=&quot;current&quot; :data=&quot;item&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         Vue.component(&apos;primary-component&apos;, &#123;</span><br><span class="line">           props: [&apos;data&apos;],</span><br><span class="line">           template: &apos;#primaryComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line">         Vue.component(&apos;danger-component&apos;, &#123;</span><br><span class="line">           props: [&apos;data&apos;],</span><br><span class="line">           template: &apos;#dangerComponent&apos;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             item: &#123;</span><br><span class="line">               header: &apos;這裡是 header&apos;,</span><br><span class="line">               title: &apos;這裡是 title&apos;,</span><br><span class="line">               text: &apos;Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim perferendis illo reprehenderit ex natus earum explicabo modi voluptas cupiditate aperiam, quasi quisquam mollitia velit ut odio vitae atque incidunt minus?&apos;</span><br><span class="line">             &#125;,</span><br><span class="line">             current: &apos;primary-component&apos;</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Vue 的每一個元件都可以獨立儲存各自的狀態，以下是一個元件的範例，此範例以反引號來定義元件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [3] - 常見表單與資料的綁定方式</title>
    <link href="http://yoursite.com/2019/07/10/2019-07-10/"/>
    <id>http://yoursite.com/2019/07/10/2019-07-10/</id>
    <published>2019-07-09T16:00:00.000Z</published>
    <updated>2019-10-11T05:48:00.091Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-v-model-綁定-input-輸入字串"><a href="#使用-v-model-綁定-input-輸入字串" class="headerlink" title="使用 v-model 綁定 input 輸入字串"></a>使用 v-model 綁定 input 輸入字串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;h4&gt;字串&lt;/h4&gt;</span><br><span class="line">          &#123;&#123; text &#125;&#125;</span><br><span class="line">          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;text&quot;&gt;</span><br><span class="line">          &lt;hr&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="使用-v-model-綁定-textarea-輸入字串"><a href="#使用-v-model-綁定-textarea-輸入字串" class="headerlink" title="使用 v-model 綁定 textarea 輸入字串"></a>使用 v-model 綁定 textarea 輸入字串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;pre&gt;&#123;&#123; textarea &#125;&#125;&lt;/pre&gt;</span><br><span class="line">          &lt;textarea cols=&quot;30&quot; rows=&quot;3&quot; class=&quot;form-control&quot; v-model=&quot;textarea&quot;&gt;</span><br><span class="line">          &lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>運用 checkbox</li></ul><p>checkbox 的原始預設值是 true/false</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;check1&quot; v-model=&quot;checkbox1&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;check1&quot;&gt; 你要不要看電影 &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="v-model-與-v-for-的表單運用-以陣列方式運用-checkbox："><a href="#v-model-與-v-for-的表單運用-以陣列方式運用-checkbox：" class="headerlink" title="v-model 與 v-for 的表單運用:以陣列方式運用 checkbox："></a>v-model 與 v-for 的表單運用:以陣列方式運用 checkbox：</h1><p>先用 v-model 取出不同的值，再加入空陣列 checkboxArray 裡，接下來用 v-for 取出值渲染在畫面上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;check2&quot; value=&quot;雞&quot; v-model=&quot;checkboxArray&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;check2&quot;&gt;雞&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;check3&quot; value=&quot;豬&quot; v-model=&quot;checkboxArray&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;check3&quot;&gt;豬&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;check4&quot; value=&quot;牛&quot; v-model=&quot;checkboxArray&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;check4&quot;&gt;牛&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;p&gt;晚餐火鍋裡有 &lt;span v-for=&quot;item in checkboxArray&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;。&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="運用-radio"><a href="#運用-radio" class="headerlink" title="運用 radio"></a>運用 radio</h1><p>使用方式與上面雷同，先用 v-model 取出不同的值，再加入字串 singleRadio ，接下來用 v-for 取出值渲染在畫面上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; class=&quot;form-check-input&quot; id=&quot;radio2&quot; value=&quot;雞&quot; v-model=&quot;singleRadio&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;radio2&quot;&gt;雞&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;radio&quot; class=&quot;form-check-input&quot; id=&quot;radio3&quot; value=&quot;豬&quot; v-model=&quot;singleRadio&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;radio3&quot;&gt;豬&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;radio&quot; class=&quot;form-check-input&quot; id=&quot;radio4&quot; value=&quot;牛&quot; v-model=&quot;singleRadio&quot;&gt;</span><br><span class="line">            &lt;label class=&quot;form-check-label&quot; for=&quot;radio4&quot;&gt;牛&lt;/label&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;p&gt;晚餐火鍋裡有 &lt;span v-for=&quot;item in singleRadio&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;。&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="運用-select"><a href="#運用-select" class="headerlink" title="運用 select"></a>運用 select</h1><p>option 的保留為空的預設值，亦同樣以 v-model 取出不同的值，再加入字串 selected 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=&quot;&quot; id=&quot;&quot; class=&quot;form-control&quot; v-model=&quot;selected&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;&quot; disabled&gt;--請選擇--&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;賤人&quot;&gt;--賤人--&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;美女&quot;&gt;--美女--&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              textarea: &apos;&apos;,</span><br><span class="line">              checkbox1: false,</span><br><span class="line">              checkboxArray: [],</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="v-for-製作表單資料"><a href="#v-for-製作表單資料" class="headerlink" title="v-for 製作表單資料"></a>v-for 製作表單資料</h1><ul><li>直接在 option 裡面以 <code>v-for</code> 運用 <code>selectData</code></li><li>value 直接用 <code>item</code>繪製 (value 是動態屬性因此要加 v-bind)</li><li>直接插入 item 在花括號裡面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=&quot;&quot; id=&quot;&quot; class=&quot;form-control&quot; v-model=&quot;selected2&quot;&gt;</span><br><span class="line">            &lt;option disabled value=&quot;&quot;&gt;請選擇&lt;/option&gt;</span><br><span class="line">            &lt;option :value=&quot;item&quot; v-for=&quot;item in selectData&quot;&gt;</span><br><span class="line">              &#123;&#123;item&#125;&#125;</span><br><span class="line">            &lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">          &lt;p&gt;小明喜歡的女生是 &#123;&#123; selected2 &#125;&#125;。&lt;/p&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             singleRadio: &apos;&apos;,</span><br><span class="line">             selected: &apos;&apos;,</span><br><span class="line">             selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">             selected2: &apos;&apos;,</span><br><span class="line">             multiSelected: [],</span><br><span class="line">             sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">             // 修飾符</span><br><span class="line">             lazyMsg: &apos;&apos;,</span><br><span class="line">             age: &apos;&apos;,</span><br><span class="line">             trimMsg: &apos;&apos;</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="v-for-製作多選"><a href="#v-for-製作多選" class="headerlink" title="v-for 製作多選"></a>v-for 製作多選</h1><p>在 <code>select</code> 元素上加上 <code>multiple</code>屬性，並透過 shift 與 cmc 選擇</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;select name=&quot;&quot; id=&quot;&quot; class=&quot;form-control&quot; multiple v-model=&quot;multiSelected&quot;&gt;</span><br><span class="line">          &lt;option value=&quot;小美&quot;&gt;小美&lt;/option&gt;</span><br><span class="line">          &lt;option value=&quot;可愛小妞&quot;&gt;可愛小妞&lt;/option&gt;</span><br><span class="line">          &lt;option value=&quot;漂亮阿姨&quot;&gt;漂亮阿姨&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;p&gt;小明喜歡的女生是 &lt;span v-for=&quot;item in multiSelected&quot;&gt;&#123;&#123; item &#125;&#125; &lt;/span&gt;。&lt;/p&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             singleRadio: &apos;&apos;,</span><br><span class="line">             selected: &apos;&apos;,</span><br><span class="line">             selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">             selected2: &apos;&apos;,</span><br><span class="line">             multiSelected: [],</span><br><span class="line">             sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">             // 修飾符</span><br><span class="line">             lazyMsg: &apos;&apos;,</span><br><span class="line">             age: &apos;&apos;,</span><br><span class="line">             trimMsg: &apos;&apos;</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="複選框"><a href="#複選框" class="headerlink" title="複選框"></a>複選框</h1><p>在 input 元素上加上布林屬性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-check&quot;&gt;</span><br><span class="line">           &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;sex&quot; v-model=&quot;sex&quot; true-value=&quot;男生&quot; false-value=&quot;女生&quot;&gt;</span><br><span class="line">           &lt;label class=&quot;form-check-label&quot; for=&quot;sex&quot;&gt;&#123;&#123; sex &#125;&#125;&lt;/label&gt;</span><br><span class="line">         &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             singleRadio: &apos;&apos;,</span><br><span class="line">             selected: &apos;&apos;,</span><br><span class="line">             selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">             selected2: &apos;&apos;,</span><br><span class="line">             multiSelected: [],</span><br><span class="line">             sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">             // 修飾符</span><br><span class="line">             lazyMsg: &apos;&apos;,</span><br><span class="line">             age: &apos;&apos;,</span><br><span class="line">             trimMsg: &apos;&apos;</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line">       &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="表單與修飾符"><a href="#表單與修飾符" class="headerlink" title="表單與修飾符"></a>表單與修飾符</h1><ul><li>.lazmag</li></ul><p>必須實際 onChange 後才會將資料呈現在畫面上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; lazyMsg &#125;&#125;</span><br><span class="line">          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model.lazy=&quot;lazyMsg&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">              selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">              selected2: &apos;&apos;,</span><br><span class="line">              multiSelected: [],</span><br><span class="line">              sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">              // 修飾符</span><br><span class="line">              lazyMsg: &apos;&apos;,</span><br><span class="line">              age: &apos;&apos;,</span><br><span class="line">              trimMsg: &apos;&apos;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>.number</li></ul><p>將 input 輸出轉為純數值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&#123;&#123; age &#125;&#125;&lt;/pre&gt;</span><br><span class="line">   &lt;input type=&quot;number&quot; class=&quot;form-control&quot; v-model.number=&quot;age&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">              selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">              selected2: &apos;&apos;,</span><br><span class="line">              multiSelected: [],</span><br><span class="line">              sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">              // 修飾符</span><br><span class="line">              lazyMsg: &apos;&apos;,</span><br><span class="line">              age: &apos;&apos;,</span><br><span class="line">              trimMsg: &apos;&apos;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>.trim</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; trimMsg &#125;&#125;緊黏的文字</span><br><span class="line">      &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model.trim=&quot;trimMsg&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              singleRadio: &apos;&apos;,</span><br><span class="line">              selected: &apos;&apos;,</span><br><span class="line">              selectData: [&apos;小美&apos;, &apos;可愛小妞&apos;, &apos;漂亮阿姨&apos;],</span><br><span class="line">              selected2: &apos;&apos;,</span><br><span class="line">              multiSelected: [],</span><br><span class="line">              sex: &apos;男生&apos;,</span><br><span class="line"></span><br><span class="line">              // 修飾符</span><br><span class="line">              lazyMsg: &apos;&apos;,</span><br><span class="line">              age: &apos;&apos;,</span><br><span class="line">              trimMsg: &apos;&apos;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用-v-model-綁定-input-輸入字串&quot;&gt;&lt;a href=&quot;#使用-v-model-綁定-input-輸入字串&quot; class=&quot;headerlink&quot; title=&quot;使用 v-model 綁定 input 輸入字串&quot;&gt;&lt;/a&gt;使用 v-model 綁定 
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [2] - methods、computed、watch 的使用情境</title>
    <link href="http://yoursite.com/2019/07/09/2019-07-09/"/>
    <id>http://yoursite.com/2019/07/09/2019-07-09/</id>
    <published>2019-07-08T16:00:00.000Z</published>
    <updated>2019-10-11T05:47:50.328Z</updated>
    
    <content type="html"><![CDATA[<h1 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h1><ul><li><p>computed 方法，會將結果直接回傳存到變數裡面，而且這個變數可以直接使用在畫面上。在 computed 內的任何屬性都是 function 。 原始 data 結構的值若更動時，computed 裡面的值才會跟著更動。- computed 是在監控資料更動後，重新運算結果呈現於畫面上，一般來說不會修改資料，只會回傳用於畫面呈現的資料。- methods 就是互動的函式，需要觸發才會運作會用來修改資料內容</p></li><li><p>methods 就是互動的函式，需要觸發才會運作<br>會用來修改資料內容</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;text&quot;&gt;</span><br><span class="line">          &lt;button class=&quot;btn btn-primary mt-1&quot;&gt;反轉字串&lt;/button&gt;</span><br><span class="line">          &lt;div class=&quot;mt-3&quot;&gt;</span><br><span class="line">            &lt;!-- &#123;&#123; text.split(&apos;&apos;).reverse().join(&apos;&apos;) &#125;&#125;  表達式太冗長可以直接代替成computed裡的屬性結果會相同--&gt;</span><br><span class="line">            &#123;&#123;reverseText&#125;&#125;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &#123;&#123;reverseText&#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;&apos;,</span><br><span class="line">              newText: &apos;&apos;</span><br><span class="line">            &#125;,</span><br><span class="line">            // 請在此撰寫 JavaScript</span><br><span class="line">            computed: &#123;</span><br><span class="line">              reverseText: function () &#123;</span><br><span class="line">                return this.text.split(&apos;&apos;).reverse().join(&apos;&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              &#125; </span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h2 id="過濾陣列資料，運用-computed-取代-methods"><a href="#過濾陣列資料，運用-computed-取代-methods" class="headerlink" title="過濾陣列資料，運用 computed 取代 methods"></a>過濾陣列資料，運用 computed 取代 methods</h2><p>computed 是針對輸出到畫面上的內容，輸出前預先處理。資料可以透過括號與表達式呈現，但數量一多就不容易管理。因此透過變數直接將運算結果呈現在畫面上，是另一種作法。而透過事件觸發則是另一種</p><ul><li>arrayData(原始資料結構)</li><li>item 裡面的個別資料</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;Computed&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來過濾資料。&lt;/p&gt;</span><br><span class="line">       &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;filterText&quot;&gt;</span><br><span class="line">       &lt;ul&gt;</span><br><span class="line">         &lt;li v-for=&quot;(item, key) in filterArray&quot; :key=&quot;item.age&quot;&gt;</span><br><span class="line">           &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲 &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">         &lt;/li&gt;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來呈現時間格式。&lt;/p&gt;</span><br><span class="line">       &lt;p&gt;</span><br><span class="line">         &#123;&#123;formatTime&#125;&#125;</span><br><span class="line">       &lt;/p&gt;</span><br><span class="line">       &lt;h4&gt;Watch&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 trigger 來觸發旋轉 box、並在三秒後改變回來&lt;/p&gt;</span><br><span class="line">       &lt;div class=&quot;box&quot; :class=&quot;&#123;&apos;rotate&apos;: trigger &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">       &lt;hr&gt;</span><br><span class="line">       &lt;button class=&quot;btn btn-outline-primary&quot; @click=&quot;trigger=true&quot;&gt;Counter&lt;/button&gt;</span><br><span class="line">     &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              arrayData: [&#123;</span><br><span class="line">                  name: &apos;小明&apos;,</span><br><span class="line">                  age: 16</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                  age: 24</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;杰倫&apos;,</span><br><span class="line">                  age: 20</span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              filterText: &apos;&apos;, //過濾資料並重新繪製</span><br><span class="line">              trigger: false, //按下 couter 按鈕後讓畫面產生變化</span><br><span class="line">              newDate: 0 // 運用 timestamp</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">            filterArray: function () &#123;</span><br><span class="line">                 var vm = this;</span><br><span class="line">                 return vm.arrayData.filter(function(item) &#123;</span><br><span class="line">                   return item.name.match(vm.filterText);</span><br><span class="line">                 &#125;);</span><br><span class="line">               &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">         .box &#123;</span><br><span class="line">           transition: all .5s;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         .box.rotate &#123;</span><br><span class="line">           transform: rotate(45deg)</span><br><span class="line">         &#125;</span><br><span class="line">       &lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="使用-Computed-來呈現時間格式"><a href="#使用-Computed-來呈現時間格式" class="headerlink" title="使用 Computed 來呈現時間格式"></a>使用 Computed 來呈現時間格式</h2><ul><li>畫面運行完才會執行 mounted</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;Computed&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來過濾資料。&lt;/p&gt;</span><br><span class="line">       &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;filterText&quot;&gt;</span><br><span class="line">       &lt;ul&gt;</span><br><span class="line">         &lt;li v-for=&quot;(item, key) in filterArray&quot; :key=&quot;item.age&quot;&gt;</span><br><span class="line">           &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲 &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">         &lt;/li&gt;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來呈現時間格式。&lt;/p&gt;</span><br><span class="line">       &lt;p&gt;</span><br><span class="line">         &#123;&#123;formatTime&#125;&#125;</span><br><span class="line">       &lt;/p&gt;</span><br><span class="line">       &lt;h4&gt;Watch&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 trigger 來觸發旋轉 box、並在三秒後改變回來&lt;/p&gt;</span><br><span class="line">       &lt;div class=&quot;box&quot; :class=&quot;&#123;&apos;rotate&apos;: trigger &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">       &lt;hr&gt;</span><br><span class="line">       &lt;button class=&quot;btn btn-outline-primary&quot; @click=&quot;trigger=true&quot;&gt;Counter&lt;/button&gt;</span><br><span class="line">     &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              arrayData: [&#123;</span><br><span class="line">                  name: &apos;小明&apos;,</span><br><span class="line">                  age: 16</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                  age: 24</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;杰倫&apos;,</span><br><span class="line">                  age: 20</span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              filterText: &apos;&apos;, //過濾資料並重新繪製</span><br><span class="line">              trigger: false, //按下 couter 按鈕後讓畫面產生變化</span><br><span class="line">              newDate: 0 // 運用 timestamp</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line">            filterArray: function () &#123;</span><br><span class="line">                 var vm = this;</span><br><span class="line">                 return vm.arrayData.filter(function(item) &#123;</span><br><span class="line">                   return item.name.match(vm.filterText);</span><br><span class="line">                 &#125;);</span><br><span class="line">               &#125;,</span><br><span class="line">               formatTime: function () &#123;</span><br><span class="line"></span><br><span class="line">                console.log(this.newDate)</span><br><span class="line">                var dates = new Date(this.newDate * 1000);</span><br><span class="line">                var year = dates.getFullYear();</span><br><span class="line">                var month = dates.getMonth() + 1;</span><br><span class="line">                var date = dates.getDate() + 1;</span><br><span class="line">                var hours = dates.getHours();</span><br><span class="line">                var minutes = dates.getMinutes();</span><br><span class="line">                var seconds = dates.getSeconds();</span><br><span class="line">                return `$&#123;year&#125;/$&#123;month&#125;/$&#123;date&#125; $&#123;hours&#125;:$&#123;minutes&#125;:$&#123;seconds&#125;`</span><br><span class="line">              &#125;&#125;,</span><br><span class="line"></span><br><span class="line">mounted: function () &#123;</span><br><span class="line">              this.newDate = Math.floor(Date.now() / 1000);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">         .box &#123;</span><br><span class="line">           transition: all .5s;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         .box.rotate &#123;</span><br><span class="line">           transform: rotate(45deg)</span><br><span class="line">         &#125;</span><br><span class="line">       &lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h1><p>監控特定變數，當變數變化的時候，執行特定事件。以下範例是 trigger 變化的時候監控 trigger。並在 3 秒後將 trigger 再改為 false</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;h4&gt;Computed&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來過濾資料。&lt;/p&gt;</span><br><span class="line">       &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;filterText&quot;&gt;</span><br><span class="line">       &lt;ul&gt;</span><br><span class="line">         &lt;li v-for=&quot;(item, key) in filterArray&quot; :key=&quot;item.age&quot;&gt;</span><br><span class="line">           &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲 &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">         &lt;/li&gt;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">       &lt;p&gt;使用 Computed 來呈現時間格式。&lt;/p&gt;</span><br><span class="line">       &lt;p&gt;</span><br><span class="line">         &#123;&#123;formatTime&#125;&#125;</span><br><span class="line">       &lt;/p&gt;</span><br><span class="line">       &lt;h4&gt;Watch&lt;/h4&gt;</span><br><span class="line">       &lt;p&gt;使用 trigger 來觸發旋轉 box、並在三秒後改變回來&lt;/p&gt;</span><br><span class="line">       &lt;div class=&quot;box&quot; :class=&quot;&#123;&apos;rotate&apos;: trigger &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">       &lt;hr&gt;</span><br><span class="line">       &lt;button class=&quot;btn btn-outline-primary&quot; @click=&quot;trigger=true&quot;&gt;Counter&lt;/button&gt;</span><br><span class="line">     &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              arrayData: [&#123;</span><br><span class="line">                  name: &apos;小明&apos;,</span><br><span class="line">                  age: 16</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                  age: 24</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;杰倫&apos;,</span><br><span class="line">                  age: 20</span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              filterText: &apos;&apos;, //過濾資料並重新繪製</span><br><span class="line">              trigger: false, //按下 couter 按鈕後讓畫面產生變化</span><br><span class="line">              newDate: 0 // 運用 timestamp</span><br><span class="line">            &#125;,</span><br><span class="line">             watch: &#123;</span><br><span class="line">              trigger: function () &#123;</span><br><span class="line">                var vm = this;</span><br><span class="line">                setTimeout(() =&gt; &#123;</span><br><span class="line">                  vm.trigger = false</span><br><span class="line">                &#125;, 3000)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">         .box &#123;</span><br><span class="line">           transition: all .5s;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         .box.rotate &#123;</span><br><span class="line">           transform: rotate(45deg)</span><br><span class="line">         &#125;</span><br><span class="line">       &lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;computed&quot;&gt;&lt;a href=&quot;#computed&quot; class=&quot;headerlink&quot; title=&quot;computed&quot;&gt;&lt;/a&gt;computed&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;computed 方法，會將結果直接回傳存到變數裡面，而且這個變數可以直接
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 基礎概念 [1] - 環境建立、指令與修飾符</title>
    <link href="http://yoursite.com/2019/07/08/2019-07-08/"/>
    <id>http://yoursite.com/2019/07/08/2019-07-08/</id>
    <published>2019-07-07T16:00:00.000Z</published>
    <updated>2019-10-11T05:57:14.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="環境建立"><a href="#環境建立" class="headerlink" title="環境建立"></a>環境建立</h1><p>Vue 的載入有 2 個版本，可以使用官網提供的 CDN 快速引入：</p><p>開發版本- 包含開發者工具、完整的警告、錯誤提示，適合開發時使用<br>生產版本- 刪除了警告，將上述開發工具都拔除，盡量縮小它的體積，適合正式發布時使用。</p><p>為了學習 Vue 的開發，因此我們選擇開發版本，並且在 script 標籤引入 vue.js 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">//這樣這裡就可以準備撰寫vue的檔案啦!</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h1 id="建立-Vue-應用程式"><a href="#建立-Vue-應用程式" class="headerlink" title="建立 Vue 應用程式"></a>建立 Vue 應用程式</h1><p>建立 Vue 的應用程式，通常是以 id 來命名 (ex:app)，並且在 javascript 的地方以 new 初始化 vue，裡面放入一個物件，以 el 指定剛才命名的 id app，這裡的 el 名稱，就是與後面 HTML 綁定的 id 名稱相同。</p><p>同時，在應用程式生成之後，必須綁定一個 HTML 元素。並在 data 建立一個物件放入資料，接著在 html 元素中以兩層花括號的方式指定要顯示的資料名稱，接著就會在畫面上呈顯出資料的部分。範例如下：</p><ul><li>HTML 部份</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&apos;app&apos;&gt;</span><br><span class="line">&#123;&#123;text&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>JavaScript 部份</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;some words&apos;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><h1 id="不可建立巢狀應用程式"><a href="#不可建立巢狀應用程式" class="headerlink" title="不可建立巢狀應用程式"></a>不可建立巢狀應用程式</h1><p>要注意 Vue 雖然可以在同一個頁面建立多個應用程式，但是不能建立如下的巢狀結構，否則第二個應用程式會無效</p><ul><li>HTML 部份</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&apos;app&apos;&gt;</span><br><span class="line">&#123;&#123;text&#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;div id=&apos;app2&apos;&gt;</span><br><span class="line">&#123;&#123;text2&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>JavaScript 部份</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">            el: &quot;#app&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text: &apos;some words&apos;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">var app2 = new Vue(&#123;</span><br><span class="line">            el: &quot;#app2&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              text2: &apos;some words&apos;</span><br><span class="line">            &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h1 id="MVVM-與雙向自動綁定"><a href="#MVVM-與雙向自動綁定" class="headerlink" title="MVVM 與雙向自動綁定"></a>MVVM 與雙向自動綁定</h1><p>Vue 是受 MVVM 風格啟發的一套雙向數據綁定的 Javascript 框架。MVVM 是一種軟體架構模式</p><p><img src="https://i.imgur.com/MESxq2B.png" alt></p><p>它的核心只關心視圖層 (View)，它的核心是 MVVM 中的 VM，也就是 ViewModel。ViewModel 負責連接 View 和 Model，保證視圖和數據的一致性。但我們在使用 Vue 的時候，只會利用 修改 Model 來影響視圖，是以資料狀態操作畫面，與例如 jQuery 以操作 DOM 方式改變畫面的方式不同。</p><ul><li>模型<br>模型是指代表真實狀態內容的領域模型（物件導向），或指代表內容的資料存取層（以資料為中心）。</li><li>視圖<br>就像在 MVC 和 MVP 模式中一樣，視圖是用戶在螢幕上看到的結構、布局和外觀（UI）。</li><li>視圖模型<br>視圖模型是暴露公共屬性和命令的視圖的抽象。MVVM 沒有 MVC 模式的控制器，也沒有 MVP 模式的 presenter，有的是一個繫結器。在視圖模型中，繫結器在視圖和資料繫結器之間進行通訊。</li></ul><ol><li>使用雙花括號與資料串接</li><li>使用 v-model 綁定 HTML 屬性</li><li>使用 v-text 直接將資料寫入畫面</li><li>使用 v-html 除了將資料寫入畫面，還可修改 HTML 結構</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- HTML 部份</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &#123;&#123;message&#125;&#125;</span><br><span class="line">          &lt;div v-html=&quot;message&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;input type=&quot;text&quot; v-model=&quot;message&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- JavaScript 部份</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            // 在此建立資料內容</span><br><span class="line"></span><br><span class="line">            data: &#123;</span><br><span class="line">              message: &apos;&lt;span&gt;哈囉&lt;span&gt;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="指令-Directives"><a href="#指令-Directives" class="headerlink" title="指令 (Directives)"></a>指令 (Directives)</h1><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><pre><code>透過指令 v-bind 的方式，將資料反應在HTML屬性上，更新 HTML 屬性。v-bind 是 Vue.js 裡面還蠻重要的功能，它可以用來綁定DOM元素中的屬性，並且將屬性的值交由Vue.js來控管，因此我們便可以動態的去綁定、控制屬性，進而使得該元素變成是可控制的元素。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;img v-bind:src=&quot;imgSrc&quot; v-bind:class=&quot;className&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              imgSrc: &apos;https://images.unsplash.com/photo-1479568933336-ea01829af8de?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=d9926ef56492b20aea8508ed32ec6030&amp;auto=format&amp;fit=crop&amp;w=2250&amp;q=80&apos;,</span><br><span class="line">              className: &apos;img-fluid&apos;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h2><p>使用 v-for 來呈現資料，動態產生多筆資料在畫面上。 這個方法就類似用 forEach 將陣列（list) 的值一一取出放到變數 (item) 裡，也可以再加上索引值 (index)。<br>透過 v-for 的方式，我們可以將資料中的陣列遍歷出來，作法是在 v-for 後面的數值中，取一個任意的名稱(ex person)作為代表，取用方式如同一般我們要取出物件中的 value 一樣。<br>另外也可以透過第二個參數的部分(ex index)來取得該筆資料的實際索引值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">          &lt;pre&gt;&#123;&#123;list&#125;&#125;&lt;/pre&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;（item,index) in list&quot; &gt;</span><br><span class="line">              &#123;&#123;index+1&#125;&#125;-&#123;&#123;item.name&#125;&#125;年齡是&#123;&#123;item.age&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">          var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">              list: [&#123;</span><br><span class="line">                  name: &apos;小明&apos;,</span><br><span class="line">                  age: 16</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  name: &apos;媽媽&apos;,</span><br><span class="line">                  age: 38,</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="v-for-在陣列和物件的迴圈的運用"><a href="#v-for-在陣列和物件的迴圈的運用" class="headerlink" title="v-for 在陣列和物件的迴圈的運用"></a>v-for 在陣列和物件的迴圈的運用</h3><p>使用 objectData 的時候，索引是物件的屬性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">           &lt;li v-for=&quot;(item, key) in objectData&quot;&gt;</span><br><span class="line">             &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">           &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;ul&gt;</span><br><span class="line">           &lt;li v-for=&quot;(item, key) in arrayData&quot;&gt;</span><br><span class="line">             &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">           &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;list-item&apos;, &#123;</span><br><span class="line">           template: `</span><br><span class="line">   &lt;li&gt;</span><br><span class="line">     &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">   &lt;/li&gt;</span><br><span class="line"> `,</span><br><span class="line">           props: [&apos;item&apos;]</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             arrayData: [&#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             ],</span><br><span class="line">             objectData: &#123;</span><br><span class="line">               ming: &#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               auntie: &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               jay: &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             &#125;,</span><br><span class="line">             filterArray: [],</span><br><span class="line">             filterText: &apos;&apos;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/5HFiqxL.png" alt></p><h3 id="v-for-與-key"><a href="#v-for-與-key" class="headerlink" title="v-for 與 key"></a>v-for 與 key</h3><p>Vue 在切換畫面的時候，是部份置換，所以下面反轉陣列的例子在切換 input 的時候，不會完整切換 DOM 元素，所以這裡使用 <code>key</code> 來改善這個問題</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">         &lt;li v-for=&quot;(item, key) in arrayData&quot; :key=&quot;item.age&quot;&gt;</span><br><span class="line">           &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲 &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">         &lt;/li&gt;</span><br><span class="line">       &lt;/ul&gt;</span><br><span class="line">       &lt;button class=&quot;btn btn-outline-primary&quot; @click=&quot;reverseArray&quot;&gt;反轉陣列&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;list-item&apos;, &#123;</span><br><span class="line">           template: `</span><br><span class="line">   &lt;li&gt;</span><br><span class="line">     &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">   &lt;/li&gt;</span><br><span class="line"> `,props: [&apos;item&apos;]</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">         var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">             arrayData: [&#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             ],</span><br><span class="line">             objectData: &#123;</span><br><span class="line">               ming: &#123;</span><br><span class="line">                 name: &apos;小明&apos;,</span><br><span class="line">                 age: 16</span><br><span class="line">               &#125;,</span><br><span class="line">               auntie: &#123;</span><br><span class="line">                 name: &apos;漂亮阿姨&apos;,</span><br><span class="line">                 age: 24</span><br><span class="line">               &#125;,</span><br><span class="line">               jay: &#123;</span><br><span class="line">                 name: &apos;杰倫&apos;,</span><br><span class="line">                 age: 20</span><br><span class="line">               &#125;</span><br><span class="line">             &#125;,</span><br><span class="line">             filterArray: [],</span><br><span class="line">             filterText: &apos;&apos;</span><br><span class="line">           &#125;,methods: &#123;</span><br><span class="line"></span><br><span class="line">             reverseArray: function () &#123;</span><br><span class="line">               this.arrayData.reverse()</span><br><span class="line">               console.log(this.arrayData)</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure><h3 id="v-for-與資料過濾"><a href="#v-for-與資料過濾" class="headerlink" title="v-for 與資料過濾"></a>v-for 與資料過濾</h3><p><code>filterArry</code> 一開始是一個空的陣列，現在新增一個 <code>filterText</code>，以輸入的文字，輸出後第一個出現的是我們輸入的資料、陣列迴圈內容，如果是 match 狀態就會回傳一個陣列（只要在 filter 裡是回傳 true，就會將 item push 回 filterArray)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> &lt;input type=&quot;text&quot; class=&quot;form-control&quot; v-model=&quot;filterText&quot; @keyup.enter=&quot;filterData&quot;&gt;</span><br><span class="line"> &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(item, key) in filterArray&quot; :key=&quot;item.age&quot;&gt;</span><br><span class="line">              &#123;&#123; key &#125;&#125; - &#123;&#123; item.name &#125;&#125; &#123;&#123; item.age &#125;&#125; 歲 &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>Vue.component(‘list-item’, {<br>template: <code>&lt;li&gt;   歲 &lt;/li&gt;</code>,props: [‘item’]<br>});</p><pre><code> var app = new Vue({   el: &apos;#app&apos;,   data: {     arrayData: [{         name: &apos;小明&apos;,         age: 16       },       {         name: &apos;漂亮阿姨&apos;,         age: 24       },       {         name: &apos;杰倫&apos;,         age: 20       }     ],     objectData: {       ming: {         name: &apos;小明&apos;,         age: 16       },       auntie: {         name: &apos;漂亮阿姨&apos;,         age: 24       },       jay: {         name: &apos;杰倫&apos;,         age: 20       }     },     filterArray: [],     filterText: &apos;&apos;   },   methods: {     filterData: function () {       var vm = this; //指向的是vue應用程式的this，因此可以直接取用data       vm.filterArray = vm.arrayData.filter(function (item) {       console.log(vm.filterText, item.name, item.name.match(vm.filterText))       });       return item.name.match(vm.filterText);     },} })</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 一些特殊例子下運用 v-for 不被允許的狀況</span><br><span class="line"></span><br><span class="line">- 直接修改陣列長度</span><br></pre></td></tr></table></figure><p>&lt;button class=”btn btn-outline-primary” @click=”cantWork”&gt;無法運行</p><ul><li v-for="(item, key) in arrayData" :key="item.age"> -   歲 <input type="text"></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Vue.component(‘list-item’, {<br>template: <code>&lt;li&gt;   歲 &lt;/li&gt;</code>,props: [‘item’]<br>});</p><pre><code> var app = new Vue({   el: &apos;#app&apos;,   data: {     arrayData: [{         name: &apos;小明&apos;,         age: 16       },       {         name: &apos;漂亮阿姨&apos;,         age: 24       },       {         name: &apos;杰倫&apos;,         age: 20       }     ],     objectData: {       ming: {         name: &apos;小明&apos;,         age: 16       },       auntie: {         name: &apos;漂亮阿姨&apos;,         age: 24       },       jay: {         name: &apos;杰倫&apos;,         age: 20       }     },     filterArray: [],     filterText: &apos;&apos;   },   methods: {    cantWork: function () {       this.arrayData.length = 0;       console.log(this.arrayData);} })</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//雖然陣列長度的「數字」被修改為 0，但畫面上的資料並沒有因此消失</span><br><span class="line">![](https://i.imgur.com/6JBc8gt.png)</span><br><span class="line"></span><br><span class="line">- 從陣列索引修改資料</span><br><span class="line"></span><br><span class="line">要操作陣列的資料，不能直接透過索引方式</span><br></pre></td></tr></table></figure><p>&lt;button class=”btn btn-outline-primary” @click=”cantWork”&gt;無法運行</p><ul><li v-for="(item, key) in arrayData" :key="item.age"> -   歲 <input type="text"></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Vue.component(‘list-item’, {<br>template: <code>&lt;li&gt;   歲 &lt;/li&gt;</code>,props: [‘item’]<br>});</p><pre><code> var app = new Vue({   el: &apos;#app&apos;,   data: {     arrayData: [{         name: &apos;小明&apos;,         age: 16       },       {         name: &apos;漂亮阿姨&apos;,         age: 24       },       {         name: &apos;杰倫&apos;,         age: 20       }     ],     objectData: {       ming: {         name: &apos;小明&apos;,         age: 16       },       auntie: {         name: &apos;漂亮阿姨&apos;,         age: 24       },       jay: {         name: &apos;杰倫&apos;,         age: 20       }     },     filterArray: [],     filterText: &apos;&apos;   },   methods: {    cantWork: function () {    this.arrayData[0]={        name:&apos;小強&apos;;        age:&apos;99&apos;,    }console.log(this.arrayData);}}   )</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">![](https://i.imgur.com/COHEbEU.png)</span><br><span class="line"></span><br><span class="line">#### 解決方式：如果要操作的資料不在原有資料結構裡，用 Vue.set() 解決，寫進資料裡面讓它可重新被監控。</span><br><span class="line"></span><br><span class="line">    Vue.set( target, propertyName/index, value )</span><br><span class="line">    参数：</span><br><span class="line">    &#123;Object | Array&#125; target</span><br><span class="line">    &#123;string | number&#125; propertyName/index</span><br><span class="line">    &#123;any&#125; value</span><br></pre></td></tr></table></figure><p>methods: {</p><p> Vue.set(this.arrayData, 0, {<br>name: ‘joy’,<br>age: 33<br>});<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 使用純數字迴圈</span><br></pre></td></tr></table></figure><ul>            <li v-for="item in 9">                          </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## v-if</span><br><span class="line"></span><br><span class="line">    透過v-if的情況，依據 v-if 後的條件是否為true時，決定該元素是否會顯示，若否則相反，並且該元素實際上會從DOM上消失。就是在 v-for 之上再加上一個判斷式。</span><br></pre></td></tr></table></figure><div id="app">          <pre></pre>          <ul>            <li v-for="（item,index) in list" v-if="item.age<25">              NaN-年齡是            </li>          </ul>        </div><pre><code>&lt;script&gt;  var app = new Vue({    el: &apos;#app&apos;,    data: {      list: [{          name: &apos;小明&apos;,          age: 16        },        {          name: &apos;媽媽&apos;,          age: 38,        }      ]    }  })&lt;/script&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 使用 v-if、v-else 切換物件呈現</span><br><span class="line"></span><br><span class="line">- 這裡的例子也是上面所說的判斷式運用，以`v-if` 運用原本已經定義在資料結構裡的 `isSuccess`</span><br><span class="line">- 下方相鄰元素使用 `v-else` (代替 `isSuccess`)</span><br></pre></td></tr></table></figure><pre><code>&lt;div class=&quot;alert alert-success&quot; v-if=&quot;isSuccess&quot;&gt;成功!&lt;/div&gt;&lt;div class=&quot;alert alert-danger&quot; v-else&gt;失敗!&lt;/div&gt;&lt;div class=&quot;form-check&quot;&gt;  &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;isSuccess&quot; v-model=&quot;isSuccess&quot;&gt;  &lt;label class=&quot;form-check-label&quot; for=&quot;isSuccess&quot;&gt;啟用元素狀態&lt;/label&gt;&lt;/div&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> <script>          var app = new Vue({            el: '#app',            data: {              isSuccess: true,              showTemplate: true,              link: 'a',              loginType: 'username'            },            methods: {              toggleLoginType: function () {                return this.loginType = this.loginType === 'username' ? 'email' : 'username'              }            }          });</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-else-if 製作分類頁籤</span><br><span class="line"></span><br><span class="line">- 在 content 的元素上運用 `v-if` 和 `v-else-of` 判斷</span><br></pre></td></tr></table></figure><ul class="nav nav-tabs">            <li class="nav-item">              <a class="nav-link" href="#" :class="{'active':link=='a'}" @click.prevent="link='a'">標題一</a>            </li>            <li class="nav-item">              <a class="nav-link" href="#" :class="{'active':link=='b'}" @click.prevent="link='b'">標題二</a>            </li>            <li class="nav-item">              <a class="nav-link" :class="{'active':link=='c'}" href="#" @click.prevent="link='c'">標題三</a>            </li>          </ul>          <div class="content">            <div v-if="link=='a'">Ａ</div>            <div v-else-if="link=='b'">Ｂ</div>            <div v-else-if="link=='c'">Ｃ</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> <script>          var app = new Vue({            el: '#app',            data: {              isSuccess: true,              showTemplate: true,              link: 'a',              loginType: 'username'            },            methods: {              toggleLoginType: function () {                return this.loginType = this.loginType === 'username' ? 'email' : 'username'              }            }          });</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-if 與 Key 的運用</span><br><span class="line"></span><br><span class="line">由於 Vue 的部份置換特性，因此加上 key 值讓畫面完整切換</span><br></pre></td></tr></table></figure><template v-if="loginType === 'username'">            <label>Username</label>            <input class="form-control" placeholder="Enter your username" :key="1">          </template>          <template v-else>            <label>Email</label>            <input class="form-control" placeholder="Enter your email address" :key="2">          </template>          <button class="btn btn-outline-primary mt-3" @click="toggleLoginType">切換狀態</button><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> <script>          var app = new Vue({            el: '#app',            data: {              isSuccess: true,              showTemplate: true,              link: 'a',              loginType: 'username'            },            methods: {              toggleLoginType: function () {                return this.loginType = this.loginType === 'username' ? 'email' : 'username'              }            }          });</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-if 與 v-show 差異</span><br><span class="line"></span><br><span class="line">`v-show` 是透過移除 `display:none` 切換畫面的顯示</span><br></pre></td></tr></table></figure><div class="alert alert-success" v-show="isSuccess">成功!</div>          <div class="alert alert-danger" v-show="!isSuccess">失敗!</div>          <div class="form-check">            <input type="checkbox" class="form-check-input" id="isSuccess2" v-model="isSuccess">            <label class="form-check-label" for="isSuccess2">啟用元素狀態</label></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> <script>          var app = new Vue({            el: '#app',            data: {              isSuccess: true,              showTemplate: true,              link: 'a',              loginType: 'username'            },            methods: {              toggleLoginType: function () {                return this.loginType = this.loginType === 'username' ? 'email' : 'username'              }            }          });</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![](https://i.imgur.com/SgciFh1.png)</span><br><span class="line"></span><br><span class="line">而 v-if 則是直接移除 DOM 元素，一次只會顯示一個 DOM 元素</span><br><span class="line"></span><br><span class="line">![](https://i.imgur.com/K2JfQ8N.png)</span><br><span class="line"></span><br><span class="line">### v-for、v-if 的判斷式</span><br><span class="line"></span><br><span class="line">v-for、v-if 一起寫在一個元素上的時候，會先執行 v-for 再執行 v-if</span><br></pre></td></tr></table></figure><ul>            <li v-for="(item, key) in arrayData" v-if="item.age <=20">               -   歲            </li>          </ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> Vue.component(‘list-item’, {<br>            template: <code>&lt;li&gt;        歲    &lt;/li&gt;</code>,            props: [‘item’]<br>          });</p><pre><code>var app = new Vue({  el: &apos;#app&apos;,  data: {    arrayData: [{        name: &apos;小明&apos;,        age: 16      },      {        name: &apos;漂亮阿姨&apos;,        age: 24      },      {        name: &apos;杰倫&apos;,        age: 20      }    ],    objectData: {      ming: {        name: &apos;小明&apos;,        age: 16      },      auntie: {        name: &apos;漂亮阿姨&apos;,        age: 24      },      jay: {        name: &apos;杰倫&apos;,        age: 20      }    },    filterArray: [],    filterText: &apos;&apos;  }</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-for 與元件</span><br><span class="line"></span><br><span class="line">現在建議元件使用 v-for 都加上 key。</span><br></pre></td></tr></table></figure><ul>            <list-item :item="item" v-for="(item, key) in arrayData" :key="item.age"></list-item>          </ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 處理使用者互動行為 v-on</span><br><span class="line"></span><br><span class="line">v-on 可以綁定 method 名稱，當然也需要在實例中 methods 中宣告相同名稱的 function。v-on 顧名思義就是類似於原生 js 中的 on 事件，而使用方法一樣是要綁定的元素上，放一個 v-on 的屬性，例如，我們要在元素上定義一個點擊會 alert 一個提示的事件，我們就可以在後面寫上要觸發行為的條件(click)，並且在 value 的值內放入指定的 method。</span><br><span class="line">v-model 則是在 vue 中用來實現雙向綁定的方式。透過 v-model 綁定在元素上，我們可以創造一個雙向綁定資料的概念，也就是說假設我在表單組件 input 上設置 v-model 並綁定到 data 中的 meesage 上，他除了會即時顯示 data.message 中資料以外，我們在更動 input 中的數值時也會同步更改回 data 中 message 的 value。</span><br></pre></td></tr></table></figure> <div id="app">          <input type="text" class="form-control" v-model="text">          <button class="btn btn-primary mt-1" v-on:click="reverseText">反轉字串</button>          <div class="mt-3">                      </div> </div> <script>          var app = new Vue({            el: '#app',            data: {              text: '',              newText: ''            },            // 請在此撰寫 JavaScript            methods: {              reverseText: function () {                this.newText = this.text.split('').reverse().join('');              }            }          });</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-on 與 事件修飾符</span><br><span class="line"></span><br><span class="line">v-on 也可透過修飾符操作事件，在事件处理程序中调用 event.preventDefault() 或 event.stopPropagation() 是非常常见的需求。</span><br><span class="line">Vue 提供了事件修飾符，包括：</span><br><span class="line"></span><br><span class="line">.stop</span><br><span class="line">.prevent</span><br><span class="line">.capture</span><br><span class="line">.self</span><br><span class="line">.once</span><br><span class="line">.passive</span><br><span class="line"></span><br><span class="line">- 此處在 v-on 之後透過修飾符取消預設行為</span><br></pre></td></tr></table></figure> <div id="app">          <button class="btn btn-primary mt-1" v-on:click.prevent="reverseText">反轉字串</button> </div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-on 與 按鍵修飾符</span><br><span class="line"></span><br><span class="line">Vue 允許為 v-on 在監聽鍵盤事件時添加按鍵修飾符：</span><br></pre></td></tr></table></figure><div id="app">          <input type="text" class="form-control" v-on:keyup.enter="reverseText" v-model="text"></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 用縮寫表示按鍵修飾符</span><br><span class="line"></span><br><span class="line">v-on 可以 `＠` 符號來表示</span><br></pre></td></tr></table></figure><div id="app">          <input type="text" class="form-control" ＠keyup.enter="reverseText" v-model="text"></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">v-bind 可以用 `:` 表示</span><br></pre></td></tr></table></figure> <div id="app"><a :href="link" class="btn btn-primary mt-1" @click="reverseText">反轉字串</a></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### v-on 與帶入參數</span><br><span class="line"></span><br><span class="line">如何透過參數將資料傳送到 method，直接在 button 元素上帶入參數，所以每次點擊就會在方法裡增加數字</span><br></pre></td></tr></table></figure><ul>            <li v-for="item in arrayData" class="my-2">               有  元              <button class="btn btn-sm btn-outline-primary" @click="storeMoney(item)">儲值</button>            </li>          </ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>   <script>          var app = new Vue({            el: '#app',            data: {              arrayData: [{                  name: '小明',                  age: 16,                  cash: 500                },                {                  name: '漂亮阿姨',                  age: 24,                  cash: 1000                },                {                  name: '杰倫',                  age: 20,                  cash: 5000                }              ],              isRotate: false,              text: ''            },            methods: {              changeRotate: function () {                this.isRotate = !this.isRotate;              },              storeMoney: function (item) {                item.cash = item.cash + 500;              },              trigger: function (name) {                console.log(name, '此事件被觸發了')              }            }            // 解答          });        </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>&lt;style&gt;  .box {    display: block;    transition: all .5s;  }  .box.rotate {    transform: rotate(45deg)  }&lt;/style&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## v-class 動態切換 className</span><br><span class="line"></span><br><span class="line">可以傳給 v-bind:class 一個對象，動態切換 class：</span><br></pre></td></tr></table></figure><pre><code>&lt;div class=&quot;alert alert-secondary&quot;&gt;  &lt;ol class=&quot;mb-0&quot;&gt;    &lt;li&gt;為 .box 動態加上 className &quot;rotate&quot;&lt;/li&gt;  &lt;/ol&gt;&lt;/div&gt;&lt;div id=&quot;app&quot;&gt;  &lt;div class=&quot;box&quot; :class=&quot;{&apos;rotate&apos;:isTransform}&quot;&gt;&lt;/div&gt;  &lt;hr&gt;  &lt;button class=&quot;btn btn-outline-primary&quot; @click=&quot;isTransform=!isTransform&quot;&gt;選轉物件&lt;/button&gt;&lt;/div&gt;</code></pre> <script>          var app = new Vue({            el: '#app',            data: {              isTransform: false            },          });</script><style>          .box {            transition: transform .5s;          }          .box.rotate {            transform: rotate(45deg)          }</style><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;環境建立&quot;&gt;&lt;a href=&quot;#環境建立&quot; class=&quot;headerlink&quot; title=&quot;環境建立&quot;&gt;&lt;/a&gt;環境建立&lt;/h1&gt;&lt;p&gt;Vue 的載入有 2 個版本，可以使用官網提供的 CDN 快速引入：&lt;/p&gt;
&lt;p&gt;開發版本- 包含開發者工具、完整的警告、
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Git 基本指令</title>
    <link href="http://yoursite.com/2019/06/25/2019-06-25/"/>
    <id>http://yoursite.com/2019/06/25/2019-06-25/</id>
    <published>2019-06-24T16:00:00.000Z</published>
    <updated>2019-06-28T07:05:13.090Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用終端機指令"><a href="#常用終端機指令" class="headerlink" title="常用終端機指令"></a>常用終端機指令</h3><p>$ pwd (print working directory 印出現在所在位置)<br>$ mkdir hello (make dir 建立目錄 hello)<br>$ cd hello/（change dir 移動到目錄 hello）<br>$ cd .. (回到上一層目錄)<br>$ touch index.html (建立檔案 index.html)<br>$ ls (列出目錄裡所有檔案)<br>$ ls -al (列出目錄裡所有檔案的細節)<br>$ rm index.html(徹底刪除檔案)<br>$ rm -r hello/ (徹底刪除hello資料夾)<br>$ cp hello.html world.html （複製 hello.html 為 world.html）<br>$ mv world.html images/ (把 world.html 搬到 images 資料夾 )<br>$ mv world.html 123.html (把 world.html 改名 123.html)</p><p><img src="https://i.imgur.com/6TPZXrC.png" alt></p><h3 id="使用-git"><a href="#使用-git" class="headerlink" title="使用 git"></a>使用 git</h3><h4 id="檢視目前設定"><a href="#檢視目前設定" class="headerlink" title="檢視目前設定"></a>檢視目前設定</h4><p>$ git config –list</p><h4 id="設定帳密"><a href="#設定帳密" class="headerlink" title="設定帳密"></a>設定帳密</h4><p>$ git config –global user.name ‘cxxxxxxx’<br>$ git config –global user.email ‘cxxxxxxx@gmail.com’</p><h4 id="查詢設定"><a href="#查詢設定" class="headerlink" title="查詢設定"></a>查詢設定</h4><p>$ git config –list</p><h3 id="Git-初始化"><a href="#Git-初始化" class="headerlink" title="Git 初始化"></a>Git 初始化</h3><p>讓 Git 知道這個資料夾要進行版控</p><ul><li>建立目錄<br>$ mkdir git-practice<br>$ cd git-practice</li><li>git 初始化<br>$ git init (自動建立一個.git目錄)</li></ul><h3 id="Git-重要區塊"><a href="#Git-重要區塊" class="headerlink" title="Git 重要區塊"></a>Git 重要區塊</h3><ul><li>工作目錄 (working)</li><li>暫存區域 (staging)</li><li>儲存庫 (repository)</li></ul><blockquote><p>它們並不是被放到某個「目錄」，比較像是狀態的「改變」</p></blockquote><h4 id="新增檔案"><a href="#新增檔案" class="headerlink" title="新增檔案"></a>新增檔案</h4><ul><li>現在 git 狀態<br>$ git status<br>$ git add index.html (新增一個檔案的時候，status 還是 untracked file，之後從工作目錄改到暫存區域變成 new file )<br>$ git commit -m “add index” (推到儲存庫，status 顯示 working tree clean)</li></ul><p><img src="https://i.imgur.com/hJEeFVT.png" alt></p><blockquote><p>add+commit 這樣的循環是一次存檔<br>commit 的訊息很重要，重點是這次存了什麼</p></blockquote><ul><li>檢視記錄<br>$ git log<br>$ git log –oneline</li></ul><h3 id="Git-使用情境-1"><a href="#Git-使用情境-1" class="headerlink" title="Git 使用情境 1"></a>Git 使用情境 1</h3><ul><li><p>檔案不小心刪掉怎麼辦？<br>$ rm index.html<br>$ git checkout –index.html<br>$ git checkout . (把這個目錄恢復成最近一次 commit 狀態)</p></li><li><p>查詢檔案作者<br>$ git blame index.html</p></li><li><p>git 裡新增目錄並進行版控<br>由於 git 不會把空資料夾運算進版控，所以可以放一個隱藏檔<br>$ touch hello-world/.keep</p></li></ul><h3 id="使用分支"><a href="#使用分支" class="headerlink" title="使用分支"></a>使用分支</h3><p>為什麼要使用分支？</p><blockquote><p>一般來說，我們分支只是貼在某個 commit 上的貼紙，例如下圖的 master :</p></blockquote><p><img src="https://i.imgur.com/Vly0sFs.png" alt></p><ul><li>查詢分支<br>$ git branch </li><li>開新分支<br>$ git branch xxxx (git branch 後面加上要開的分支名稱)</li></ul><p><img src="https://i.imgur.com/keIwyUn.png" alt></p><blockquote><p>如果 HEAD 現在指向 master，意思就是「現在正在 master 分之上」</p></blockquote><ul><li>切換分支<br>$ git checkout cat (switched to master ‘cat’ )</li><li>合併分支<br>$ git merge cat </li></ul><p>合併前：<br><img src="https://i.imgur.com/9VLiKmo.png" alt><br>合併後：<br><img src="https://i.imgur.com/xyO3GU3.png" alt></p><blockquote><p>合併分支可看成只是在移動貼紙，但是這邊的合併還算單純，所以算是一種「<strong>快轉合併</strong>」</p><ul><li>刪除分支<br>$ git branch -d cat<br>只是把 cat 貼紙撕掉<br>commit 或是檔案不會因此受到影響<br>Git 的本體是 commit </li></ul></blockquote><h3 id="複雜一點的分支"><a href="#複雜一點的分支" class="headerlink" title="複雜一點的分支"></a>複雜一點的分支</h3><p>如果是各自新增的 branch 就沒辦法快轉合併了，要怎麼處理？例如現在分別有一個 dog 跟 cat branch，假設現在 HEAD 指向 dog branch：<br><img src="https://i.imgur.com/cM5Ho0b.png" alt></p><ul><li>合併 dog 跟 cat branch<br>$ git merge cat</li></ul><p><img src="https://i.imgur.com/nR08OV6.png" alt></p><h3 id="另一種合併分支的方式-（rebase"><a href="#另一種合併分支的方式-（rebase" class="headerlink" title="另一種合併分支的方式 （rebase)"></a>另一種合併分支的方式 （rebase)</h3><p><img src="https://i.imgur.com/ymEIFIf.png" alt><br><img src="https://i.imgur.com/ZHgFviZ.png" alt></p><pre><code>以 rebase 合併的好處：合併的歷史比較簡潔乾淨，但相對 merge，就比較難看清楚整個檔案的分支記錄過程。</code></pre><h3 id="如何回到上一步-返回之前狀態"><a href="#如何回到上一步-返回之前狀態" class="headerlink" title="如何回到上一步 (返回之前狀態)"></a>如何回到上一步 (返回之前狀態)</h3><blockquote><p> 對 Git 常見的誤解是以為 reset 是刪除 commit 的意思。但是 Git 的世界事實上沒有刪除 Commit 的指令。一般我們把 reset 理解成「重新設定」，其實可以理解成 become，一種「我想要變成XXX」的狀態。</p><blockquote></blockquote></blockquote><p>原始檔案狀態：<br><img src="https://i.imgur.com/JHdTMi7.png" alt><br>reset 狀態：<br><img src="https://i.imgur.com/8g5Njgz.png" alt></p><p>參數狀態決定檔案去留，常見參數有</p><ul><li>mixed</li><li>soft</li><li>hard</li></ul><p><img src="https://i.imgur.com/L8ghm4Q.png" alt></p><p>在使用 –hard 的時候，如果要再次恢復專案到上一步，要怎樣做？</p><h3 id="reflog-reference-log"><a href="#reflog-reference-log" class="headerlink" title="reflog (reference log )"></a>reflog (reference log )</h3><p>Git 會把移動軌跡都記錄在 reference log，如果使用 –hard 之後想要復原，可先查詢 reflog </p><h4 id="絕對定位法"><a href="#絕對定位法" class="headerlink" title="絕對定位法"></a>絕對定位法</h4><p>$ git reflog (查詢 commit 編號)<br>$ git reset xxxxx(commit 編號) –hard </p><h4 id="相對定位"><a href="#相對定位" class="headerlink" title="相對定位"></a>相對定位</h4><ul><li><code>^</code> Caret</li><li><code>~</code> Tilde </li></ul><p><img src="https://i.imgur.com/lMofhTE.png" alt></p><p>但是如果每次都要輸入 commit 編號有點麻煩，可以把編號改成代號，例如回到現在狀態的前 2 步</p><p><img src="https://i.imgur.com/DruAI8w.png" alt></p><p>例如回到上一個步驟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD^ --mixed</span><br></pre></td></tr></table></figure><h4 id="reset-跟-checkout-差別是什麼？"><a href="#reset-跟-checkout-差別是什麼？" class="headerlink" title="reset 跟 checkout 差別是什麼？"></a>reset 跟 checkout 差別是什麼？</h4><p><img src="https://i.imgur.com/fSAJhWD.png" alt></p><h3 id="Git-使用情境-2"><a href="#Git-使用情境-2" class="headerlink" title="Git 使用情境 2"></a>Git 使用情境 2</h3><ul><li><p>回到上一個步驟的兩種作法<br>$ git reset xxxxx(commit 編號) –mixed<br>$ git reset HEAD^ –mixed</p></li><li><p>合併發生衝突怎麼辦？</p></li></ul><p>如果合併時遇到像是同一行 HTML 檔案的衝突，該怎麼辦呢？這時在 HTML 檔案中會出現像這樣：<br><img src="https://i.imgur.com/Xb5B1tm.png" alt></p><p>我們先把那些標記都清除<br><img src="https://i.imgur.com/SMAevkt.png" alt></p><p>並且回到終端機，這時 git status 如下，表示我們要再做一次存檔動作<br><img src="https://i.imgur.com/p2jJTPr.jpg" alt><br>$ git add index.html<br>$ git commit -m “merge payment and member”</p><ul><li><p>不小心把還沒合併的分支砍掉了，救得回來嗎？<br>$git branch -D new_dog (不小心砍掉一個分支)<br>$git branch newnew_dog 053fb21 (在reflog重新貼上newnew_dog)</p></li><li><p>某個分支的某個 commit 做得不錯想收進來，但又不想合併整個分支<br>使用 cherry pick 指令</p></li></ul><h3 id="使用標籤"><a href="#使用標籤" class="headerlink" title="使用標籤"></a>使用標籤</h3><p>什麼時候會使用標籤？在 Git，「標籤（tag）」是一個指向某一個 Commit 的指標。通常在開發軟體有完成特定的里程碑，例如軟體版號 1.0.0 或是 beta-release 之類的，這時候就很適合使用標籤做標記。<br>假設目前的 Commit 紀錄如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br><span class="line">db3bbec (HEAD -&gt; master) add fish</span><br><span class="line">930feb3 add pig</span><br><span class="line">51d54ff add lion and tiger</span><br><span class="line">27f6ed6 add dog 2</span><br><span class="line">2bab3e7 add dog 1</span><br><span class="line">ca40fc9 add 2 cats</span><br><span class="line">1de2076 add cat 2</span><br><span class="line">cd82f29 add cat 1</span><br><span class="line">382a2a5 add database settings</span><br><span class="line">bb0c9c2 init commit</span><br></pre></td></tr></table></figure><p>想在 add lion and tiger 這個 Commit（51d54ff）打上一個 big_cats 的標籤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag big_cats 51d54ff</span><br></pre></td></tr></table></figure><h3 id="修改歷史紀錄"><a href="#修改歷史紀錄" class="headerlink" title="修改歷史紀錄"></a>修改歷史紀錄</h3><h4 id="修改-Commit-訊息-（圖型介面）"><a href="#修改-Commit-訊息-（圖型介面）" class="headerlink" title="修改 Commit 訊息 （圖型介面）"></a>修改 Commit 訊息 （圖型介面）</h4><p>這裡使用的指令一樣是 rebase 但多了互動式操作，在圖型介面的位置如下。操作後可以修改<br><img src="https://i.imgur.com/PCL7fcc.png" alt><br>點擊之後可選擇要修改的地方<img src="https://i.imgur.com/VJk83ZQ.png" alt><br>修改訊息之後，被修正的地方，還有在它後面的訊息的 Changeset 都會被改變<br><img src="https://i.imgur.com/Fn0AcVn.png" alt><br>修改結果<br><img src="https://i.imgur.com/XADDULQ.png" alt></p><h4 id="修改-Commit-訊息-（終端機）"><a href="#修改-Commit-訊息-（終端機）" class="headerlink" title="修改 Commit 訊息 （終端機）"></a>修改 Commit 訊息 （終端機）</h4><p>$ git rebase -i f66ba66 (意思是要修改後退到這個commit編號為止的歷史)</p><blockquote><p>每一次的 rebase ，就算只改一個字，也會改變隨後全部的歷史紀錄</p></blockquote><h3 id="刪除或調整-commit-順序"><a href="#刪除或調整-commit-順序" class="headerlink" title="刪除或調整 commit 順序"></a>刪除或調整 commit 順序</h3><p><img src="https://i.imgur.com/qdr9Cvj.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用終端機指令&quot;&gt;&lt;a href=&quot;#常用終端機指令&quot; class=&quot;headerlink&quot; title=&quot;常用終端機指令&quot;&gt;&lt;/a&gt;常用終端機指令&lt;/h3&gt;&lt;p&gt;$ pwd (print working directory 印出現在所在位置)&lt;br&gt;$ mkdi
      
    
    </summary>
    
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JS 30 Days - Flex Panels Image Gallery</title>
    <link href="http://yoursite.com/2019/06/11/2019-06-11/"/>
    <id>http://yoursite.com/2019/06/11/2019-06-11/</id>
    <published>2019-06-10T16:00:00.000Z</published>
    <updated>2019-10-09T05:40:18.466Z</updated>
    
    <content type="html"><![CDATA[<h3 id="完成品"><a href="#完成品" class="headerlink" title="完成品"></a>完成品</h3><p><a href="https://codepen.io/Shengzhi/pen/zQyZZv" target="_blank" rel="noopener">https://codepen.io/Shengzhi/pen/zQyZZv</a></p><h3 id="使用-CSS-Flex"><a href="#使用-CSS-Flex" class="headerlink" title="使用 CSS Flex"></a>使用 CSS Flex</h3><p><img src="https://i.imgur.com/u4ZbS9k.png" alt></p><p>最外層的父元素 display 要設定為 flex 才會產生作為一個 container 容器的效果</p><p><img src="https://i.imgur.com/oyl8z9l.png" alt></p><p>設定子元素在畫面上都佔據一樣大小，並且將它設定為另一個 container。</p><p>Flex 是可以嵌套的，也就是 flex container 可以同時是其他 flex container 的 flex item。</p><p><img src="https://i.imgur.com/BQzvPM8.png" alt></p><h3 id="設定-translate"><a href="#設定-translate" class="headerlink" title="設定 translate"></a>設定 translate</h3><p>文字將會在 Y 軸的上下點擊動態隱藏或出現</p><p><img src="https://i.imgur.com/E9ESH5j.png" alt></p><p>中間的文字將會在點擊時動態放大<br><img src="https://i.imgur.com/8Jxh5oN.png" alt></p><h3 id="綁定多個要監聽事件的元素"><a href="#綁定多個要監聽事件的元素" class="headerlink" title="綁定多個要監聽事件的元素"></a>綁定多個要監聽事件的元素</h3><p>用 document.querySelectorAll(‘’) 來選擇多個符合 css 選擇器的元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const panels = document.querySelectorAll(&apos;.panel&apos;);</span><br></pre></td></tr></table></figure><p>一次對多個元素綁定監聽事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">panels.forEach(panel =&gt; panel.addEventListener(&apos;click&apos;, toggleOpen));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;完成品&quot;&gt;&lt;a href=&quot;#完成品&quot; class=&quot;headerlink&quot; title=&quot;完成品&quot;&gt;&lt;/a&gt;完成品&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://codepen.io/Shengzhi/pen/zQyZZv&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="前端學習" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%B8%E7%BF%92/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
</feed>
