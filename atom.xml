<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CYC&#39;S BLOG</title>
  
  <subtitle>CYC&#39;S NOTEBOOK</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-06T12:42:02.701Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Canvas (2) 繪製一個棋盤</title>
    <link href="http://yoursite.com/2019/12/06/2019-12-06/"/>
    <id>http://yoursite.com/2019/12/06/2019-12-06/</id>
    <published>2019-12-05T16:00:00.000Z</published>
    <updated>2019-12-06T12:42:02.701Z</updated>
    
    <content type="html"><![CDATA[<p>接下來嘗試繪製一個棋盤，共有 15 個交叉點，14 個間隔，兩邊留白 15px。以橫線的邏輯來解釋，留白 15px，每個間隔 30px,位置從 15px 到 435px。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line">  canvas.width = <span class="number">1024</span>;</span><br><span class="line">  canvas.height = <span class="number">768</span>;</span><br><span class="line">  <span class="keyword">var</span> cxt = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line">  cxt.strokeStyle = <span class="string">"#BFBFBF"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">    cxt.moveTo(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">15</span>);</span><br><span class="line">    cxt.lineTo(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">435</span>);</span><br><span class="line">    cxt.stroke();</span><br><span class="line">    cxt.moveTo(<span class="number">15</span>, <span class="number">15</span> + i * <span class="number">30</span>);</span><br><span class="line">    cxt.lineTo(<span class="number">435</span>, <span class="number">15</span> + i * <span class="number">30</span>);</span><br><span class="line">    cxt.stroke();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>試試看結果如何</p><p><img src="https://i.imgur.com/QjQyiOv.png" alt></p><p>接下來繪製黑白兩色漸層色的棋子，並且讓棋子落在交叉點。其實就是把棋子畫在棋盤交叉點的意思，因此要取用上面的座標。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">oneStep = <span class="function"><span class="keyword">function</span>(<span class="params">i, j, me</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//i,j ＝棋盤上索引, me 黑棋或白棋</span></span><br><span class="line">  cxt.beginPath();</span><br><span class="line">  cxt.arc(<span class="number">15</span> + i * <span class="number">30</span>, <span class="number">15</span> + j * <span class="number">30</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="keyword">this</span>.Math.PI);</span><br><span class="line">  cxt.closePath();</span><br><span class="line">  <span class="keyword">var</span> gradient = cxt.createRadialGradient(</span><br><span class="line">    <span class="number">15</span> + i * <span class="number">30</span> + <span class="number">2</span>,</span><br><span class="line">    <span class="number">15</span> + j * <span class="number">30</span> - <span class="number">2</span>,</span><br><span class="line">    <span class="number">13</span>,</span><br><span class="line">    <span class="number">15</span> + i * <span class="number">30</span> + <span class="number">2</span>,</span><br><span class="line">    <span class="number">15</span> + j * <span class="number">30</span> - <span class="number">2</span>,</span><br><span class="line">    <span class="number">0</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">if</span> (me) &#123;</span><br><span class="line">    gradient.addColorStop(<span class="number">0</span>, <span class="string">"#0a0a0a"</span>);</span><br><span class="line">    gradient.addColorStop(<span class="number">1</span>, <span class="string">"#636766"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    gradient.addColorStop(<span class="number">0</span>, <span class="string">"#D1D1D1"</span>);</span><br><span class="line">    gradient.addColorStop(<span class="number">1</span>, <span class="string">"#F9F9F9"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  cxt.fillStyle = gradient;</span><br><span class="line">  cxt.fill();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">oneStep(<span class="number">0</span>, <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">oneStep(<span class="number">1</span>, <span class="number">1</span>, <span class="literal">false</span>);&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/EOhsYL0.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;接下來嘗試繪製一個棋盤，共有 15 個交叉點，14 個間隔，兩邊留白 15px。以橫線的邏輯來解釋，留白 15px，每個間隔 30px,位置從 15px 到 435px。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Canvas (1) 繪製圓形、三角形、直線</title>
    <link href="http://yoursite.com/2019/12/05/2019-12-05/"/>
    <id>http://yoursite.com/2019/12/05/2019-12-05/</id>
    <published>2019-12-04T16:00:00.000Z</published>
    <updated>2019-12-06T12:53:11.896Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Canvas-元素"><a href="#Canvas-元素" class="headerlink" title="Canvas 元素"></a>Canvas 元素</h1><p>一個基本的 <code>canvas</code> 元素看起來類似 <code>img</code> ，但是沒有 <code>src</code> 跟 <code>alt</code> 屬性，而且 <canvas>元素必須要有</canvas>結束標籤。只有 <code>width</code> 和 <code>height</code>兩個屬性，如果沒有指定，預設值是寬 300px 高 150px，但也可以透過 <code>CSS</code> 設定。沒有套用樣式規定時，<canvas>會被初始成全透明。</canvas></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"150"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要在 <code>canvas</code> 上進行繪製渲染的初始化，只要 2 個步驟，首先要取得 <code>canvas</code> 元素，再使用 <code>getContext()</code> 取得渲染環境，<code>getContext()</code>輸入參數只有渲染環境類型一項。除了在 <code>HTML</code> 標籤或 <code>CSS</code> 裡設定寬高，也可以在程式腳本裡設定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line">canvas.width = <span class="number">1024</span>;</span><br><span class="line">canvas.height = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">var</span> context = canvas.getContext(<span class="string">"2d"</span>);</span><br></pre></td></tr></table></figure><h1 id="簡單的兼容性檢查"><a href="#簡單的兼容性檢查" class="headerlink" title="簡單的兼容性檢查"></a>簡單的兼容性檢查</h1><p>藉由檢查 <code>getContext()</code>方法是否存在，來測試瀏覽器兼容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (canvas.getContext) &#123;</span><br><span class="line">  <span class="keyword">var</span> context = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  alert(<span class="string">"瀏覽器不支援 Canvas，請更換瀏覽器再試"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">canvas.width = <span class="number">1024</span>;</span><br><span class="line">canvas.height = <span class="number">1024</span>;</span><br></pre></td></tr></table></figure><h1 id="畫出直線、多邊型、七巧板"><a href="#畫出直線、多邊型、七巧板" class="headerlink" title="畫出直線、多邊型、七巧板"></a>畫出直線、多邊型、七巧板</h1><p>上面的上下文環境裡面已經得到一個 1024 x 1024 像素的畫布。要在上面繪製圖形，必須使用座標空間。在座標空間上繪圖，一個網格等於 1px，網格的座標原點（0,0) 從左上角開始。像是下圖，藍色方塊的位置為從左往右推 x pixels、從上往下推 y pixels (亦即座標 (x, y) )，所有元素定位都相對於此左上角圓點。</p><p><img src="https://i.imgur.com/4cAEokJ.png" alt></p><p>接下來要練習繪製直線，底下是畫出一條直線的方式，以白話來說就是把筆尖狀態先設定落在座標 (100, 100) 的啟始點，並且移動到座標 (300, 300) 的位置，並調用 <code>stroke()</code> 方法繪製。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//狀態設置</span></span><br><span class="line">context.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">context.lineTo(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//線條寬度</span></span><br><span class="line">ctx.lineWidth = <span class="number">5</span>;</span><br><span class="line"><span class="comment">//線條樣式，顏色代碼必須設置為字串</span></span><br><span class="line">ctx.strokeStyle = <span class="string">"red"</span>;</span><br><span class="line"><span class="comment">//繪圖指令</span></span><br><span class="line">context.stroke();</span><br></pre></td></tr></table></figure><p>描繪出一個直角三角形</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineTo(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">context.stroke();</span><br></pre></td></tr></table></figure><p>要畫出一個填滿顏色的圖案，要改用 <code>fill()</code> 填滿路徑內容產生圖案</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineTo(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">context.fill();</span><br></pre></td></tr></table></figure><p>如果要用多個路徑繪製 2 組不同的圖形，因為調用 <code>stroke()</code> 的特性，一開始要先產生路徑，然後用繪圖指令畫出路徑，然後再結束路徑。<br>先看看沒有使用產生與結束路徑方法的結果。 底下本來要畫出 2 組圖形，結果沒有個別指定產生與結束路徑，所以第二個 <code>stroke()</code> 的運作改變了第一個 <code>stroke()</code> 的繪製結果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//畫出三角形</span></span><br><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineTo(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">ctx.lineWidth = <span class="number">5</span>;</span><br><span class="line">ctx.strokeStyle = <span class="string">"red"</span>;</span><br><span class="line">ctx.stroke();</span><br><span class="line"></span><br><span class="line"><span class="comment">//畫出直線</span></span><br><span class="line">ctx.moveTo(<span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">ctx.lineTo(<span class="number">400</span>, <span class="number">300</span>);</span><br><span class="line">ctx.strokeStyle = <span class="string">"black"</span>;</span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/pD4Wzg2.png" alt></p><p>正確的繪製方法像這樣，要產生路徑並關閉路徑。因為 canvas 繪製圖形使用的指定涉及狀態的改變。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//畫出三角形</span></span><br><span class="line">ctx.beginPath(); <span class="comment">//產生一個新路徑，產生後再使用繪圖指令來設定路徑。</span></span><br><span class="line">ctx.moveTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.lineTo(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">400</span>);</span><br><span class="line">ctx.lineTo(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.closePath(); <span class="comment">//閉合路徑好讓新的繪圖指令來設定路徑。</span></span><br><span class="line"></span><br><span class="line">ctx.lineWidth = <span class="number">5</span>;</span><br><span class="line">ctx.strokeStyle = <span class="string">"red"</span>;</span><br><span class="line">ctx.stroke();</span><br></pre></td></tr></table></figure><p>接下來嘗試繪製出一個七巧板，先設定一個陣列，裡面有七個物件，物件內各包含區塊的幾個頂點座標與顏色屬性。<br>再用迴圈遍歷這個陣列，每遍歷一次就調用一個 <code>draw()</code> 函數， 函數傳入七巧板中的 1 塊，與繪圖環境上下文這兩個參數。接下來依序開啟路徑、把起始座標移動到七巧板的頂點的第一個座標位置，再使用迴圈順次使用 <code>lineTo()</code> 方法繪製後續的座標。</p><p><img src="https://i.imgur.com/7HkHBF6.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tangram = [</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">0</span>,</span><br><span class="line">        y: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">800</span>,</span><br><span class="line">        y: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#caff67"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">0</span>,</span><br><span class="line">        y: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#67becf"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">800</span>,</span><br><span class="line">        y: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">800</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">600</span>,</span><br><span class="line">        y: <span class="number">600</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">600</span>,</span><br><span class="line">        y: <span class="number">200</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#ef3d61"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">600</span>,</span><br><span class="line">        y: <span class="number">200</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">600</span>,</span><br><span class="line">        y: <span class="number">600</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#f9f51a"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">600</span>,</span><br><span class="line">        y: <span class="number">600</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">200</span>,</span><br><span class="line">        y: <span class="number">600</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#a594c0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">200</span>,</span><br><span class="line">        y: <span class="number">600</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">000</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#fa8ecc"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    p: [</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">800</span>,</span><br><span class="line">        y: <span class="number">400</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">800</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        x: <span class="number">400</span>,</span><br><span class="line">        y: <span class="number">800</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: <span class="string">"#f6ca29"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line">  canvas.width = <span class="number">800</span>;</span><br><span class="line">  canvas.height = <span class="number">800</span>;</span><br><span class="line">  <span class="keyword">var</span> cxt = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.tangram.length; i++) &#123;</span><br><span class="line">    draw(tangram[i], cxt);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params">piece, cxt</span>) </span>&#123;</span><br><span class="line">  cxt.beginPath();</span><br><span class="line">  cxt.moveTo(piece.p[<span class="number">0</span>].x, piece.p[<span class="number">0</span>].y);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; piece.p.length; i++) &#123;</span><br><span class="line">    cxt.lineTo(piece.p[i].x, piece.p[i].y);</span><br><span class="line">  &#125;</span><br><span class="line">  cxt.closePath();</span><br><span class="line">  cxt.fillStyle = piece.color;</span><br><span class="line">  cxt.fill();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="畫出圓形和弧形"><a href="#畫出圓形和弧形" class="headerlink" title="畫出圓形和弧形"></a>畫出圓形和弧形</h1><p><code>arc()</code>方法可以畫出一個弧形，接受五個參數: x, y 代表圓心座標點，radius 代表半徑，startAngle, endAngle 分別代表沿著弧形曲線上的起始點與結束點的弧度，弧度測量是相對於 x 軸，anticlockwise 為 true 代表逆時針作圖、false 代表順時針作圖。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arc(x, y, radius, startAngle, endAngle, anticlockwise);</span><br></pre></td></tr></table></figure><p>繪製一個圓形的初始化座標是下圖 x 軸的右側為啟始點。<br><img src="https://i.imgur.com/Hz8uIc0.png" alt></p><p>底下是從座標 (300,300) 開始，半徑 200，由圓弧啟始點畫 1.5 個 PI 的圓形</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line">  canvas.width = <span class="number">1024</span>;</span><br><span class="line">  canvas.height = <span class="number">768</span>;</span><br><span class="line">  <span class="keyword">var</span> cxt = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line">  cxt.lineWidth = <span class="number">5</span>;</span><br><span class="line">  cxt.strokeStyle = <span class="string">"black"</span>;</span><br><span class="line">  cxt.arc(<span class="number">300</span>, <span class="number">300</span>, <span class="number">200</span>, <span class="number">0</span>, <span class="number">1.5</span> * <span class="built_in">Math</span>.PI);</span><br><span class="line">  cxt.stroke();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jub2mMG.png" alt></p><p>以下依序畫出 2 組弧形，2 組的差別在有指定跟沒指定封閉路徑</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  cxt.beginPath();</span><br><span class="line">  cxt.arc(<span class="number">50</span> + i * <span class="number">100</span>, <span class="number">60</span>, <span class="number">40</span>, <span class="number">0</span>, (<span class="number">2</span> * <span class="built_in">Math</span>.PI * (i + <span class="number">1</span>)) / <span class="number">10</span>);</span><br><span class="line">  cxt.closePath();</span><br><span class="line">  cxt.stroke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  cxt.beginPath();</span><br><span class="line">  cxt.arc(<span class="number">50</span> + i * <span class="number">100</span>, <span class="number">180</span>, <span class="number">40</span>, <span class="number">0</span>, (<span class="number">2</span> * <span class="built_in">Math</span>.PI * (i + <span class="number">1</span>)) / <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">  cxt.stroke();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HhZAOAF.png" alt></p><h1 id="填充顏色"><a href="#填充顏色" class="headerlink" title="填充顏色"></a>填充顏色</h1><p>要設定圖形的顏色，我們有兩個屬性能用: fillStyle 與 storkeStyle.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cxt.beginPath();</span><br><span class="line">cxt.arc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="keyword">this</span>.Math.PI);</span><br><span class="line">cxt.closePath();</span><br><span class="line">cxt.fillStyle = <span class="string">"#636766"</span>; <span class="comment">//設定填滿圖形時用的顏色.</span></span><br><span class="line">cxt.fill();</span><br></pre></td></tr></table></figure><h1 id="漸層色"><a href="#漸層色" class="headerlink" title="漸層色"></a>漸層色</h1><p>使用 <code>createRadialGradient(x1, y1, r1, x2, y2, r2)</code> 產生一個放射狀漸層物件，第一個圓圓心落在(x1, y1)、半徑為 r1，第二個圓之圓心落在(x2, y2)、半徑為 r2。</p><p>用<code>gradient.addColorStop(position, color)</code>方法可以添加顏色上去。color 是顏色的字串表示，而 position 介於 0.0 到 1.0 之間，定義了該顏色在漸層中的相對位置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gradient = cxt.createRadialGradient(<span class="number">200</span>, <span class="number">200</span>, <span class="number">50</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">20</span>);</span><br><span class="line">gradient.addColorStop(<span class="number">0</span>, <span class="string">"#0a0a0a"</span>);</span><br><span class="line">gradient.addColorStop(<span class="number">1</span>, <span class="string">"#636766"</span>);</span><br><span class="line">cxt.fillStyle = gradient;</span><br><span class="line">cxt.fill();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Canvas-元素&quot;&gt;&lt;a href=&quot;#Canvas-元素&quot; class=&quot;headerlink&quot; title=&quot;Canvas 元素&quot;&gt;&lt;/a&gt;Canvas 元素&lt;/h1&gt;&lt;p&gt;一個基本的 &lt;code&gt;canvas&lt;/code&gt; 元素看起來類似 &lt;code&gt;im
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 瀑布流相簿</title>
    <link href="http://yoursite.com/2019/12/04/2019-12-04/"/>
    <id>http://yoursite.com/2019/12/04/2019-12-04/</id>
    <published>2019-12-03T16:00:00.000Z</published>
    <updated>2019-12-04T10:41:23.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 瀑布流相簿 - <a href="https://chiangyuchi.github.io/waterfall-layout/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>瀑布流是一種常見的版面配置，在滑鼠滾輪向下滾動時，頁面便會不斷的加載，讓新的內容產生出來並附加在網頁的最底端。這種特別的互動方式可以讓使用者在瀏覽內容時，不必再像以往一樣一直不斷的在網頁上點擊下一頁，可以讓使用者瀏覽起來更為輕鬆。像是 Pinterest，就是使用這種瀏覽方式。這個練習就是實現一個瀑布流相簿。</p><p><img src="https://i.imgur.com/wi048Da.jpg" alt></p><ul><li>瀑布流的圖片定位</li><li>瀑布流的圖片排序</li><li>瀑布流的圖片加載功能</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="HTML、CSS-結構"><a href="#HTML、CSS-結構" class="headerlink" title="HTML、CSS 結構"></a>HTML、CSS 結構</h2><p>HTML 結構比較單純，一個區塊內包含一張圖片元素。此外，由於待會我們要按照圖片寬高來調整圖片位置，所以整個頁面使用相對定位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line"></span><br><span class="line">  .box &#123;</span><br><span class="line">    <span class="selector-tag">padding</span>: 15<span class="selector-tag">px</span> 0 0 15<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.pic</span> &#123;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#ccc</span>;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        <span class="selector-tag">height</span>: <span class="selector-tag">auto</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="瀑布流的圖片定位"><a href="#瀑布流的圖片定位" class="headerlink" title="瀑布流的圖片定位"></a>瀑布流的圖片定位</h2><p>頁面加載的時候就要呼叫一個取得整個頁面裡圖片區塊的函數，這個函數傳入兩個參數，父元素及要傳入的圖片區塊，取得所有父元素底下 class 為 box 的元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  waterfall(<span class="string">"main"</span>, <span class="string">"box"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params">parent,box</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> allParent = <span class="built_in">document</span>.getElementById(parent);</span><br><span class="line">    <span class="keyword">var</span> allBox = getByClass(allParent,box);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">parent,clsName</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> boxArr = [];</span><br><span class="line">    allElements = parent.getElementsByTagName(<span class="string">'*'</span>)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;allElements.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(allElements[i].className===clsName)&#123;</span><br><span class="line">            boxArr.push(allElements[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> boxArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>計算頁面顯示的列數，是利用頁面寬度除以圖片區塊的寬度。先使用 <code>offsetWidth</code>取得其中單一圖片區塊的寬度即可，再取得瀏覽器頁面寬度並相除，就會取得呈現載每一列的圖片數量。這裡也要使用每一張圖片的寬度乘以每一列呈現數量，獲得最外層父元素的寬度。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params">parent, box</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> allBoxW = allBox[<span class="number">0</span>].offsetWidth;</span><br><span class="line">  <span class="keyword">var</span> col = <span class="built_in">Math</span>.floor(<span class="built_in">document</span>.documentElement.clientWidth / allBoxW);</span><br><span class="line">  allParent.style.cssText = <span class="string">"width:"</span> + allBoxW * col + <span class="string">"px;margin:0 auto"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="瀑布流的圖片排序"><a href="#瀑布流的圖片排序" class="headerlink" title="瀑布流的圖片排序"></a>瀑布流的圖片排序</h2><p>接下來要依序使圖片出現在另一張圖片的底部，先取得第一行裡行高最小的圖片，使用 apply()，改變 this 的指向，找出 heightArr 中最矮的圖片，讓第二列從這張圖片開始排列。同時也要取得這張最矮圖片的索引位置。最後因為加入圖片之後，最小高度的圖片不是原來那張了，是原來圖片與新增圖片的高度，這樣才不會一直新增在同一張底下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params">parent, box</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> heightArr[];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;allBox.length;i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i&lt;col)&#123;</span><br><span class="line">          heightArr.push(allBox[i].offsetHeight);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> minHeight=<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,heightArr);</span><br><span class="line">          <span class="keyword">var</span> index = getMinHeightIndex(heightArr,minHeight);</span><br><span class="line">          allBox[i].style.position = <span class="string">"absolute"</span>;</span><br><span class="line">          allBox[i].style.top=minHeight+<span class="string">"px"</span>;</span><br><span class="line">          allBox[i].style.left=allBox[index].offsetLeft+<span class="string">"px"</span>;</span><br><span class="line">          heightArr[index]+=allBox[i].offsetHeight;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMinHeightIndex</span>(<span class="params">arr,val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]===val)&#123;</span><br><span class="line">            <span class="keyword">return</span> i;        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="瀑布流的圖片加載"><a href="#瀑布流的圖片加載" class="headerlink" title="瀑布流的圖片加載"></a>瀑布流的圖片加載</h2><p>最後一個是實現無限圖片加載，當滾動側邊的時候加載圖片。這裡要檢測是否具備滾動加載數據的條件。首先要取得最後一個圖片區塊頂部與頁面頂部的距離加上該圖片一半的高度(a)。也取得已經滾動出頁面外的距離加銀幕高度(b)。如果 a&gt;b，則具備加載數據的條件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkScrollSilde</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> allParent = <span class="built_in">document</span>.getElementById(<span class="string">"main"</span>);</span><br><span class="line">  <span class="keyword">var</span> allBox = getByClass(allParent, <span class="string">"Box"</span>);</span><br><span class="line">  <span class="keyword">var</span> lastBoxHeight =</span><br><span class="line">    allBox[allBox.length - <span class="number">1</span>].offsetTop +</span><br><span class="line">    <span class="built_in">Math</span>.floor(allBox[allBox.length - <span class="number">1</span>].offsetHeight / <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> scrollTop =</span><br><span class="line">    <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line">  <span class="keyword">return</span> lastBoxHeight &lt; scrollTop + height ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後將數據渲染到頁面尾端</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  waterfall(<span class="string">"main"</span>, <span class="string">"box"</span>);</span><br><span class="line">  <span class="keyword">var</span> dataInt = &#123;</span><br><span class="line">    data: [</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"1.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"2.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"3.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"4.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"5.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"6.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"7.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"8.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"9.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"10.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"11.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"12.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"13.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"14.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"15.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"16.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"17.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"18.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"19.jpg"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">"20.jpg"</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkScrollSlide) &#123;</span><br><span class="line">      <span class="comment">//把數據渲染到頁面尾端</span></span><br><span class="line">      <span class="keyword">var</span> allParent = <span class="built_in">document</span>.getElementById(<span class="string">"main"</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dataInt.data.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> allBox = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        allBox.className = <span class="string">"box"</span>;</span><br><span class="line">        allParent.appendChild(allBox);</span><br><span class="line">        <span class="keyword">var</span> allPic = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        allPic.className = <span class="string">"pic"</span>;</span><br><span class="line">        allBox.appendChild(allPic);</span><br><span class="line">        <span class="keyword">var</span> allImg = <span class="built_in">document</span>.createElement(<span class="string">"img"</span>);</span><br><span class="line">        allImg.src = <span class="string">"img/"</span> + dataInt.data[i].src;</span><br><span class="line">        allPic.appendChild(allImg);</span><br><span class="line">      &#125;</span><br><span class="line">      waterfall(<span class="string">"main"</span>, <span class="string">"box"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    checkScrollSlide();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 瀑布流相簿 - &lt;a href=&quot;https://chiangyuchi.github.io
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 自動輪播</title>
    <link href="http://yoursite.com/2019/12/03/2019-12-03/"/>
    <id>http://yoursite.com/2019/12/03/2019-12-03/</id>
    <published>2019-12-02T16:00:00.000Z</published>
    <updated>2020-08-08T08:04:20.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 自動輪播 - <a href="https://chiangyuchi.github.io/slider/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>實作一個圖片自動輪播功能</p><p><img src="https://i.imgur.com/gN46nKj.jpg" alt></p><ul><li>DOM 操作圖片切換</li><li>運用 setInterval() 方法達成自動播放</li><li>可暫停播放</li></ul><h1 id="建立初始化函式"><a href="#建立初始化函式" class="headerlink" title="建立初始化函式"></a>建立初始化函式</h1><p>建立一個初始化函式，包含以下項目</p><ul><li>取得所有圖片的容器</li><li>顯示第一張圖片</li><li>建立底部連結各張圖片索引的選擇鈕</li></ul><h2 id="取得圖片容器並顯示第一張圖片"><a href="#取得圖片容器並顯示第一張圖片" class="headerlink" title="取得圖片容器並顯示第一張圖片"></a>取得圖片容器並顯示第一張圖片</h2><p><code>slideIndex</code> 表示目前顯示在畫面上的圖片的索引， <code>slides</code> 是所有圖片的容器，<code>dots</code> 是一個陣列，用來儲存待會要建立的選擇鈕。 我們設定 <code>slideIndex</code> 的值為 0，並讓它當做是 slides 的索引值，所以初始狀態顯示的圖片會是在 HTML 結構裡由上到下的第 1 張。</p><p>建立一個迴圈，依照 <code>slides</code> 的數量建立 <code>HTML</code> 元素後，將新增的元素都添加到空陣列裡。最後把索引 0 的按鈕加上 <code>active</code> 狀態。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> slideIndex; <span class="comment">// 儲存當下顯示圖片</span></span><br><span class="line"><span class="keyword">var</span> slides; <span class="comment">//儲存所有圖片</span></span><br><span class="line"><span class="keyword">var</span> dots;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initGallery</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  slideIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  slides = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"imgHolder"</span>);</span><br><span class="line">  slides[slideIndex].style.opacity = <span class="number">1</span>;</span><br><span class="line">  dots = [];</span><br><span class="line">  dotsContainer = <span class="built_in">document</span>.getElementById(<span class="string">"dotsContainer"</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; slides.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> dot = <span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</span><br><span class="line">    dot.classList.add(<span class="string">"dots"</span>);</span><br><span class="line">    dot.setAttribute(<span class="string">"onclick"</span>, <span class="string">"moveSlide("</span> + i + <span class="string">")"</span>);</span><br><span class="line">    dotsContainer.appendChild(dot);</span><br><span class="line">    dots.push(dot);</span><br><span class="line">  &#125;</span><br><span class="line">  dots[slideIndex].classList.add(<span class="string">"active"</span>);</span><br><span class="line">&#125;</span><br><span class="line">initGallery();</span><br></pre></td></tr></table></figure><h1 id="建立切換圖片的函式"><a href="#建立切換圖片的函式" class="headerlink" title="建立切換圖片的函式"></a>建立切換圖片的函式</h1><p>建立一個切換圖片的函式</p><h2 id="獲取下一張圖片的索引值"><a href="#獲取下一張圖片的索引值" class="headerlink" title="獲取下一張圖片的索引值"></a>獲取下一張圖片的索引值</h2><p>運用判斷式取得下一張圖片的索引值，並使用物件存取接下來要在 DOM 結構裡動態新增的 CSS 屬性。</p><ul><li>如果下一張要顯示的圖片索引值大於目前顯示的圖片，而且下一張圖片索引值大於所有圖片的總長度值。也就是說，如果總長度是 5 張圖片，第 5 張圖的下一張圖，索引值將等於 0。並利用變更物件屬性的方式，將目前圖片向左移出，將下一張圖片向左移入。</li><li>如果下一張要顯示的圖片索引值小於目前要顯示的圖片，而且它的索引值小於 0 ，也就是說要切換到第一張圖片的前一張圖，這張圖的索引值就等於總長度 5 - 1。並利用變更物件屬性的方式，將目前圖片向右移出，將下一張圖片向右移入。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">moveSlide</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> moveSlideAnimClass = &#123;</span><br><span class="line">    forCurrent: <span class="string">""</span>,</span><br><span class="line">    forNext: <span class="string">""</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (n &gt; slideIndex) &#123;</span><br><span class="line">    <span class="comment">//往前</span></span><br><span class="line">    <span class="keyword">if</span> (n &gt;= slides.length) &#123;</span><br><span class="line">      <span class="comment">//6.7...=0</span></span><br><span class="line">      n = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    moveSlideAnimClass.forCurrent = <span class="string">"moveLeftCurrentSlide"</span>;</span><br><span class="line">    moveSlideAnimClass.forNext = <span class="string">"moveLeftNextSlide"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; slideIndex) &#123;</span><br><span class="line">    <span class="comment">// 上一張</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//如果小於第一張</span></span><br><span class="line">      n = slides.length - <span class="number">1</span>; <span class="comment">//n = 5-1 [0,1,2,3,4]</span></span><br><span class="line">    &#125;</span><br><span class="line">    moveSlideAnimClass.forCurrent = <span class="string">"moveRightCurrentSlide"</span>;</span><br><span class="line">    moveSlideAnimClass.forNext = <span class="string">"moveRightNextSlide"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="操作-DOM-完成切換圖片"><a href="#操作-DOM-完成切換圖片" class="headerlink" title="操作 DOM 完成切換圖片"></a>操作 DOM 完成切換圖片</h2><p>接下來要再運用另一個判斷式，完成這個切換圖片的函式。這個判斷式的意思是：如果 n 不等於現在這張圖片的索引值，下一張圖片的索引值就是 n。 並且用迴圈取得所有容器，在切換圖片的時候，先將 <code>opacity</code> 值設為 0 隱藏圖片，並移除按鈕的<code>active</code> 狀態。最後再將上一個步驟除存在物件裡的 CSS 屬性新增到目前這一張以及下一張要切換的圖片。</p><p>當我們點擊底部切換鈕的時候，將會指定按鈕的方法屬性為 <code>moveSilder</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initGallery</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; slides.length; i++) &#123;</span><br><span class="line">    dot.setAttribute(<span class="string">"onclick"</span>, <span class="string">"moveSlide("</span> + i + <span class="string">")"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">moveSlide</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> i, current, next;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (n != slideIndex) &#123;</span><br><span class="line">    next = slides[n];</span><br><span class="line">    current = slides[slideIndex];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; slides.length; i++) &#123;</span><br><span class="line">      slides[i].className = <span class="string">"imgHolder"</span>;</span><br><span class="line">      slides[i].style.opacity = <span class="number">0</span>;</span><br><span class="line">      dots[i].classList.remove(<span class="string">"active"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    current.classList.add(moveSlideAnimClass.forCurrent);</span><br><span class="line">    next.classList.add(moveSlideAnimClass.forNext);</span><br><span class="line">    dots[n].classList.add(<span class="string">"active"</span>);</span><br><span class="line">    slideIndex = n;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="綁定監聽事件"><a href="#綁定監聽事件" class="headerlink" title="綁定監聽事件"></a>綁定監聽事件</h1><p>監聽事件會依照點擊左鍵頭或右箭頭，呼叫 <code>moveSlide</code> 函式，並傳入當下圖片的索引 +/- 1 當做參數</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rightArrow.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> <span class="title">plusSlides</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  moveSlide(slideIndex + <span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">leftArrow.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> <span class="title">plusSlides</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  moveSlide(slideIndex - <span class="number">1</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="自動播放"><a href="#自動播放" class="headerlink" title="自動播放"></a>自動播放</h1><p>自動播放使用 <code>setInterval()</code> 方法，並且再運用一次我們註冊在向右點擊的監聽事件裡面的第二個參數即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timer = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setTimer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">plusSlides</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">      moveSlide(slideIndex + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    plusSlides();</span><br><span class="line">  &#125;, <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line">setTimer();</span><br></pre></td></tr></table></figure><h1 id="中斷播放"><a href="#中斷播放" class="headerlink" title="中斷播放"></a>中斷播放</h1><p>中斷自動播放功能，是最後一個判斷式，如果現在計時器是停止的，那就呼叫定時器的函式，反之中斷定時。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">playPauseBtn.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> <span class="title">playPauseSlides</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> playPauseBtn = <span class="built_in">document</span>.getElementById(<span class="string">"playPauseBtn"</span>);</span><br><span class="line">  <span class="keyword">if</span> (timer == <span class="literal">null</span>) &#123;</span><br><span class="line">    setTimer();</span><br><span class="line">    playPauseBtn.style.backgroundPositionY = <span class="string">"0px"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    clearInterval(timer);</span><br><span class="line">    timer = <span class="literal">null</span>;</span><br><span class="line">    playPauseBtn.style.backgroundPositionY = <span class="string">"-33px"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 自動輪播 - &lt;a href=&quot;https://chiangyuchi.github.io/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 縮圖預覽 Silder</title>
    <link href="http://yoursite.com/2019/12/02/2019-12-01/"/>
    <id>http://yoursite.com/2019/12/02/2019-12-01/</id>
    <published>2019-12-01T16:00:00.000Z</published>
    <updated>2019-12-04T10:41:45.608Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 縮圖預覽 Silder - <a href="https://chiangyuchi.github.io/preview-silder/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是一個線上課程案例，有些想添加的功能還沒進行，先把目前完成的部份整理出來</p><p><img src="https://i.imgur.com/s8nr3tU.jpg" alt></p><ul><li>動態載入圖片、文字</li><li>按鍵可預覽縮圖</li><li>按鍵可呈現縮圖倒影</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="設定-HTML-結構"><a href="#設定-HTML-結構" class="headerlink" title="設定 HTML 結構"></a>設定 HTML 結構</h2><p>這個 Silder 分為圖片區塊與按鍵區塊。圖片區塊內有文字標題及圖片，每個圖片對應一個按鍵。這個 Silder 的作法是動態載入圖片，所以只要在 HTML 結構放入要更換的模版。模版結構裡花括號都是要在切換圖片時要動態替換的資料。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"silder"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 幻燈片區域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main main-item-active"</span> <span class="attr">id</span>=<span class="string">"template-main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-item &#123;&#123;css&#125;&#125;"</span> <span class="attr">id</span>=<span class="string">"main-&#123;&#123;index&#125;&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;h2&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;h3&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/&#123;&#123;index&#125;&#125;.jpg"</span> <span class="attr">class</span>=<span class="string">"picture"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 按鈕區域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ctrl "</span> <span class="attr">id</span>=<span class="string">"template-ctrl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"ctrl-item "</span></span></span><br><span class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">"ctrl-&#123;&#123;index&#125;&#125;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"javascript:switchSlider(&#123;&#123;index&#125;&#125;);"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/&#123;&#123;index&#125;&#125;.jpg"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;h4&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="預先定義-CSS-active-屬性"><a href="#預先定義-CSS-active-屬性" class="headerlink" title="預先定義 CSS active 屬性"></a>預先定義 CSS active 屬性</h2><p>這個 Silder 的切換是利用 JavaScript 動態添加、移除 CSS 屬性達到的。這裡我們先定義好 <code>main-item-active</code> 屬性，切換 <code>right:50%</code> / <code>right:0%</code> 達到圖片區塊的移動效果，以及<code>h1</code>和<code>h2</code>動態篇移的位置，<br>動態載入的時候會從預設的位置動態篇移到 <code>right:0</code>。最後是也用 <code>ctrl-item-active</code> 切換按鍵的樣式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-item</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    <span class="selector-tag">z-index</span>: 1;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.caption</span> &#123;</span><br><span class="line">    h1 &#123;</span><br><span class="line">      <span class="selector-tag">margin-right</span>: 45<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">-webkit-transition</span>: <span class="selector-tag">all</span> 1<span class="selector-tag">s</span> 0<span class="selector-class">.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">h2</span> &#123;</span><br><span class="line">      <span class="attribute">margin-right</span>: -<span class="number">45px</span>;</span><br><span class="line">      <span class="attribute">-webkit-transition</span>: all <span class="number">1s</span> <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*要動態添加的圖片區塊屬性*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-item-active</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: ease-in <span class="number">0.5s</span>;</span><br><span class="line"></span><br><span class="line">  .caption &#123;</span><br><span class="line">    <span class="selector-tag">h1</span>,</span><br><span class="line">    <span class="selector-tag">h2</span> &#123;</span><br><span class="line">      <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*要動態添加的按鍵屬性*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ctrl</span> &#123;</span><br><span class="line">  .ctrl-item &#123;</span><br><span class="line">    <span class="selector-class">.ctrl-item_active</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">img</span> &#123;</span><br><span class="line">          <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定義數據結構與取得-DOM"><a href="#定義數據結構與取得-DOM" class="headerlink" title="定義數據結構與取得 DOM"></a>定義數據結構與取得 DOM</h2><p>由於是動態載入圖片，因此要先定義數據結構。接著設定條件句取得模版的 DOM。這裡使用函式表示式 (function expression) ，透過 <code>變數名稱 = function([參數]){ ... };</code> 的方式，將一個函式透過 = 指定給某個變數。</p><p>像這樣<br>var square = function (number) {<br>return number * number;<br>};</p><p>所以可以在函式裡設定條件句，依據我們的要求，回傳具有該 ID 的模版，或者取得具備該 classname 的模版。如果傳入的參數是例如<code>.ctrl-item</code> 則會把 <code>.</code> 之後的字符串作為參數傳入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = [</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">1</span>,</span><br><span class="line">    h1: <span class="string">"Creative"</span>,</span><br><span class="line">    h2: <span class="string">"Fella"</span>,</span><br><span class="line">    h3: <span class="string">"Creative Fella"</span>,</span><br><span class="line">    h6: <span class="string">"Call to action"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">2</span>,</span><br><span class="line">    h1: <span class="string">"Friendly"</span>,</span><br><span class="line">    h2: <span class="string">"Evil"</span>,</span><br><span class="line">    h3: <span class="string">"Friendly Evil"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">3</span>,</span><br><span class="line">    h1: <span class="string">"Tranquil "</span>,</span><br><span class="line">    h2: <span class="string">"Eye"</span>,</span><br><span class="line">    h3: <span class="string">"Tranquil Eye"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">4</span>,</span><br><span class="line">    h1: <span class="string">"Cocteau"</span>,</span><br><span class="line">    h2: <span class="string">"Twins"</span>,</span><br><span class="line">    h3: <span class="string">"Cocteau Twins"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">5</span>,</span><br><span class="line">    h1: <span class="string">"Belle"</span>,</span><br><span class="line">    h2: <span class="string">"Angus"</span>,</span><br><span class="line">    h3: <span class="string">"Belle Angus"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    img: <span class="number">6</span>,</span><br><span class="line">    h1: <span class="string">"Passion"</span>,</span><br><span class="line">    h2: <span class="string">"amour"</span>,</span><br><span class="line">    h3: <span class="string">"Passion amour"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> general = <span class="function"><span class="keyword">function</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (id.substr(<span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByClassName(id.substr(<span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="動態新增幻燈片"><a href="#動態新增幻燈片" class="headerlink" title="動態新增幻燈片"></a>動態新增幻燈片</h2><p>接著要開始新增幻燈片。首先要在載入畫面時就呼叫新增幻燈片的函式。 接著來測試一下上一個取得模版的設定是不是有效。</p><p><img src="https://i.imgur.com/HG4b2SW.png" alt><br>上面的測試顯示已經獲取 <code>template-main</code> 整個模版結構，裡面包含每一個幻燈片具備的元素，首先我們把它前後的空白去除。對切換鍵也是同樣設定。接著使用迴圈遍歷資料結構，再把剛剛模版裡的 <code>index</code>、<code>h2</code>、<code>h3</code> 依序替換掉為實際數據，建構輸出的 HTML。最後用 <code>push()</code> 輸回到我們要輸出的數據裡面。最後把 HTML 回寫到對應的 DOM 裡面，使用 <code>join()</code> 方法會將類陣列物件中的所有元素連接合併成一個字串，並回傳此字串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addSilder</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tpl_main = general(<span class="string">"template-main"</span>);</span><br><span class="line">  .innerHTML.replace(<span class="regexp">/^\s*/</span>, <span class="string">""</span>)</span><br><span class="line">  .replace(<span class="regexp">/\s*$/</span>, <span class="string">""</span>);</span><br><span class="line">  <span class="keyword">var</span> tpl_ctrl = general(<span class="string">"template-ctrl"</span>)</span><br><span class="line">    .innerHTML.replace(<span class="regexp">/^\s*/</span>, <span class="string">""</span>)</span><br><span class="line">    .replace(<span class="regexp">/\s*$/</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> out_main = [];</span><br><span class="line">  <span class="keyword">var</span> out_ctrl = [];</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> data) &#123;</span><br><span class="line">    <span class="keyword">var</span> _html_main = tpl_main</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;index&#125;&#125;/g</span>, data[i].img)</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;h2&#125;&#125;/g</span>, data[i].h1)</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;h3&#125;&#125;/g</span>, data[i].h2)</span><br><span class="line"></span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;css&#125;&#125;/g</span>, [<span class="string">""</span>, <span class="string">"main-item-right"</span>][i % <span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> _html_ctrl = tpl_ctrl</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;index&#125;&#125;/g</span>, data[i].img)</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;h4&#125;&#125;/g</span>, data[i].h3)</span><br><span class="line">      .replace(<span class="regexp">/&#123;&#123;h5&#125;&#125;/g</span>, data[i].h6);</span><br><span class="line">    out_main.push(_html_main);</span><br><span class="line">    out_ctrl.push(_html_ctrl);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  general(<span class="string">"template-main"</span>).innerHTML = out_main.join(<span class="string">""</span>);</span><br><span class="line">  general(<span class="string">"template-ctrl"</span>).innerHTML = out_ctrl.join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  addSilder();</span><br><span class="line">  switchSlider(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="切換幻燈片"><a href="#切換幻燈片" class="headerlink" title="切換幻燈片"></a>切換幻燈片</h2><p>切換幻燈片不使用鏈結移動頁面，而是藉由點擊啟動 javascript 函數。所以我們要在按鍵上放入一個花括號及索引，函式裡傳入的參數 <code>n</code>來源是圖片，是與圖片的名稱是一致的。現在要獲得要展現的幻燈片及控制按鈕。</p><p><img src="https://i.imgur.com/sfgUfJt.png" alt></p><p>切換效果是透過添加 <code>main-item-active</code>到每一張圖片達到的。但在為當前展示的圖片添加 active 屬性之前，要把其他沒展示的圖片的 active 屬性清除。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ctrl "</span> <span class="attr">id</span>=<span class="string">"template-ctrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"ctrl-item "</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"ctrl-&#123;&#123;index&#125;&#125;"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">"javascript:switchSlider(&#123;&#123;index&#125;&#125;);"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/&#123;&#123;index&#125;&#125;.jpg"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;h4&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switchSlider</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> main = general(<span class="string">"main-"</span> + n);</span><br><span class="line">  <span class="keyword">var</span> ctrl = general(<span class="string">"ctrl-"</span> + n);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//獲得所有幻燈片及控制按鈕</span></span><br><span class="line">  <span class="keyword">var</span> clear_main = general(<span class="string">".main-item"</span>);</span><br><span class="line">  <span class="keyword">var</span> clear_ctrl = general(<span class="string">".ctrl-item"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//清除他們的樣式</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; clear_ctrl.length; i++) &#123;</span><br><span class="line">    clear_main[i].className = clear_main[i].className.replace(</span><br><span class="line">      <span class="string">" main-item-active"</span>,</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    );</span><br><span class="line">    clear_ctrl[i].className = clear_ctrl[i].className.replace(</span><br><span class="line">      <span class="string">" ctrl-item-active"</span>,</span><br><span class="line">      <span class="string">""</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  main.className += <span class="string">" main-item-active"</span>;</span><br><span class="line">  ctrl.className += <span class="string">" ctrl-item-active"</span>;</span><br><span class="line"></span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    general(<span class="string">"main-background"</span>).innerHTML = main.innerHTML;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加切換時圖片底下的背景、改變圖片切換方向"><a href="#添加切換時圖片底下的背景、改變圖片切換方向" class="headerlink" title="添加切換時圖片底下的背景、改變圖片切換方向"></a>添加切換時圖片底下的背景、改變圖片切換方向</h2><p>為幾個圖片添加不同的切換方向屬性，這是由取得餘數決定的，共有六張圖片，所以會添加在 2、4、6 張圖片。接著要為切換圖片時添加一張底圖，這張底圖來源是目前被切換掉的「那一張」。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addSilder</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> data) &#123;</span><br><span class="line">    <span class="keyword">var</span> _html_main = tpl_main.replace(</span><br><span class="line">      /&#123;&#123;css&#125;&#125;/g,</span><br><span class="line">      [<span class="string">""</span>, <span class="string">"main-item-right"</span>][i % <span class="number">2</span>]</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  general(<span class="string">"main-&#123;&#123;index&#125;&#125;"</span>).id = <span class="string">"main-background"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switchSlider</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    general(<span class="string">"main-background"</span>).innerHTML = main.innerHTML;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 縮圖預覽 Silder - &lt;a href=&quot;https://chiangyuchi.git
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue 練習 - Todo list 待辦事項清單</title>
    <link href="http://yoursite.com/2019/08/26/2019-08-26/"/>
    <id>http://yoursite.com/2019/08/26/2019-08-26/</id>
    <published>2019-08-25T16:00:00.000Z</published>
    <updated>2019-11-10T14:36:13.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>Vue 練習 - Todo List 待辦事項清單 - <a href="https://chiangyuchi.github.io/vue-simple-todolist/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>以 Vue 實作代辦事項清單的新增、刪除、修改。</p><p><img src="https://i.imgur.com/t728S4N.png" alt></p><ul><li>可動態切換 ClassName 與 style</li><li>運用指令與修飾符</li><li>表單資料綁定</li><li>動態新增、刪除、修改</li></ul><h1 id="建立待辦事項的列表"><a href="#建立待辦事項的列表" class="headerlink" title="建立待辦事項的列表"></a>建立待辦事項的列表</h1><p>有一個 input 欄位，現在要在輸入後把文字加入代辦事項列表，首先設定一個代辦事項列表的基礎結構，包括：</p><h2 id="鍵入新增項目的輸入框、"><a href="#鍵入新增項目的輸入框、" class="headerlink" title="鍵入新增項目的輸入框、"></a>鍵入新增項目的輸入框、</h2><ul><li>點擊後把輸入項目加入 vue 原始碼的按鈕 （或鍵盤動作）</li><li>以陣列儲存資料內容的區段</li></ul><p>首先處理新增項目的輸入框，透過使用<code>v-model</code>可以實現 <code>HTML</code> 與數據結構的雙向綁定，我們可以把輸入項目新增儲存到資料結構裡面。假設我在表單組件 input 上設置 v-model 並綁定到 data 中的 meesage 上，他除了會即時顯示 data.message 中資料以外，我們在更動 input 中的數值時也會同步更改回 data 中 message 的 value。</p><p>每個輸入的項目都具備一個獨一的 id，透過 v-bind (縮寫：id)，更新 HTML 屬性，便可以動態的去綁定、控制屬性，進而使得該元素變成是可控制的元素。 （因為隨後我們要新增、刪除或修改這些項目）。但是使用者互動輸入的項目需要觸發一些事件才能完成，所以這裡使用<code>v-on</code>與修飾符，綁定添加項目的方法。<code>v-on</code> 顧名是類似於原生 JavaScript 中的 <code>on</code> 事件，在後面寫上要觸發行為的條件(click)，並且在 value 的值內放入指定的 method。</p><h2 id="動態產生資料"><a href="#動態產生資料" class="headerlink" title="動態產生資料"></a>動態產生資料</h2><p>接著處理資料的畫面顯示，資料是由使用者輸入後，儲存到陣列裡面，再動態產生在。所以首先處理已綁定在輸入按鈕與欄位的 <code>addTodo</code> 方法。此方法把輸入的資訊、依照 <code>timestamp</code>而有的 <code>id</code> 、是否進行運算等性質，加入<code>todos</code> 陣列裡面。並清空輸入欄位。</p><p>再以 <code>v-for</code> 動態產生資料畫面上，可以加上兩個參數，以一個名稱做代表，雷同於一般物件的值，第二個參數是該筆資料的實際索引值。最後使用雙花括號與資料連結。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">placeholder</span>=<span class="string">"準備要做的任務"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">"newTodo"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">keyup.enter</span>=<span class="string">"addTodo"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> @<span class="attr">click</span>=<span class="string">"addTodo"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"todoItem"</span> <span class="attr">v-for</span>=<span class="string">"item in todos"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span> <span class="attr">:for</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">    &#123;&#123;item.title&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span>&gt;</span>刪除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>,</span><br><span class="line">data:&#123;</span><br><span class="line"><span class="comment">//儲存新增的待辦事項</span></span><br><span class="line">newTodo:<span class="string">''</span></span><br><span class="line"><span class="comment">//一個陣列，儲存目前待辦事項的內容</span></span><br><span class="line">todos:[&#123;</span><br><span class="line"><span class="comment">//對應checkbox與待辦事項</span></span><br><span class="line">id:<span class="string">'345'</span>,</span><br><span class="line">title: <span class="string">'你好'</span>,</span><br><span class="line">completed:<span class="literal">false</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods：&#123;</span><br><span class="line"><span class="comment">//新增一個待辦事項的方法</span></span><br><span class="line">addTodo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> value = <span class="keyword">this</span>.newTodo;</span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now());</span><br><span class="line">  <span class="keyword">if</span>(!value)&#123;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  title: value,</span><br><span class="line">  completed: <span class="literal">false</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.newTodo = <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="刪除陣列上的特定資料"><a href="#刪除陣列上的特定資料" class="headerlink" title="刪除陣列上的特定資料"></a>刪除陣列上的特定資料</h2><p>新增資料後，現在要將它刪除，在刪除按鈕上新增<code>@click=&quot;removeTodo()&quot;</code>方法，為了知道刪除的是哪一筆資料，所以必須在畫面資料列表<code>（item,key)in todos</code>， <code>key</code>是陣列索引位置，同時將參數傳入刪除按鍵與刪除方法。在 <code>methods</code> 裡新增一個判斷式，如果輸入值是空的就不能新增；並以 <code>trim()</code>刪除多餘空白鍵。最後以<code>splice()</code> 方法刪除所存在位置（key) 的資料。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"準備要做的任務"</span> <span class="attr">v-model</span>=<span class="string">"newTodo "</span> <span class="attr">:id</span>=<span class="string">"item.id"</span> @<span class="attr">keyup.enter</span>=<span class="string">"addTodo"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> @<span class="attr">click</span>=<span class="string">"addTodo"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"todoItem"</span> <span class="attr">v-for</span>=<span class="string">"(item,key)in todos"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-check-label"</span> <span class="attr">:for</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">&#123;&#123;item.title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span> ＠<span class="attr">click</span>=<span class="string">"removeTodo(key)"</span>&gt;</span>刪除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:<span class="string">''</span></span><br><span class="line">todos:[&#123;</span><br><span class="line">id:<span class="string">'345'</span>,</span><br><span class="line">title: <span class="string">'你好'</span>,</span><br><span class="line">completed:<span class="literal">false</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods：&#123;</span><br><span class="line">addTodo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> value = <span class="keyword">this</span>.newTodo.trim();</span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!value)&#123;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: <span class="literal">false</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.newTodo = <span class="string">''</span></span><br><span class="line">&#125;,</span><br><span class="line">removeTodo:<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.todos.splice(key,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="製作頁籤分類功能"><a href="#製作頁籤分類功能" class="headerlink" title="製作頁籤分類功能"></a>製作頁籤分類功能</h2><p>代辦事項頁面需有 3 個頁籤：全部項目（包含進行與完成）、進行中、已完成。所以我們現在動態呈現在畫面的資料，都是過濾過的。因此 <code>v-for</code> 要綁定<br><code>(item,key)in filteredTodos</code>。使用這個過濾方法需使用 <code>computed</code>運算，裡面的判斷式的邏輯是：如果:點選全部項目頁籤，直接回傳全部內容；如果點選進行中頁籤，則表示這些項目不是已完成的；如果點選已完成，則表示這些項目已完成。要在資料結構裡面，新增變數 <code>visibility</code> 決定切換呈現的頁籤與其內容：利用動態切換 className 功能製造刪節線效果：<code>:class=&quot;{&#39;completed&#39;:item.completed}&quot;</code>；利用動態切換 <code>className</code> 功能動態切換頁籤，如果 <code>className</code> 是 all 的時候，<code>visibility</code> 就切換為 all。切換條件是「按下頁籤」<code>:class=&quot;{&#39;active&#39;:visibility == &#39;all&#39;}&quot; @click=&quot;visibility=&#39;all&#39;&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">placeholder</span>=<span class="string">"準備要做的任務"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">"newTodo "</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">keyup.enter</span>=<span class="string">"addTodo"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> @<span class="attr">click</span>=<span class="string">"addTodo"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"todoItem"</span> <span class="attr">v-for</span>=<span class="string">"(item,key)in filteredTodos"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"form-check-input"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">"item.completed"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"form-check-label"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">"&#123;'completed':item.completed&#125;"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:for</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    &#123;&#123;item.title&#125;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span> ＠<span class="attr">click</span>=<span class="string">"removeTodo(key)"</span>&gt;</span></span><br><span class="line">      刪除</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"btn"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">"&#123;'active':visibility == 'all'&#125;"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">"visibility='all'"</span></span></span><br><span class="line"><span class="tag">    &gt;</span>全部<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"btn"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">"&#123;'active':visibility == 'active'&#125;"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">"visibility='active'"</span></span></span><br><span class="line"><span class="tag">    &gt;</span>進行中<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"btn"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">"&#123;'active':visibility == 'completed'&#125;"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">"visibility='completed'"</span></span></span><br><span class="line"><span class="tag">    &gt;</span>已完成<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>清除所有任務<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:<span class="string">''</span></span><br><span class="line">todos:[&#123;</span><br><span class="line">id:<span class="string">'345'</span>,</span><br><span class="line">title: <span class="string">'你好'</span>,</span><br><span class="line">completed:<span class="literal">false</span></span><br><span class="line">&#125;],</span><br><span class="line"><span class="comment">//新增變數</span></span><br><span class="line">visibility:<span class="string">'all'</span></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">addTodo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> value = <span class="keyword">this</span>.newTodo.trim();</span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!value)&#123;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: <span class="literal">false</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.newTodo = <span class="string">''</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">removeTodo:<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.todos.splice(key,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//過濾</span></span><br><span class="line">computed: &#123;</span><br><span class="line">filteredTodos: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.visibility == <span class="string">'all'</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.todos;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.visibility == <span class="string">'active'</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> newTodos = [];</span><br><span class="line"><span class="keyword">this</span>.todos.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!item.completed) &#123;</span><br><span class="line">newTodos.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"><span class="keyword">return</span> newTodos;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.visibility == <span class="string">'completed'</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> newTodos = [];</span><br><span class="line"> <span class="keyword">this</span>.todos.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (item.completed) &#123;</span><br><span class="line">newTodos.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"><span class="keyword">return</span> newTodos;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> [];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">          <span class="selector-class">.completed</span> &#123;</span><br><span class="line">            <span class="attribute">text-decoration</span>: line-through</span><br><span class="line">          &#125;</span><br><span class="line"> &lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="雙擊修改資料內容"><a href="#雙擊修改資料內容" class="headerlink" title="雙擊修改資料內容"></a>雙擊修改資料內容</h2><p>在顯示內容列新增一個雙擊觸發編輯內容方法<code>@dblclick=&quot;editTodo(item)&quot;</code>，這個點擊的項目會暫時除存在暫存編輯內容<code>cacheTodo:{}</code>、<code>cacheTitle</code>裡面。這時要從編輯框顯示要修改的內容，所以畫面以判斷式替換成編輯輸入框。反之，假如原本畫面上的資料的 id 不等於暫存編輯中的 id，就顯示出來</p><p><code>v-if=&quot;item.id ===cacheTodo.id&quot;</code>，並且連結資料結構裡的暫存邊集中資料內容 <code>v-model=&quot;cacheTitle&quot;</code>。同一個編輯輸入框，還有儲存編輯內容與取消兩個輸入行為。</p><p>已完成的編輯內容方法 <code>@keyup.enter=&quot;doneEdit(item)</code>，把剛剛修改的內容儲存到被修改的項目、並將該暫存物件清空。取消編輯則是讓暫存物件清空。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"todoItem"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">"(item,key) in filteredTodos"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">dblclick</span>=<span class="string">"editTodo(item)"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  //判斷是否顯示編輯框</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex"</span> <span class="attr">v-if</span>=<span class="string">"item.id !==cacheTodo.id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"form-check-input"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">"item.completed"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"form-check-label"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">"&#123;'completed':item.completed&#125;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:for</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      &#123;&#123;item.title&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span> @<span class="attr">click</span>=<span class="string">"removeTodo(key)"</span>&gt;</span></span><br><span class="line">        刪除</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-if</span>=<span class="string">"item.id ===cacheTodo.id"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">"cacheTitle"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">keyup.esc</span>=<span class="string">"cancelEdit()"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">keyup.enter</span>=<span class="string">"doneEdit(item)"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:<span class="string">''</span></span><br><span class="line">todos:[&#123;</span><br><span class="line">id:<span class="string">'345'</span>,</span><br><span class="line">title: <span class="string">'你好'</span>,</span><br><span class="line">completed:<span class="literal">false</span></span><br><span class="line">&#125;],</span><br><span class="line"></span><br><span class="line">cacheTodo: &#123;&#125;,</span><br><span class="line">cacheTitle: <span class="string">''</span>,</span><br><span class="line">&#125;,</span><br><span class="line">methods：&#123;</span><br><span class="line">editTodo: <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.cacheTodo = item;</span><br><span class="line"><span class="keyword">this</span>.cacheTitle = item.title;</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">//取消編輯</span></span><br><span class="line"> cancelEdit: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.cacheTodo = &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//儲存完成的編輯</span></span><br><span class="line">   doneEdit: <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">                    item.title = <span class="keyword">this</span>.cacheTitle;</span><br><span class="line">                    <span class="keyword">this</span>.cacheTitle = <span class="string">''</span>;</span><br><span class="line">                    <span class="keyword">this</span>.cacheTodo = &#123;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure><h2 id="修改刪除項目的索引"><a href="#修改刪除項目的索引" class="headerlink" title="修改刪除項目的索引"></a>修改刪除項目的索引</h2><p>修正刪除項目的索引位置，刪除項目鍵本來傳入的是資料在陣列中的索引位置，但是因為現在它可能位於不同的標籤，也就是可能勾選完成，所以在每個頁籤的索引位置都不一樣，因此函數參數要改成 todo 本身，讓它的新索引等於目前它在該標籤裡的 <code>key</code>值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"todoItem"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">"(item,key) in filteredTodos"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">dblclick</span>=<span class="string">"editTodo(item)"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex"</span> <span class="attr">v-if</span>=<span class="string">"item.id !==cacheTodo.id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"form-check-input"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">"item.completed"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:id</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"form-check-label"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">"&#123;'completed':item.completed&#125;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:for</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      &#123;&#123;item.title&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn-delete"</span> @<span class="attr">click</span>=<span class="string">"removeTodo(item)"</span>&gt;</span></span><br><span class="line">        刪除</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-if</span>=<span class="string">"item.id ===cacheTodo.id"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">"cacheTitle"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">keyup.esc</span>=<span class="string">"cancelEdit()"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">keyup.enter</span>=<span class="string">"doneEdit(item)"</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">newTodo:<span class="string">''</span></span><br><span class="line">todos:[&#123;</span><br><span class="line">id:<span class="string">'345'</span>,</span><br><span class="line">title: <span class="string">'你好'</span>,</span><br><span class="line">completed:<span class="literal">false</span></span><br><span class="line">&#125;],</span><br><span class="line"><span class="comment">//暫存編輯事項</span></span><br><span class="line">cacheTodo: &#123;&#125;,</span><br><span class="line">cacheTitle: <span class="string">''</span>,</span><br><span class="line"></span><br><span class="line">visibility:<span class="string">'all'</span></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods：&#123;</span><br><span class="line"></span><br><span class="line">addTodo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> value = <span class="keyword">this</span>.newTodo.trim();</span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!value)&#123;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.todos.push(&#123;</span><br><span class="line">  id: timestamp,</span><br><span class="line">  itle: value,</span><br><span class="line">  computed: <span class="literal">false</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">this</span>.newTodo = <span class="string">''</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"> removeTodo: <span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> newIndex = <span class="string">""</span>;</span><br><span class="line"> <span class="keyword">var</span> vm = <span class="keyword">this</span>;</span><br><span class="line">vm.todos.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item, key</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (todo.id === item.id) &#123;</span><br><span class="line">newIndex = key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">this</span>.todos.splice(newIndex, <span class="number">1</span>)</span><br><span class="line">&#125;,,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="刪除全部及還有幾筆任務未完成"><a href="#刪除全部及還有幾筆任務未完成" class="headerlink" title="刪除全部及還有幾筆任務未完成"></a>刪除全部及還有幾筆任務未完成</h2><p>刪除全部的方法就是讓儲存資料的陣列清空；還沒完成的項目，以判斷式判斷，如果不是完成的，就把還沒完成的內容數量，傳到畫面上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click</span>=<span class="string">"clearAll"</span>&gt;</span>清除所有任務<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>還有 &#123;&#123;undoneRecords &#125;&#125; 筆任務未完成<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line"> clearAll: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">this</span>.todos = [];</span><br><span class="line">&#125;&#125;,</span><br><span class="line"></span><br><span class="line"> computed: &#123;</span><br><span class="line"> undoneRecords:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> undoneRecords=[];</span><br><span class="line"> <span class="keyword">this</span>.todos.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(!item.completed)&#123;</span><br><span class="line"> undoneRecords.push(item);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"> <span class="keyword">return</span>.undoneRecords.length;</span><br><span class="line"> &#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;Vue 練習 - Todo List 待辦事項清單 - &lt;a href=&quot;https://chiangyuchi.githu
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 番茄鐘</title>
    <link href="http://yoursite.com/2019/08/22/2019-08-22/"/>
    <id>http://yoursite.com/2019/08/22/2019-08-22/</id>
    <published>2019-08-21T16:00:00.000Z</published>
    <updated>2019-11-10T14:32:57.648Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 番茄鐘 - <a href="https://chiangyuchi.github.io/pomodoro/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>注意力愈來愈稀缺，而這時候最適合的方法就是「番茄鐘工作法」。番茄鐘工作法是一種能有效大幅提升工作效率的時間管理方法，透過時間的分段和階段性的任務，讓你清楚知道自己的時間花費在哪裡。</p><p><img src="https://i.imgur.com/2l4YRxQ.png" alt></p><ul><li>一個番茄鐘包含工作 25 分鐘、休息 5 分鐘</li><li>可開始或暫停倒數，但同時只顯示其中一個按鈕</li><li>每次重置就是從工作時段開始，因為重新開始休息時間不合番茄工作法的邏輯</li><li>可客製化時間長度</li><li>完成或終止都會顯示該時段任務所達時間長度在下方列表</li><li>進度條</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="開始及暫停倒數"><a href="#開始及暫停倒數" class="headerlink" title="開始及暫停倒數"></a>開始及暫停倒數</h2><p>番茄鐘的基本結構包括：顯示倒數時間、開始及暫停鈕、停止按鈕。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pomodoro-clock"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pomodoro-main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pomodoro-timer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pomodoro-info"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pomodoro-clock-controller"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"pomodoro-start"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-play"</span> <span class="attr">id</span>=<span class="string">"play-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-pause hidden"</span> <span class="attr">id</span>=<span class="string">"pause-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"pomodoro-stop"</span> <span class="attr">class</span>=<span class="string">"hidden"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-stop"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先設置事件監聽器，在點擊的時候就會呼叫 <code>toggleClock</code> 函式，以便在播放及暫停之間切換。還需要一個 <code>isClockRunning</code>變數，以便知道是否需要播放或暫停計時器，它的初始布林值是 <code>false</code>；設定時間的初始值，分別是每個番茄鐘的時段 25 分鐘，要用來儲存現在剩餘時間的變數也是 25 分鐘，休息時段 5 分鐘。我們對點擊 stop 的時候呼叫的<code>toggleClock</code> 函式傳入一個 <code>reset</code> 參數</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pomodoroTimer = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-timer"</span>);</span><br><span class="line"><span class="keyword">const</span> startButton = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-start"</span>);</span><br><span class="line"><span class="keyword">const</span> pauseButton = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-pause"</span>);</span><br><span class="line"><span class="keyword">const</span> stopButton = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-stop"</span>);</span><br><span class="line"><span class="keyword">let</span> isClockRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> workSessionDuration = <span class="number">1500</span>; <span class="comment">// = 25 mins</span></span><br><span class="line"><span class="keyword">let</span> currentTimeLeftInSession = <span class="number">1500</span>; <span class="comment">//目前時段剩餘時間</span></span><br><span class="line"><span class="keyword">let</span> breakSessionDuration = <span class="number">300</span>; <span class="comment">// ＝ 5mins</span></span><br><span class="line"></span><br><span class="line">startButton.addEventListener(<span class="string">"click"</span>, () =&gt; &#123;</span><br><span class="line">  toggleClock();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">pauseButton.addEventListener(<span class="string">"click"</span>, () =&gt; &#123;</span><br><span class="line">  toggleClock();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">stopButton.addEventListener(<span class="string">"click"</span>, () =&gt; &#123;</span><br><span class="line">  toggleClock(<span class="literal">true</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>裡我們使用 ES6 的箭頭函式寫法，所有的函式會變成匿名的函式。。例如：</p><pre><code>const func = (x) =&gt; x + 1相當於const func = function (x) { return x + 1 }</code></pre><p><code>toggleClock</code> 只會在我們按下 stop 的時候接收 <code>reset</code> 參數；如果不是按下 stope 按鈕，這個函式就會查看 <code>isClockRunning</code> 變數的值，看我們按下的是播放還是暫停計時器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> toggleClock = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (reset) &#123;</span><br><span class="line">    <span class="comment">// STOP THE TIMER</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isClockRunning === <span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="comment">// PAUSE THE TIMER</span></span><br><span class="line">      isClockRunning = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// START THE TIMER</span></span><br><span class="line">      isClockRunning = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>這裡使用內建方法<code>setInterval</code>追蹤我計時器，可按照指定的週期（以毫秒）調用函式。讓番茄鐘的剩餘時段每秒鐘都減 1，在 else 語句內部，isClockRunning = true 我們可以這樣寫：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">clockTimer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// decrease time left / increase time spent</span></span><br><span class="line">  currentTimeLeftInSession--;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>在單擊“暫停”按鈕時暫停此計時器，因此如果時鐘還繼續在倒數的話，我們就暫停這個計時器，這將清除點擊播放按鈕時設置的計時器。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isClockRunning == <span class="literal">true</span>) &#123;</span><br><span class="line">  clearInterval(clockTimer);</span><br><span class="line">  isClockRunning = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="格式化和顯示時間"><a href="#格式化和顯示時間" class="headerlink" title="格式化和顯示時間"></a>格式化和顯示時間</h2><p>現在首先要在頁面顯示計時器，設定一個函式 <code>displayCurrentTimeLeftInSession</code>，這個函式將在每秒被計時器調用，並且我們要讓剩餘的時間每一秒都減少</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">clockTimer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  currentTimeLeftInSession--;</span><br><span class="line">  displayCurrentTimeLeftInSession();</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>現在我們要格式化時間，把時間轉換為分及秒。使用 <code>%</code> 取得餘數，</p><p>例如</p><pre><code>const x = 70 //現在有 70 秒x % 60 ; // 餘數 10</code></pre><p>70 秒就是 1 分 10 秒，所以透過 % 60 我們取得剩餘秒數，並且同時使用 <code>parseInt()</code>把字串轉成數值。然後再把剩餘的秒數除以 3600 (一小時的總秒數)，獲得目前剩餘的小時。</p><p>並且我們要讓分鐘及秒鐘在小於 10 的時候前面加 0 ，項這樣的格式 “09:05”。如果時間小於 10，則返回前面的零（例如：09 而不是 9），如果時間大於 10，則返回它。</p><p>最後組成字串：將小時（如果有），分鐘和秒，組一起成一個字串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> displayCurrentTimeLeftInSession = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> secondsLeft = currentTimeLeftInSession;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">const</span> seconds = secondsLeft % <span class="number">60</span>;</span><br><span class="line">  <span class="keyword">const</span> minutes = <span class="built_in">parseInt</span>(secondsLeft / <span class="number">60</span>) % <span class="number">60</span>;</span><br><span class="line">  <span class="keyword">let</span> hours = <span class="built_in">parseInt</span>(secondsLeft / <span class="number">3600</span>);</span><br><span class="line">  <span class="comment">// add leading zeroes if it's less than 10</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addLeadingZeroes</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> time &lt; <span class="number">10</span> ? <span class="string">`0<span class="subst">$&#123;time&#125;</span>`</span> : time;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (hours &gt; <span class="number">0</span>) result += <span class="string">`<span class="subst">$&#123;hours&#125;</span>:`</span>;</span><br><span class="line">  result += <span class="string">`<span class="subst">$&#123;addLeadingZeroes(minutes)&#125;</span>:<span class="subst">$&#123;addLeadingZeroes(seconds)&#125;</span>`</span>;</span><br><span class="line">  pomodoroTimer.innerText = result.toString();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="停止計時器"><a href="#停止計時器" class="headerlink" title="停止計時器"></a>停止計時器</h2><p>上面已經把 stop 按鈕連結到事件監聽，而且只有點擊它的時候，才會調用 <code>reset</code> 參數。現在在 <code>toggleClock</code> 的條件句裡調用另一個函式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> toggleClock = <span class="function">(<span class="params">reset</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (reset) &#123;</span><br><span class="line">   stopClock();</span><br><span class="line">  &#125; <span class="comment">//....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>終止計時器的時候，要做以下 2 件事情：</p><ul><li>清除目前設置的計時器</li><li>把計時器恢復到初始值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> stopClock = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1) 重置目前設定的計時器</span></span><br><span class="line">  clearInterval(clockTimer);</span><br><span class="line">  <span class="comment">// 2) 把計時器切換到停止</span></span><br><span class="line">  isClockRunning = <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">// 把目前時段剩下的時間切換回原始設定值</span></span><br><span class="line">  currentTimeLeftInSession = workSessionDuration;</span><br><span class="line">  <span class="comment">// 更新目前顯示在畫面上的時間</span></span><br><span class="line">  displayCurrentTimeLeftInSession();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="在工作和休息間切換"><a href="#在工作和休息間切換" class="headerlink" title="在工作和休息間切換"></a>在工作和休息間切換</h2><p>將上面在數器裡面每秒都持續減少的方法移除，並且獨立成一個函式。</p><ul><li>在「工作」和 「休息」之間切換</li><li>顯示已完成/已停止的日誌</li><li>能夠編輯任務的標籤</li></ul><p>如果 currentTimeLeftInSession &gt; 0 這意味著計時器仍在運行，那麼我們只想減少它；新增一個儲存任務類型的變數 <code>let type=&quot;Work&quot;</code>如果現在剩餘的時間等於 0 ，我們需要切換任務類型和接下來時段的持續時間</p><p>並且將完成或終止的任務顯示在日誌，在日誌裡面顯示這個時段總計累計時間。所以我們要宣告一個會隨著任務的花費每一秒而增加新變數<code>let timeSpentInCurrentSession = 0;</code>， 同時在函式內部加入 <code>timeSpentInCurrentSession++;</code> 讓花費的時間持續增加。每次任務結束時，我們都會重置此計數器，因為計時器已結束或已停止。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> type = <span class="string">"Work"</span>;</span><br><span class="line"><span class="keyword">let</span> timeSpentInCurrentSession = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleClock = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="comment">//.........</span></span><br><span class="line"> <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            clockTimer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                stepDown();<span class="comment">//讓計數器持續減少</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stepDown = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (currentTimeLeftInSession &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    currentTimeLeftInSession--;</span><br><span class="line">    timeSpentInCurrentSession++; <span class="comment">// 累積花費的時間持續增加</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentTimeLeftInSession === <span class="number">0</span>) &#123;</span><br><span class="line">     timeSspentInCurrentSession = <span class="number">0</span>; <span class="comment">//重置累積花費的時間</span></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="string">"Work"</span>) &#123;</span><br><span class="line">      currentTimeLeftInSession = breakSessionDuration;</span><br><span class="line">      displaySessionLog(<span class="string">"Work"</span>);</span><br><span class="line">      type = <span class="string">"Break"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      currentTimeLeftInSession = workSessionDuration;</span><br><span class="line">      type = <span class="string">"Work"</span>;</span><br><span class="line">      displaySessionLog(<span class="string">"Break"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  displayCurrentTimeLeftInSession();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stopClock = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顯示日誌，並把任務類型重置為工作。重置休息會話並啟動另一個休息會話沒有意義，因此我們希望在用戶停止時始終恢復為工作會話。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> displaySessionLog = <span class="function"><span class="params">type</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> sessionsList = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-sessions"</span>);</span><br><span class="line">  <span class="comment">// append li to it</span></span><br><span class="line">  <span class="keyword">const</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">  <span class="keyword">let</span> sessionLabel = type;</span><br><span class="line">  <span class="keyword">let</span> elapsedTime = <span class="built_in">parseInt</span>(timeSpentInCurrentSession / <span class="number">60</span>);</span><br><span class="line">  elapsedTime = elapsedTime &gt; <span class="number">0</span> ? elapsedTime : <span class="string">"&lt; 1"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">`<span class="subst">$&#123;sessionLabel&#125;</span> : <span class="subst">$&#123;elapsedTime&#125;</span> min`</span>);</span><br><span class="line">  li.appendChild(text);</span><br><span class="line">  sessionsList.appendChild(li);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stopClock = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  timeSpentInCurrentSession = <span class="number">0</span>;</span><br><span class="line">  displaySessionLog(type); <span class="comment">//顯示到目前為止在此會話中花費的時間</span></span><br><span class="line">  type = <span class="string">"Work"</span>; <span class="comment">//重置任務類型</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="自定義任務名稱"><a href="#自定義任務名稱" class="headerlink" title="自定義任務名稱"></a>自定義任務名稱</h2><p>在 HTML 新增一個輸入框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"pomodoro-clock-task"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">placeholder</span>=<span class="string">"Enter your task..."</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下來，僅可針對工作任務給自定義的標籤，休息時間將始終顯示為休息。把 <code>let sessionLabel = type</code> 如下更新。這裡的意思是首先查看我們當前的任務類型，如果它是「工作」，則它將查看 input 標記的值。如果我們將其保留為空，則會顯示「工作」，否則將採用我們的自定義值。如果會話的類型為「休息」，它將僅使用字串「休息」作為日誌標籤。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> displaySessionLog = <span class="function"><span class="params">type</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">"Work"</span>) &#123;</span><br><span class="line">    sessionLabel = currentTaskLabel.value ? currentTaskLabel.value : <span class="string">"Work"</span>;</span><br><span class="line">    workSessionLabel = sessionLabel;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    sessionLabel = <span class="string">"Break"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>同時也要更新 <code>stepDown</code> 功能，加入 <code>currentTaskLabel.disabled = true</code>，因為我們要在休息時段禁用自定義標籤</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (currentTimeLeftInSession === <span class="number">0</span>) &#123;</span><br><span class="line">  timeSpentInCurrentSession = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// Timer is over -&gt; if work switch to break, viceversa</span></span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">'Work'</span>) &#123;</span><br><span class="line">    currentTimeLeftInSession = breakSessionDuration;</span><br><span class="line">    displaySessionLog(<span class="string">'Work'</span>);</span><br><span class="line">    type = <span class="string">'Break'</span>;</span><br><span class="line">    <span class="comment">// new</span></span><br><span class="line">    currentTaskLabel.value = <span class="string">'Break'</span>;</span><br><span class="line">    currentTaskLabel.disabled = <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    currentTimeLeftInSession = workSessionDuration;</span><br><span class="line">    type = <span class="string">'Work'</span>;</span><br><span class="line">    <span class="comment">// new</span></span><br><span class="line">    <span class="keyword">if</span> (currentTaskLabel.value === <span class="string">'Break'</span>) &#123;</span><br><span class="line">      currentTaskLabel.value = workSessionLabel;</span><br><span class="line">    &#125;</span><br><span class="line">    currentTaskLabel.disabled = <span class="literal">false</span>;</span><br><span class="line">    displaySessionLog(<span class="string">'Break'</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="自定義工作時間與休息時間"><a href="#自定義工作時間與休息時間" class="headerlink" title="自定義工作時間與休息時間"></a>自定義工作時間與休息時間</h2><p>新宣告四個變數，並且手動將 25 和 5 設置為兩個輸入欄位的值，這裡的數值代表的是分鐘</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> updatedWorkSessionDuration;</span><br><span class="line"><span class="keyword">let</span> updatedBreakSessionDuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> workDurationInput = <span class="built_in">document</span>.querySelector(<span class="string">"#input-work-duration"</span>);</span><br><span class="line"><span class="keyword">let</span> breakDurationInput = <span class="built_in">document</span>.querySelector(<span class="string">"#input-break-duration"</span>);</span><br><span class="line"></span><br><span class="line">workDurationInput.value = <span class="string">"25"</span>;</span><br><span class="line">breakDurationInput.value = <span class="string">"5"</span>;</span><br></pre></td></tr></table></figure><p>所以要更新計時器就要這些值從分鐘轉換為秒。新增兩個事件監聽，每當在其中一個 input 輸入新值時，我們就會使用新值。在調用一個函式 <code>minuteToSeconds</code>，它將幫助我們將 input 分鐘字串轉換為秒。要得到所有秒數，就將分鐘數乘 60。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">workDurationInput.addEventListener(<span class="string">"input"</span>, () =&gt; &#123;</span><br><span class="line">  updatedWorkSessionDuration = minuteToSeconds(workDurationInput.value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">breakDurationInput.addEventListener(<span class="string">"input"</span>, () =&gt; &#123;</span><br><span class="line">  updatedBreakSessionDuration = minuteToSeconds(breakDurationInput.value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> minuteToSeconds = <span class="function"><span class="params">mins</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mins * <span class="number">60</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最後步驟"><a href="#最後步驟" class="headerlink" title="最後步驟"></a>最後步驟</h2><p>由於我們自定義的工作時間與休息時間，只會在下一個時段更新，所以要設定一個新的函式。此函式將做兩件事：</p><ul><li>查看 <code>updatedBreakSessionDuration</code>以查看用戶是否更新了會話持續時間</li><li>如果是的話，它將根據用戶輸入的值設置新的會話持續時間</li></ul><p>如果目前任務類型為工作，將檢查用戶是否更新了 <code>updatedWorkSessionDuration</code> 。如果是，我們將其設置為下一個時段任務的值，否則我們使用中的默認值 workSessionDuration。休息也是如此。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setUpdatedTimers = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">"Work"</span>) &#123;</span><br><span class="line">    currentTimeLeftInSession = updatedWorkSessionDuration</span><br><span class="line">      ? updatedWorkSessionDuration</span><br><span class="line">      : workSessionDuration;</span><br><span class="line">    workSessionDuration = currentTimeLeftInSession;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    currentTimeLeftInSession = updatedBreakSessionDuration</span><br><span class="line">      ? updatedBreakSessionDuration</span><br><span class="line">      : breakSessionDuration;</span><br><span class="line">    breakSessionDuration = currentTimeLeftInSession;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是我們不要在暫停後更新計時器並且也不要計時器的長度被更新，所以新增一個變數來幫助計時器辨識是否該更新為自定義時段。並且在<code>stepDown</code>裡面使用更新為自定義時段的要求。當時鐘停止時，這意味著我們正在啟動時鐘，而不僅僅是在暫停後重新開始。在這種情況下，我們將設置更新的計時器並將變量切換為 false。當用戶停止計時時，我們將變量設置 isClockStopped 為 true，然後調用 <code>setUpdatedTimers</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isClockStopped = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toggleClock = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (reset) &#123;</span><br><span class="line">    stopClock();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// new</span></span><br><span class="line">    <span class="keyword">if</span> (isClockStopped) &#123;</span><br><span class="line">      setUpdatedTimers();</span><br><span class="line">      isClockStopped = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stopClock = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  setUpdatedTimers();</span><br><span class="line">  displaySessionLog(type);</span><br><span class="line">  clearInterval(clockTimer);</span><br><span class="line">  isClockStopped = <span class="literal">true</span>;</span><br><span class="line">  isClockRunning = <span class="literal">false</span>;</span><br><span class="line">  currentTimeLeftInSession = workSessionDuration;</span><br><span class="line">  displayCurrentTimeLeftInSession();</span><br><span class="line">  type = <span class="string">"Work"</span>;</span><br><span class="line">  timeSpentInCurrentSession = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="調整按鈕樣式"><a href="#調整按鈕樣式" class="headerlink" title="調整按鈕樣式"></a>調整按鈕樣式</h2><p>暫停的時候顯示播放鈕，反之亦然。我們只要在「播放」、「暫停」的圖示之間切換，所以請刪除以下幾行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pauseButton = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// PAUSE</span></span><br><span class="line">pauseButton.addEventListener(<span class="string">"click"</span>, () =&gt; &#123;</span><br><span class="line">  toggleClock();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>並且在 css 裡面添加 hidden 類別的定義，我們在切換的時候會添加到需要的按鈕上</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以要設定一個新的函式，讓我們在在時鐘不工作時隱藏暫停圖標。</p><ul><li>該參數 <code>reset</code> 是一個布林值，它將確定我們是否要重置時鐘。重置時無論時鐘暫停與否，我們總是要顯示播放鈕。</li><li>檢查元素裡面是否具有 hidden 類別，有的話移除，沒有的話加上去</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> togglePlayPauseIcon = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> playIcon = <span class="built_in">document</span>.querySelector(<span class="string">"#play-icon"</span>);</span><br><span class="line">  <span class="keyword">const</span> pauseIcon = <span class="built_in">document</span>.querySelector(<span class="string">"#pause-icon"</span>);</span><br><span class="line">  <span class="keyword">if</span> (reset) &#123;</span><br><span class="line">    <span class="comment">// 重置番茄鐘的時候，永遠都切換回播放鈕</span></span><br><span class="line">    <span class="keyword">if</span> (playIcon.classList.contains(<span class="string">"hidden"</span>)) &#123;</span><br><span class="line">      playIcon.classList.remove(<span class="string">"hidden"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!pauseIcon.classList.contains(<span class="string">"hidden"</span>)) &#123;</span><br><span class="line">      pauseIcon.classList.add(<span class="string">"hidden"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    playIcon.classList.toggle(<span class="string">"hidden"</span>);</span><br><span class="line">    pauseIcon.classList.toggle(<span class="string">"hidden"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>同時也要讓這個函式在 <code>toggleClock</code> 裡面調用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> toggleClock = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">  togglePlayPauseIcon(reset);<span class="comment">//......</span></span><br></pre></td></tr></table></figure><p>現在缺少的是 stopIcon。預設情況下停止鈕是隱藏的，它只會在我們第一次啟動時鐘時顯示，</p><p>創建一個名為的新函數 showStopIcon，如下所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> showStopIcon = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> stopButton = <span class="built_in">document</span>.querySelector(<span class="string">"#pomodoro-stop"</span>);</span><br><span class="line">  stopButton.classList.remove(<span class="string">"hidden"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>這個函式也將在 <code>toggleClock</code> 內部被調用，最後看起來像這樣：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> toggleClock = <span class="function"><span class="params">reset</span> =&gt;</span> &#123;</span><br><span class="line">  togglePlayPauseIcon(reset);</span><br><span class="line">  <span class="keyword">if</span> (reset) &#123;</span><br><span class="line">    stopClock();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(isClockStopped);</span><br><span class="line">    <span class="keyword">if</span> (isClockStopped) &#123;</span><br><span class="line">      setUpdatedTimers();</span><br><span class="line">      isClockStopped = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isClockRunning === <span class="literal">true</span>) &#123;</span><br><span class="line">      clearInterval(clockTimer);</span><br><span class="line">      isClockRunning = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      clockTimer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        stepDown();</span><br><span class="line">        displayCurrentTimeLeftInSession();</span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">      isClockRunning = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    showStopIcon();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 番茄鐘 - &lt;a href=&quot;https://chiangyuchi.github.io/p
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 -  串接環保署空氣品質開放資料</title>
    <link href="http://yoursite.com/2019/08/21/2019-08-21/"/>
    <id>http://yoursite.com/2019/08/21/2019-08-21/</id>
    <published>2019-08-20T16:00:00.000Z</published>
    <updated>2019-11-10T14:34:23.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 取得環保署開放數據資料 - <a href="https://chiangyuchi.github.io/air-quality/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>串接環保署的空氣數據開放資料，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/PZ3PIVz.png" alt></p><ul><li>運用 fecth 取得遠端資料</li><li>載入資料完成後，關閉 loading ring</li><li>將自定義色彩搭配遠端數據</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>首先設定 HTML 結構，並且設定相應變數：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ar loading = <span class="built_in">document</span>.querySelector(<span class="string">'.loading'</span>)</span><br><span class="line"><span class="keyword">var</span> select = <span class="built_in">document</span>.getElementById(<span class="string">'location'</span>); <span class="comment">//區域選單</span></span><br><span class="line"><span class="keyword">var</span> placeTitle = <span class="built_in">document</span>.querySelector(<span class="string">'.location'</span>); <span class="comment">//區域名稱顯示</span></span><br><span class="line"><span class="keyword">var</span> degree = <span class="built_in">document</span>.querySelector(<span class="string">'.degree'</span>);<span class="comment">//呈現空氣品質的色彩表</span></span><br><span class="line"><span class="keyword">var</span> time = <span class="built_in">document</span>.querySelector(<span class="string">'.time'</span>);<span class="comment">//更新時間</span></span><br><span class="line"><span class="keyword">var</span> infoList = <span class="built_in">document</span>.querySelector(<span class="string">'.infoList'</span>);<span class="comment">//該區域的詳細鄉鎮列表與數據</span></span><br><span class="line"><span class="keyword">var</span> detailTitle = <span class="built_in">document</span>.querySelector(<span class="string">'.detailTitle'</span>);<span class="comment">//點選鄉鎮後會被呈顯於左方的個別鄉鎮名稱</span></span><br><span class="line"><span class="keyword">var</span> detail = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.detail .number'</span>);<span class="comment">//個別鄉鎮的數據</span></span><br></pre></td></tr></table></figure><h2 id="使用-fetch-取得遠端資料。"><a href="#使用-fetch-取得遠端資料。" class="headerlink" title="使用 fetch 取得遠端資料。"></a>使用 fetch 取得遠端資料。</h2><p>這次練習使用 <code>fetch</code> 取得遠端資料。網路說明 <code>fetch</code> 和 <code>jQuery.ajax()</code> 有幾個主要的的差異:</p><pre><code>- fetch 會使用 ES6 的 Promise 作回應- then 作為下一步- catch 作為錯誤回應 (404, 500…)- 回傳的為 ReadableStream 物件，需要使用不同資料類型使用對應方法，才能正確取得資料物件。`fetch` 後方會接 `then()`，這是 `Promise`的特性，資料取得後可在 then 裡面接收。return response.json(); 的資料則會傳到下一個 then()；Fetch API 的 Response 物件中的 body 屬性提供了一個 ReadableStream 的實體，這個階段我們無法直接讀取資料內容，而 ReadableStream 物件中，可用 json() 取得資料</code></pre><h2 id="將取得的資料儲存在變數，並添加到資料結構中"><a href="#將取得的資料儲存在變數，並添加到資料結構中" class="headerlink" title="將取得的資料儲存在變數，並添加到資料結構中"></a>將取得的資料儲存在變數，並添加到資料結構中</h2><p>將遠端資料儲存在變數，並且用 for 迴圈以及 add()方法將縣市的欄位添加到 Set 結構當中。再依序為資料添加新的 DOM 元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url =</span><br><span class="line">  <span class="string">"https://cors-anywhere.herokuapp.com/http://opendata.epa.gov.tw/webapi/Data/REWIQA/?format=json"</span>;</span><br><span class="line">fetch(url, &#123;&#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//會得到一個 ReadableStream 的物件</span></span><br><span class="line">    <span class="keyword">return</span> response.json();</span><br><span class="line">    <span class="comment">//透過 json()轉成可用的資訊</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    getData(data); <span class="comment">//save data</span></span><br><span class="line">    updateAll(<span class="string">"新北市"</span>); <span class="comment">//更新所有頁面 ( datail, infoList)</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    loading.style.display = <span class="string">"none"</span>; <span class="comment">//待資料渲染至頁面後，關閉 loading page</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> datalist;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  datalist = data;</span><br><span class="line">  <span class="keyword">let</span> location = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; datalist.length; i++) &#123;</span><br><span class="line">    location.add(datalist[i].County);</span><br><span class="line">  &#125;</span><br><span class="line">  addInSelect(location);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addInSelect</span>(<span class="params">location</span>) </span>&#123;</span><br><span class="line">  location.forEach(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> option = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>);</span><br><span class="line">    option.setAttribute(<span class="string">"value"</span>, element);</span><br><span class="line">    option.innerHTML = element;</span><br><span class="line">    select.appendChild(option);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="設定監聽事件"><a href="#設定監聽事件" class="headerlink" title="設定監聽事件"></a>設定監聽事件</h2><p>設定 2 個監聽事件：獲取該區域全部資料、獲取個別鄉鎮的數據。點擊選單後，會將該縣市的資料都顯示在畫面上，另外，如果點擊下方的單一鄉鎮，如果點到的節點是連結，就會把細節更新在左方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select.addEventListener(<span class="string">"change"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  updateAll(e.target.value);</span><br><span class="line">&#125;);</span><br><span class="line">infoList.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">if</span> (e.target.nodeName == <span class="string">"A"</span>) &#123;</span><br><span class="line">    updateDetail(e.target.textContent);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="在陣列裡儲存色彩表"><a href="#在陣列裡儲存色彩表" class="headerlink" title="在陣列裡儲存色彩表"></a>在陣列裡儲存色彩表</h2><p>色彩資訊儲存在陣列裡面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//儲存色彩資訊</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> colors = [</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"良好"</span>,</span><br><span class="line">    color: <span class="string">"#95F084"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"普通"</span>,</span><br><span class="line">    color: <span class="string">"#FFE695"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"對敏感族群不健康"</span>,</span><br><span class="line">    color: <span class="string">"#FFAF6A"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"對所有族群不健康"</span>,</span><br><span class="line">    color: <span class="string">"#FF5757"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"非常不健康"</span>,</span><br><span class="line">    color: <span class="string">"#9777FF"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    status: <span class="string">"危害"</span>,</span><br><span class="line">    color: <span class="string">"#AD1774"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//套用顏色</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; degree.children.length; i++) &#123;</span><br><span class="line">  degree.children[i].style.backgroundColor = colors[i].color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="顯示選擇地區的資料"><a href="#顯示選擇地區的資料" class="headerlink" title="顯示選擇地區的資料"></a>顯示選擇地區的資料</h2><p>更新選擇的縣市所有資料在畫面上，點擊的縣市名稱會顯示在畫面上，並且用那個縣市的第一筆資料的更新時間。這裡要用幾個判斷式：過濾的資料要等於我們點擊的縣市、呈現在列表中的空氣品質顏色是根據取得回來的數據比對剛剛我們自行設定的顏色物件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateAll</span>(<span class="params">location</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//更新標題</span></span><br><span class="line">  placeTitle.innerHTML = location;</span><br><span class="line">  <span class="comment">//更新時間</span></span><br><span class="line">  time.innerHTML = datalist[<span class="number">0</span>].PublishTime + <span class="string">" 更新"</span>;</span><br><span class="line">  <span class="comment">//清空 infoList</span></span><br><span class="line">  infoList.innerHTML = <span class="string">""</span>;</span><br><span class="line">  <span class="comment">//更新 infoList</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//我們想要呈現在銀幕上的資料，在datalist裡一個一個過去</span></span><br><span class="line">  <span class="keyword">let</span> data = datalist.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//如果過濾出來的，是我們點選的，就回傳</span></span><br><span class="line">    <span class="keyword">if</span> (item.County == location) &#123;</span><br><span class="line">      <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//以 AQI 由大到小排序</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//這裡的data 是上面過濾過的data</span></span><br><span class="line">  <span class="keyword">let</span> sortedData = data.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> x = a.AQI;</span><br><span class="line">    <span class="keyword">let</span> y = b.AQI;</span><br><span class="line">    <span class="keyword">return</span> y - x;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//排序過的資料，要組字串放入畫面</span></span><br><span class="line">  <span class="comment">//傳入並在給定的函式當做參數，都執行一次</span></span><br><span class="line">  sortedData.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//宣告一個新變數，是新的li 節點</span></span><br><span class="line">    <span class="keyword">let</span> newList = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">    <span class="comment">//如果傳入的參數的 AQI 是空值或hypen，就替代為N/A</span></span><br><span class="line">    <span class="keyword">if</span> ((el.AQI == <span class="string">""</span>) | (el.AQI == <span class="string">"-"</span>)) &#123;</span><br><span class="line">      el.AQI = <span class="string">"N/A"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上色，在上面的顏色陣列裡尋找，如果顏色的狀態跟傳入的el狀態一樣，回傳顏色</span></span><br><span class="line">    <span class="keyword">let</span> colorList = colors.find(<span class="function"><span class="params">col</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (col.status == el.Status) &#123;</span><br><span class="line">        <span class="keyword">return</span> col;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//若資料內沒有 status (設備維修) 則套用此顏色</span></span><br><span class="line">    <span class="keyword">if</span> (colorList == <span class="literal">undefined</span>) &#123;</span><br><span class="line">      colorList = &#123;</span><br><span class="line">        color: <span class="string">"#EEEEEE"</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//組字串並更新</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">`&lt;div class="infoBox"&gt;</span></span><br><span class="line"><span class="string">                       &lt;a href='#' class="place infoBox"&gt;<span class="subst">$&#123;el.SiteName&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">                       &lt;div class="AQI infoBox" style="background-color:<span class="subst">$&#123;colorList.color&#125;</span>"&gt;<span class="subst">$&#123;el.AQI&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">                   &lt;/div&gt;`</span>;</span><br><span class="line">    newList.innerHTML = str;</span><br><span class="line"></span><br><span class="line">    infoList.appendChild(newList);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//並且更新細項，把排序第一個</span></span><br><span class="line">  updateDetail(sortedData[<span class="number">0</span>].SiteName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更新單一鄉鎮的資料在左邊欄位"><a href="#更新單一鄉鎮的資料在左邊欄位" class="headerlink" title="更新單一鄉鎮的資料在左邊欄位"></a>更新單一鄉鎮的資料在左邊欄位</h2><p>更新單一鄉鎮的資料在左邊欄位。點擊單一鄉鎮的名稱，比對資料裡的 SiteName 如果符合，就渲染在左邊欄位。首先要將該鄉鎮的資料重新儲存在一個空陣列裡面細節標題的第一項，更新成上面的 SiteName ，就是該站點的 AQI 屬性。著色的方式同上，它是在 colors 陣列裡面比對要取回的顏色，find 方法會對每個元素執行一次 callback 函式，直到找到一個讓 callback 函式回傳 true 的元素。當元素被找到的時候，find 會立刻回傳該元素，否則 find 會回傳 undefined。這個陣列裡面比對的狀態，當成 col 參數在這個方法裡運作，比對傳入元素的狀態，如果符合，就回傳色彩。所以要判斷這個 colorlist 的 status 是否等於傳入的項目的 status，如果是，就回傳。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateDetail</span>(<span class="params">place</span>) </span>&#123;</span><br><span class="line">  datalist.find(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//如果在d</span></span><br><span class="line">    <span class="keyword">if</span> (item.SiteName == place) &#123;</span><br><span class="line">      <span class="comment">//將各項空污指標存入陣列中</span></span><br><span class="line">      <span class="keyword">let</span> data = [];</span><br><span class="line">      data.push(item.O3, item.PM10, item[<span class="string">"PM2.5"</span>], item.CO, item.SO2, item.NO2);</span><br><span class="line">      <span class="comment">//更新 detailTitle</span></span><br><span class="line">      detailTitle.children[<span class="number">0</span>].innerHTML = place; <span class="comment">//更新地點</span></span><br><span class="line">      detailTitle.children[<span class="number">1</span>].innerHTML = item.AQI; <span class="comment">//更新分數</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//上色</span></span><br><span class="line">      <span class="keyword">let</span> colorList = colors.find(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (el.status == item.Status) &#123;</span><br><span class="line">          <span class="keyword">return</span> el;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      detailTitle.children[<span class="number">1</span>].style.backgroundColor = colorList.color;</span><br><span class="line">      <span class="comment">//將 data內的資料更新至 detail上</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (data[i] == <span class="string">""</span>) &#123;</span><br><span class="line">          data[i] = <span class="string">"N/A"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        detail[i].innerHTML = data[i];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 取得環保署開放數據資料 - &lt;a href=&quot;https://chiangyuchi.git
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 練習 - 串接新北市 Youbike 開放資料</title>
    <link href="http://yoursite.com/2019/08/20/2019-08-20/"/>
    <id>http://yoursite.com/2019/08/20/2019-08-20/</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2019-11-10T12:51:59.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>jQuery 練習 - 取得新北市 Youbike 開放數據資料 - <a href="https://chiangyuchi.github.io/youbike/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>串接新北市政府提供的 Youbike 位置資訊，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/iuIlX7J.jpg" alt></p><ul><li>利用 Ajax 取得數據資料</li><li>解決跨來源資源共用（Cross-Origin Resource Sharing）問題</li><li>運用 jQuery</li><li>載入畫面時呈現全部資料</li><li>可過濾點擊地區</li></ul><p>#功能</p><p>基礎的 HTML 結構先設定選單，由於選擇區域的顯示數量不一定，所以我們先單純設定選單及待會要放置的項目類別即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>新北市 YouBike 租借資訊<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"select-area"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"choosePos"</span> <span class="attr">id</span>=<span class="string">"select"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ..... --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"五股區"</span>&gt;</span>五股<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"八里區"</span>&gt;</span>八里<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"淡水區"</span>&gt;</span>淡水<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"三芝區"</span>&gt;</span>三芝<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"石門區"</span>&gt;</span>石門<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"site-content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site-items"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先設定監聽事件，並且觸發事件的時候，到時會先呈現所有的資料</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>)</span><br><span class="line">    .val(<span class="string">"all"</span>)</span><br><span class="line">    .trigger(<span class="string">"change"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>接著使用 <code>jQuery.ajax()</code> 取得 XMLHttpRequest 物件，並且使用跨域代理伺服器(CORS PROXY)，解決讀取第三方網站資料問題。否則在系統控制台會出現以下訊息：<br><img src="https://i.imgur.com/XUX9ROK.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> URI =</span><br><span class="line">    <span class="string">"https://cors-anywhere.herokuapp.com/https://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001"</span>;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  $(<span class="string">"#select"</span>)</span><br><span class="line">    .val(<span class="string">"all"</span>)</span><br><span class="line">    .trigger(<span class="string">"change"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>成功取得資料<br><img src="https://i.imgur.com/AkWZeTS.png" alt></p><p>接著設定一個變數是我們待會要將篩選資料放置到畫面上的位置，並且以 <code>each(function(index,element)</code>遍歷我們取得的資料，<code>index</code>是個別資訊在全部資料中的索引位置，要取得它們的值接著依序將它們各自存入變數中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chooseArea = e.target.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">""</span>;</span><br><span class="line">        $.each(location, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">let</span> stationName = value.sna;</span><br><span class="line">          <span class="keyword">let</span> updateTime = value.mday;</span><br><span class="line">          <span class="keyword">let</span> bikeAvailble = value.sbi;</span><br><span class="line">          <span class="keyword">let</span> parkingSpace = value.bemp;</span><br><span class="line">          <span class="keyword">let</span> addCN = value.ar;</span><br><span class="line">          <span class="keyword">let</span> addEn = value.sareaen;</span><br><span class="line">          <span class="keyword">let</span> stationEn = value.snaen;</span><br><span class="line">          <span class="keyword">let</span> stationInfo =</span><br><span class="line">            <span class="string">'&lt;div class="site-item"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-name"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="station"&gt;'</span> +</span><br><span class="line">            stationName +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="update-time"&gt;'</span> +</span><br><span class="line">            <span class="string">"更新："</span> +</span><br><span class="line">            updateTime +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">' &lt;div class="site-info"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-bike"&gt;'</span> +</span><br><span class="line">            <span class="string">"可租借數量："</span> +</span><br><span class="line">            bikeAvailble +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-empty"&gt;'</span> +</span><br><span class="line">            <span class="string">"可還空位數:"</span> +</span><br><span class="line">            parkingSpace +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="site-add"&gt;'</span> +</span><br><span class="line">            <span class="string">"地址："</span> +</span><br><span class="line">            addCN +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="sareaen"&gt;'</span> +</span><br><span class="line">            <span class="string">"Area:"</span> +</span><br><span class="line">            addEn +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">'&lt;div class="snaen"&gt;'</span> +</span><br><span class="line">            <span class="string">"Site-Name:"</span> +</span><br><span class="line">            stationEn +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/div&gt;"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>設定條件，如果點擊選單的地區值等於所取得的遠端資料的地區值，則將相關資料放置到畫面上；如果選擇的區域是顯示全部，則放入所有取回的資料。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> URI =</span><br><span class="line">    <span class="string">"https://cors-anywhere.herokuapp.com/https://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001"</span>;</span><br><span class="line">  $(<span class="string">"#select"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chooseArea = e.target.value;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">      url: URI,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">responseObject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> location = responseObject.result.records;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">""</span>;</span><br><span class="line">        $.each(location, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">          <span class="comment">//...</span></span><br><span class="line">          <span class="keyword">if</span> (chooseArea == value.sarea) &#123;</span><br><span class="line">            str += stationInfo;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (chooseArea == <span class="string">"all"</span>) &#123;</span><br><span class="line">            str += stationInfo;</span><br><span class="line">          &#125;</span><br><span class="line">          $(<span class="string">".site-items"</span>)</span><br><span class="line">            .hide()</span><br><span class="line">            .html(str)</span><br><span class="line">            .fadeIn(<span class="number">400</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;jQuery 練習 - 取得新北市 Youbike 開放數據資料 - &lt;a href=&quot;https://chiangyuch
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 練習 - 自動縮放 Silder</title>
    <link href="http://yoursite.com/2019/08/19/2019-08-19/"/>
    <id>http://yoursite.com/2019/08/19/2019-08-19/</id>
    <published>2019-08-18T16:00:00.000Z</published>
    <updated>2019-11-10T14:15:13.435Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>jQuery 練習 - jQuery 自動縮放 Silder - <a href="https://chiangyuchi.github.io/jquery-silder/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>對 jQuery 有初步認識後，從網上找了 Silder 專案來練習。</p><p><img src="https://i.imgur.com/wQGXTeF.jpg" alt></p><p>可以前後切換圖片</p><p><img src="https://i.imgur.com/pKNCd2N.jpg" alt></p><p>切換拾畫面會變形，並且在固定時間內縮放</p><p><img src="https://i.imgur.com/EC2FTT6.jpg" alt></p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="基礎的-HTML-架構"><a href="#基礎的-HTML-架構" class="headerlink" title="基礎的 HTML 架構"></a>基礎的 HTML 架構</h2><p>有圖片區塊與前後切換按鍵</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"silder"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/bg1.jpg"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/bg2.jpg"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/bg3.jpg"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"prvbtn"</span>&gt;</span>&amp;#8592<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"nxtbtn"</span>&gt;</span>&amp;#8594<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="設定繪製畫面變形的-clip-path"><a href="#設定繪製畫面變形的-clip-path" class="headerlink" title="設定繪製畫面變形的 clip-path"></a>設定繪製畫面變形的 clip-path</h2><p>並且要在 CSS 設定一個繪製畫面變形最重要的關鍵 <code>clip-path</code>，是利用遮罩剪裁的方式，使 <code>div</code> 可以多邊型變化，可以產生不同的形狀，顯示底圖或底色。 因為要產生五角形的畫面變化，因此需要有五個座標參數，每個點的都包括橫向 X 軸與垂直 Y 軸的參數，初始值我們要使畫面呈現預設的長方形</p><p>每個點的參數與對應關係可參考這個網站</p><p><img src="https://i.imgur.com/bdAJDFE.jpg" alt></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">-webkit-clip-path</span>: <span class="built_in">polygon</span>(0% 0%, 0% 100%, 100% 100%, 100% 0%, 0% 0%);</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用-animate-產生畫面滑動"><a href="#使用-animate-產生畫面滑動" class="headerlink" title="使用 animate() 產生畫面滑動"></a>使用 animate() 產生畫面滑動</h2><p>首先設定點擊前後切換的按鍵的 function，會使用 animate() 方法產生動畫效果，使三張圖片圖片負向向左方移動。因為我們設定每個影像都佔據畫面 33.33%，因此如果是第一張圖片要切換到第二張，則現在畫面中的圖片往左負向移動 100%，如果是第二張要切換到第三張，則第一張跟第二張圖片，總共要向左負向移動 200%。如果要從第三張切換回第二張，則往左負向移動的百分比切換為 -100%。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$count = <span class="number">1</span>;</span><br><span class="line">$(<span class="string">"#nxtbtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ($count == <span class="number">1</span>) &#123;</span><br><span class="line">    $(<span class="string">"#silder"</span>).animate(&#123;</span><br><span class="line">      left: <span class="string">"-100%"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $count = <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($count == <span class="number">2</span>) &#123;</span><br><span class="line">    $(<span class="string">"#silder"</span>).animate(&#123;</span><br><span class="line">      left: <span class="string">"-200%"</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $count = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#prvbtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ($count == <span class="number">3</span>) &#123;</span><br><span class="line">    $(<span class="string">"#silder"</span>).animate(&#123;</span><br><span class="line">      left: <span class="string">"-100%"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $count = <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($count == <span class="number">2</span>) &#123;</span><br><span class="line">    $(<span class="string">"#silder"</span>).animate(&#123;</span><br><span class="line">      left: <span class="string">"0%"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $count = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="變形效果"><a href="#變形效果" class="headerlink" title="變形效果"></a>變形效果</h2><p>接下來是變形的效果，由於</p><p>搭配 <code>setTimeout</code> 設定延遲以單位毫秒執行指定的程式碼。clip-path 會使我們設定的背景顏色顯示出來。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#main"</span>).css(&#123;</span><br><span class="line">    <span class="string">"-webkit-clip-path"</span>: <span class="string">"polygon(10% 20%,0% 100%,100% 100%,90% 20%,10% 20%)"</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;, <span class="number">150</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JK4nVOy.jpg" alt></p><p>最後是縮放的效果一樣使用 <code>setTimeout</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"#main"</span>).css(&#123;</span><br><span class="line">    <span class="string">"-webkit-clip-path"</span>: <span class="string">"polygon(10% 20%,0% 100%,100% 100%,90% 20%,10% 20%)"</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;, <span class="number">150</span>);</span><br></pre></td></tr></table></figure><h2 id="設定延遲效果"><a href="#設定延遲效果" class="headerlink" title="設定延遲效果"></a>設定延遲效果</h2><p>回到切換按鈕的 function 設定延遲效果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $pic = <span class="number">1</span>;</span><br><span class="line">    $(<span class="string">"#nxtbtn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($pic == <span class="number">1</span>) &#123;</span><br><span class="line">            shrink();</span><br><span class="line">            $(<span class="string">'#silder'</span>).delay(<span class="number">1000</span>).animate(&#123;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;jQuery 練習 - jQuery 自動縮放 Silder - &lt;a href=&quot;https://chiangyuchi.
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 牌卡記憶遊戲</title>
    <link href="http://yoursite.com/2019/08/17/2019-08-17/"/>
    <id>http://yoursite.com/2019/08/17/2019-08-17/</id>
    <published>2019-08-16T16:00:00.000Z</published>
    <updated>2019-11-10T13:35:20.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 牌卡記憶遊戲 - <a href="https://chiangyuchi.github.io/memory-game/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是一個蠻常見的 JavaScript 基礎題目練習，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/OzXLTaW.jpg" alt></p><ul><li>把陣列的十二張圖片顯示在畫面</li><li>複製圖片為偶數</li><li>隨機顯示圖片排列順序</li><li>呈現圖片的選擇狀態</li><li>一次只能選取兩張</li><li>如果圖片配對成功就隱藏</li><li>如果猜錯或猜對都可以重新開始選擇</li><li>牌卡可以翻面</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>這個練習的 HTML 原始結構較為簡單，因為希望牌卡順序可以隨機排列，所以先不設定圖片位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"game"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">900px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">80px</span> auto;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: contain;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: center center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="建立陣列儲存牌卡"><a href="#建立陣列儲存牌卡" class="headerlink" title="建立陣列儲存牌卡"></a>建立陣列儲存牌卡</h2><p>首先要建立儲存牌卡的地方，每一張卡都有不同的值，所以建立一個陣列，將它儲存在 <code>cardsArray</code> 變數中，每個物件都包含一個名稱與圖片。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cardsArray = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"spade"</span>,</span><br><span class="line">    img: <span class="string">"img/spade.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"two"</span>,</span><br><span class="line">    img: <span class="string">"img/two.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"three"</span>,</span><br><span class="line">    img: <span class="string">"img/three.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"four"</span>,</span><br><span class="line">    img: <span class="string">"img/four.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"five"</span>,</span><br><span class="line">    img: <span class="string">"img/five.jpg"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"ten"</span>,</span><br><span class="line">    img: <span class="string">"img/ten.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"knight"</span>,</span><br><span class="line">    img: <span class="string">"img/knight.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"queen"</span>,</span><br><span class="line">    img: <span class="string">"img/queen.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"king"</span>,</span><br><span class="line">    img: <span class="string">"img/king.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"joker"</span>,</span><br><span class="line">    img: <span class="string">"img/joker.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"heart"</span>,</span><br><span class="line">    img: <span class="string">"img/heart3.png"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h2 id="使用迴圈獲取陣列，並在畫面顯示牌卡"><a href="#使用迴圈獲取陣列，並在畫面顯示牌卡" class="headerlink" title="使用迴圈獲取陣列，並在畫面顯示牌卡"></a>使用迴圈獲取陣列，並在畫面顯示牌卡</h2><p>接著要把牌卡顯示在畫面上，需先獲取放置牌卡的位置，先以 <code>Document.createElement()</code>方法建立 <code>section</code> 元素，再以<code>Element.setAttribute()</code>方法設定元素的 <code>class</code> 屬性名稱，最後將新增元素附加到 <code>DOM</code> 結構中。顯示圖片的重點是使用迴圈獲取陣列裡儲存的資料、為每一張卡片建立一個類別、名稱、屬性，最後再附加到剛建立的放圖片的位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> game = <span class="built_in">document</span>.getElementById(<span class="string">"game"</span>);</span><br><span class="line"><span class="keyword">const</span> grid = <span class="built_in">document</span>.createElement(<span class="string">"section"</span>);</span><br><span class="line">grid.setAttribute(<span class="string">"class"</span>, <span class="string">"grid"</span>);</span><br><span class="line">game.appendChild(grid);</span><br><span class="line"></span><br><span class="line">cardsArray.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> card = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  card.classList.add(<span class="string">"card"</span>);</span><br><span class="line">  card.dataset.name = item.name;</span><br><span class="line">  card.style.backgroundImage = <span class="string">`url(<span class="subst">$&#123;item.img&#125;</span>)`</span>;</span><br><span class="line">  grid.appendChild(card);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用-concat-讓每張圖片成對"><a href="#使用-concat-讓每張圖片成對" class="headerlink" title="使用 concat() 讓每張圖片成對"></a>使用 concat() 讓每張圖片成對</h2><p>接下來要使每種圖片都成偶數，這裡使用 <code>concat()</code> 方法，這個方法可以合併陣列，但不會改變現有的陣列，而是回傳一個新的陣列。<br>舉例來說：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>];</span><br><span class="line"><span class="built_in">console</span>.log(array1.concat(array2));</span><br><span class="line"><span class="comment">// Array ["a", "b", "c", "d", "e", "f"]</span></span><br></pre></td></tr></table></figure><h2 id="讓圖片隨機排列"><a href="#讓圖片隨機排列" class="headerlink" title="讓圖片隨機排列"></a>讓圖片隨機排列</h2><p>因此建立一個新的變數，並且以剛剛儲存陣列的變數為傳入方法的參數，再以<code>sort</code>與 <code>Math.random()</code>隨機排列陣列。<code>sort()</code> 方法會原地對一個陣列的所有元素進行排序，並回傳此陣列。<code>Math.random</code> 回傳 0~1 之間的隨機數字。最後修改剛剛迴圈要遍歷的對象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lvar gameGrid = cardsArray.concat(cardsArray).sort(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.5</span> - <span class="built_in">Math</span>.random();</span><br><span class="line">&#125;);</span><br><span class="line">gameGrid.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br></pre></td></tr></table></figure><h2 id="設定翻卡的監聽事件"><a href="#設定翻卡的監聽事件" class="headerlink" title="設定翻卡的監聽事件"></a>設定翻卡的監聽事件</h2><p>設定監聽事件，如果點擊的確實是卡片，就會翻面</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.selected</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(180deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> clicked = event.target;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (clicked.nodeName === <span class="string">"SECTION"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="限定翻面的卡片數"><a href="#限定翻面的卡片數" class="headerlink" title="限定翻面的卡片數"></a>限定翻面的卡片數</h2><p>卡片一次只能點選 2 張，因此設定一個計數器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">  count++;</span><br><span class="line">  clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="卡片配對條件"><a href="#卡片配對條件" class="headerlink" title="卡片配對條件"></a>卡片配對條件</h2><p>設定卡片配對條件，如果配對成功，就會從畫面隱藏。新增一個函數遍歷所有被點擊的卡片，如果配對成功就為卡片新增 class 屬性 <code>match</code>。條件是第一個點擊的卡片的名稱屬性要等於第二個點擊卡片的名稱屬性，如果相同，就呼叫 <code>match()</code>函數。並且不能同一張卡片的位置點擊 2 次。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.match</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> firstGuess = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> secondGuess = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">let</span> previousTarget = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> match = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> selected = <span class="built_in">document</span>.querySelectorAll(<span class="string">".selected"</span>);</span><br><span class="line">  selected.forEach(<span class="function"><span class="params">card</span> =&gt;</span> &#123;</span><br><span class="line">    card.classList.add(<span class="string">"match"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (clicked.nodeName === <span class="string">"SECTION"</span> || clicked === previousTarget) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (count &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">if</span> (count === <span class="number">1</span>) &#123;</span><br><span class="line">      firstGuess = clicked.dataset.name;</span><br><span class="line">      clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      secondGuess = clicked.dataset.name;</span><br><span class="line">      clicked.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (firstGuess !== <span class="string">""</span> &amp;&amp; secondGuess !== <span class="string">""</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (firstGuess === secondGuess) &#123;</span><br><span class="line">        match();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  previousTarget = clicked;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定一個可以重新開始遊戲的函數"><a href="#設定一個可以重新開始遊戲的函數" class="headerlink" title="設定一個可以重新開始遊戲的函數"></a>設定一個可以重新開始遊戲的函數</h2><p>點擊卡片 2 次後，猜錯或猜對都可以重新開始選擇。設定一個可以讓我們再次遊戲的函數。也就是以迴圈檢查所有已被選擇的卡片，並且移除他們的目前的選擇樣式。在條件句裡面呼叫這個函數。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> resetGuesses = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  firstGuess = <span class="string">""</span>;</span><br><span class="line">  secondGuess = <span class="string">""</span>;</span><br><span class="line">  count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> selected = <span class="built_in">document</span>.querySelectorAll(<span class="string">".selected"</span>);</span><br><span class="line">  selected.forEach(<span class="function"><span class="params">card</span> =&gt;</span> &#123;</span><br><span class="line">    card.classList.remove(<span class="string">"selected"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  <span class="keyword">if</span> (firstGuess === secondGuess) &#123;</span><br><span class="line">  match();</span><br><span class="line">  resetGuesses();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    resetGuesses();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="將點擊狀態添加在父節點"><a href="#將點擊狀態添加在父節點" class="headerlink" title="將點擊狀態添加在父節點"></a>將點擊狀態添加在父節點</h2><p>目前卡片都還只有一面，我們現在新增了一個 <code>front</code> 與 <code>back</code> 標籤，但是卡片的名稱屬性還是屬於它們的父層，所以要修改一下使點擊時的選擇狀態仍是添加在被點擊者的父層。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">gameGrid.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> card = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  card.classList.add(<span class="string">"card"</span>);</span><br><span class="line">  card.dataset.name = item.name;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卡片正面</span></span><br><span class="line">  <span class="keyword">const</span> front = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  front.classList.add(<span class="string">"front"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 卡片背面</span></span><br><span class="line">  <span class="keyword">const</span> back = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">  back.classList.add(<span class="string">"back"</span>);</span><br><span class="line">  back.style.backgroundImage = <span class="string">`url(<span class="subst">$&#123;item.img&#125;</span>)`</span>;</span><br><span class="line"></span><br><span class="line">  grid.appendChild(card);</span><br><span class="line">  card.appendChild(front);</span><br><span class="line">  card.appendChild(back);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">grid.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (count === <span class="number">1</span>) &#123;</span><br><span class="line">    firstGuess = clicked.parentNode.dataset.name;</span><br><span class="line">    <span class="built_in">console</span>.log(firstGuess);</span><br><span class="line">    clicked.parentNode.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    secondGuess = clicked.parentNode.dataset.name;</span><br><span class="line">    <span class="built_in">console</span>.log(secondGuess);</span><br><span class="line">    clicked.parentNode.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定隱藏背面"><a href="#設定隱藏背面" class="headerlink" title="設定隱藏背面"></a>設定隱藏背面</h2><p>最後設定翻面的時候，另一面不可見</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.back</span>,</span><br><span class="line"><span class="selector-class">.front</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 牌卡記憶遊戲 - &lt;a href=&quot;https://chiangyuchi.github.i
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 預算計算器</title>
    <link href="http://yoursite.com/2019/08/15/2019-08-15/"/>
    <id>http://yoursite.com/2019/08/15/2019-08-15/</id>
    <published>2019-08-14T16:00:00.000Z</published>
    <updated>2019-11-10T14:10:20.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 預算控制器- <a href="https://chiangyuchi.github.io/budgetapp/" target="_blank" rel="noopener">Demo</a></p><h1 id="1-Introduction-介紹"><a href="#1-Introduction-介紹" class="headerlink" title="1. Introduction 介紹"></a>1. Introduction 介紹</h1><p>這是 Udemy 上的課程的一個練習，這個項目將達到以下目標</p><p><img src="https://i.imgur.com/FuAgkaM.jpg" alt></p><ul><li>程式碼撰寫將運用關注點分離、閉包、IIFE、封裝…等概念。使用閉包及 IIFE 創件模塊模式，能確保某些數據只能在模塊內被使用，避免數據被覆蓋。確保程式碼的安全性。</li><li>取得輸入欄位數據</li><li>添加項目到預算控制器</li><li>添加項目到使用者介面</li><li>計算預算</li><li>把預算放到使用者介面</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="設置事件監聽"><a href="#設置事件監聽" class="headerlink" title="設置事件監聽"></a>設置事件監聽</h2><p>首先使用 <code>IIFE</code> 建立三塊功能模組。<code>IIFE</code> 全名為 <code>Immediately Invoked Functions Expressions</code> ，指的是可以立即執行的 Functions Expressions 函式表示式，中文多譯為立即(執行)函式。若要傳值進去可以加參數在最後面的()</p><p>建立好模組後，因為有輸入後鍵盤確認及滑鼠點擊，因此有兩個監聽項目，為了不重複撰寫同樣的功能，所以這兩個監聽事件調用同一個總控制器內部的自定義函數。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//預算控制器</span></span><br><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)();</span><br><span class="line"><span class="comment">//UI 控制器</span></span><br><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)();</span><br><span class="line"><span class="comment">//總控制器</span></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1. 獲取輸入框裡的資料</span></span><br><span class="line">    <span class="comment">//2. 把項目加到預算控制器</span></span><br><span class="line">    <span class="comment">//3. 把項目加到 UI</span></span><br><span class="line">    add item to the UI</span><br><span class="line">    <span class="comment">//4. 計算預算</span></span><br><span class="line">    <span class="comment">//5. 把預算呈現在 UI</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"it works"</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".add__btn"</span>).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">"keypress"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.keyCode === <span class="number">13</span> || which.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">      ctrlAddItem();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="獲取輸入數據"><a href="#獲取輸入數據" class="headerlink" title="獲取輸入數據"></a>獲取輸入數據</h2><p>接下來，我們要使來自不同 HTML 類型的數據可以輸入之後，在應用程式內被使用。這個項目的邏輯是：由 APP Controller 來控制其他模組的行動；所以 我們在 UI Controller 編寫的方法及 Budget Controller 裡面獲取的數據，最後再由 Global APP 調用這些方法。以下是進入 UI 控制器獲取數據的方法，這個功能要能被其他的控制器使用，所以不能是私有函數。由於 IIFE 將會立即執行，所以回傳的物件，將被分配給 UIcontroller，所定義的變數及函數，在函數中將停留在閉包狀態。所以即使這個函數已經回傳，將從中回傳的物件，將有權限訪問這些私有變數、方法及函數。我們要在使用者介面獲取的數據有三項。如何讓控制器同時調用這個方法與三個值？因此與其使用三個獨立的變數，解決方法是回傳一個物件，裡面有三種屬性。</p><ol><li>資料類型</li><li>資料內容描述</li><li>資料的值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getInput: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> type = <span class="built_in">document</span>.querySelector(<span class="string">".add__type"</span>).value;</span><br><span class="line">      <span class="keyword">var</span> description = <span class="built_in">document</span>.querySelector(<span class="string">".add__description"</span>).value;</span><br><span class="line">      <span class="keyword">var</span> value = <span class="built_in">document</span>.querySelector(<span class="string">".add__value"</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>並且在控制器調用這個方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input = UICtrl.getInput();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>但是假設我們在用戶介面修改，像是修改 class 名稱，這些會很耗時，因為很多地方都需要更改。所以我們把原先放在 UI 控制器的那些類別選擇器，直接新增一個物件來管理。所以我們直接而且別忘了要把這些 DOMstrings 公開，讓它們可被調用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    inputType: <span class="string">".add__type"</span>,</span><br><span class="line">    inputDescription: <span class="string">".add__description"</span>,</span><br><span class="line">    inputValue: <span class="string">".add__value"</span>,</span><br><span class="line">    inputBtn: <span class="string">".add__btn"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getDOMstrings: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DOMstrings;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">  <span class="built_in">document</span>.querySelector(DOM.inputBtn).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="建立初始化函數"><a href="#建立初始化函數" class="headerlink" title="建立初始化函數"></a>建立初始化函數</h2><p>建立一個初始化函數讓程式碼結構更優化。為什麼要設置初始化函式？因為要更便於管理四散的事件監聽，而且要讓它能被公開使用，我們調用 init 函數的時候，就會啟動事件監聽</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">    <span class="built_in">document</span>.querySelector(DOM.inputBtn).addEventListener(<span class="string">"click"</span>, ctrlAddItem);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"keypress"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (event.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">        ctrlAddItem();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"start"</span>);</span><br><span class="line">      setupEventListeners();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br><span class="line"></span><br><span class="line">controller.init();</span><br></pre></td></tr></table></figure><h2 id="將數據儲存到-budget-controller"><a href="#將數據儲存到-budget-controller" class="headerlink" title="將數據儲存到 budget controller"></a>將數據儲存到 budget controller</h2><p>首先建立收入與支出的數據模型，每個項目裡面包含 ID、值與描述。但因為有很多不同的項目，為了能夠區分不同的收入跟支出，所以它們要有獨一的 ID，所以物件是儲存這些數據的方式。如何創建複數物件？使用函數建構式。</p><p>根據網路上的說明：<br><a href="。https://pjchender.blogspot.com/2016/06/javascriptfunction-constructorprototype.html">。https://pjchender.blogspot.com/2016/06/javascriptfunction-constructorprototype.html</a></p><p>在 JavaScript 中的函式其實也是一種物件，其中包含一些屬性像是該函式的名稱（Name）和該函式的內容（Code），但其實 function 這裡面還有一個屬性，這個屬性稱做 prototype，這個屬性會以空物件的型式呈現</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> Expense = <span class="function"><span class="keyword">function</span>(<span class="params">id, description, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.description = description;</span><br><span class="line">    <span class="keyword">this</span>.value = value;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> Income = <span class="function"><span class="keyword">function</span>(<span class="params">id, description, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.description = description;</span><br><span class="line">    <span class="keyword">this</span>.value = value;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = &#123;</span><br><span class="line">    allItems: &#123;</span><br><span class="line">      exp: [],</span><br><span class="line">      inc: []</span><br><span class="line">    &#125;,</span><br><span class="line">    totals: &#123;</span><br><span class="line">      exp: <span class="number">0</span>,</span><br><span class="line">      inc: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="使用用戶輸入數據創建新項目"><a href="#使用用戶輸入數據創建新項目" class="headerlink" title="使用用戶輸入數據創建新項目"></a>使用用戶輸入數據創建新項目</h2><p>接下來使用用戶數據在預算控制器數據結構中創建新項目，重點是：如何避免資料結構的衝突？為什麼及如何把數據從一個模組傳到另一個模組？</p><p>首先先在預算控制器建立一個公共方法，讓其他模組可以向數據結構添加新項目。如果調用此方法創建新項目，首先要知道類型、描述以及值。使用不同的名稱減少混淆</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addItem: <span class="function"><span class="keyword">function</span>(<span class="params">type, des, val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> newItem, ID;</span><br><span class="line">      <span class="comment">// [1 2 3 4 5], next ID =6;</span></span><br><span class="line">      <span class="comment">// [1 2 4 6 8], next ID =9;</span></span><br><span class="line">      <span class="comment">// ID = last ID+1;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//建立新 ID</span></span><br><span class="line">      <span class="keyword">if</span> (data.allItems[type].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ID = data.allItems[type][data.allItems[type].length - <span class="number">1</span>].id + <span class="number">1</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ID = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 以類型建立新項目</span></span><br><span class="line">      <span class="keyword">if</span> (type === <span class="string">"exp"</span>) &#123;</span><br><span class="line">        newItem = <span class="keyword">new</span> Expense(ID, des, val);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"inc"</span>) &#123;</span><br><span class="line">        newItem = <span class="keyword">new</span> Income(ID, des, val);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//把項目推到資料結構</span></span><br><span class="line">      data.allItems[type].push(newItem);</span><br><span class="line">      <span class="keyword">return</span> newItem;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line">    newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(input);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="向用戶介面添加項目"><a href="#向用戶介面添加項目" class="headerlink" title="向用戶介面添加項目"></a>向用戶介面添加項目</h2><p>現在要把 HTML 加進 DOM 當中、更換字串、使用 insertAdjacentHTML 方法操作 DOM;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    incomeContainer: <span class="string">".income__list"</span>,</span><br><span class="line">    expensesContainer: <span class="string">".expenses__list"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addListItem: <span class="function"><span class="keyword">function</span>(<span class="params">obj, type</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> html, newHtml, element;</span><br><span class="line">      <span class="keyword">if</span> (type === <span class="string">"inc"</span>) &#123;</span><br><span class="line">        element = DOMstrings.incomeContainer;</span><br><span class="line">        html =</span><br><span class="line">          <span class="string">'&lt;div class="item clearfix" id="income-%id%"&gt;&lt;div class="item__description"&gt;%description%&lt;/div&gt;&lt;div class="right clearfix"&gt;&lt;div class="item__value"&gt;%value%&lt;/div&gt;&lt;div class="item__delete"&gt; &lt;button class="item__delete--btn"&gt;&lt;i class="ion-ios-close-outline"&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"exp"</span>) &#123;</span><br><span class="line">        element = DOMstrings.expensesContainer;</span><br><span class="line">        html =</span><br><span class="line">          <span class="string">'&lt;div class="item clearfix" id="expense-%id%"&gt;&lt;div class="item__description"&gt;%description%&lt;/div&gt;&lt;div class="right clearfix"&gt;&lt;div class="item__value"&gt;%value%&lt;/div&gt;&lt;div class="item__percentage"&gt;21%&lt;/div&gt;&lt;div class="item__delete"&gt;&lt;button class="item__delete--btn"&gt;&lt;i class="ion-ios-close-outline"&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      newHtml = html.replace(<span class="string">"%id%"</span>, obj.id);</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%description%"</span>, obj.description);</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%value%"</span>, obj.value);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(element).insertAdjacentHTML(<span class="string">"beforeend"</span>, newHtml);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line">    newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">    UICtrl.addListItem(newItem, input.type);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="清除輸入項目"><a href="#清除輸入項目" class="headerlink" title="清除輸入項目"></a>清除輸入項目</h2><p>現在要在點擊輸入後，可以清空輸入欄位的值，我們使用 querySelectorAll 選擇器。但是 querySelectorAll 回傳的並非陣列，而是一組類似陣列的列表 (NodeList)，所以要將列表轉為陣列。這裡我們使用 prototype 取得 slice 函式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    clearFields: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields, fieldsArr;</span><br><span class="line">      fields = <span class="built_in">document</span>.querySelectorAll(</span><br><span class="line">        DOMstrings.inputDescription + <span class="string">","</span> + DOMstrings.inputValue</span><br><span class="line">      );</span><br><span class="line">      fieldsArr = <span class="built_in">Array</span>.prototype.slice.call(fields);</span><br><span class="line">      fieldsArr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">current, index, array</span>) </span>&#123;</span><br><span class="line">        current.value = <span class="string">""</span>;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      fieldsArr[<span class="number">0</span>].focus();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    UICtrl.clearFields();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="更新控制器的小修正"><a href="#更新控制器的小修正" class="headerlink" title="更新控制器的小修正"></a>更新控制器的小修正</h2><p>接著將輸入的字串轉成數字，並且限制輸入類型的錯誤。目前輸入欄位還不是數字：</p><p><img src="https://i.imgur.com/HTJpfjz.png" alt></p><p>回到使用者介面，我們一開始獲取輸入資料的地方，使用 <code>parseFloat</code> 把字串轉成數字。分析函數 <code>parseFloat</code>，會在給與字串作為參數時返回數值。parseFloat 的語句如下</p><pre><code>parseFloat(str)</code></pre><p>此處的 <code>parseFloat</code> 會分析他自己的參數，字串 str，並試著返回浮點數。如果遇到正負符號 (+ 或 -)、數字 (0-9)、小數點、指數以外的字元，他就會返回在此之前的數值，並忽略那些字元。如果連第一個字元也不可以轉換為數字，就會返回〝NaN〞（不是數字）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    inputType: <span class="string">".add__type"</span>,</span><br><span class="line">    inputDescription: <span class="string">".add__description"</span>,</span><br><span class="line">    inputValue: <span class="string">".add__value"</span>,</span><br><span class="line">    inputBtn: <span class="string">".add__btn"</span>,</span><br><span class="line">    incomeContainer: <span class="string">".income__list"</span>,</span><br><span class="line">    expensesContainer: <span class="string">".expenses__list"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getInput: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// var type = document.querySelector(".add__type").value;</span></span><br><span class="line">      <span class="comment">// var description = document.querySelector(".add__description").value;</span></span><br><span class="line">      <span class="comment">// var value = document.querySelector(".add__value").value;</span></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        type: <span class="built_in">document</span>.querySelector(DOMstrings.inputType).value, <span class="comment">//will be either inc or ex</span></span><br><span class="line">        description: <span class="built_in">document</span>.querySelector(DOMstrings.inputDescription).value,</span><br><span class="line">        value: <span class="built_in">parseFloat</span>(<span class="built_in">document</span>.querySelector(DOMstrings.inputValue).value)</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>另一個問題是避免輸入空白欄位、0，所以回到控制器設定一個條件句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    <span class="comment">//1.獲得輸入欄的資料</span></span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//2.把項目新增到 budget 控制器</span></span><br><span class="line">      newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">      <span class="comment">//3.把項目新增到 UI</span></span><br><span class="line">      UICtrl.addListItem(newItem, input.type);</span><br><span class="line">      <span class="comment">//4.清除輸入欄位</span></span><br><span class="line">      UICtrl.clearFields();</span><br><span class="line">      <span class="comment">//5.update budget</span></span><br><span class="line">      updateBudget();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(input);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="計算預算"><a href="#計算預算" class="headerlink" title="計算預算"></a>計算預算</h2><p>我們計算的收入與支出只需要是私有資料，現在要取得都儲存在 <code>allItems</code>的資料，循環遍歷取得所有值求和，並且將所得值重新存入 <code>allItems</code>。並且在原始數據結構裡面，新增儲存預算的結構，也就是接下來要將收入減去花費所剩下的預算。也要獲取我們花費的百分比。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> calculateTotal = <span class="function"><span class="keyword">function</span>(<span class="params">type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    data.allItems[type].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">current</span>) </span>&#123;</span><br><span class="line">      sum += current.value;</span><br><span class="line">      data.totals[type] = sum;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Loop 的原理</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">[200,100,100]</span></span><br><span class="line"><span class="comment">sum = 0+200</span></span><br><span class="line"><span class="comment">sum = 200+100</span></span><br><span class="line"><span class="comment">sum = 300+100 = 400</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = &#123;</span><br><span class="line">    allItems: &#123;</span><br><span class="line">      exp: [],</span><br><span class="line">      inc: []</span><br><span class="line">    &#125;,</span><br><span class="line">    totals: &#123;</span><br><span class="line">      exp: <span class="number">0</span>,</span><br><span class="line">      inc: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    budget: <span class="number">0</span>,</span><br><span class="line">    percentage: <span class="number">-1</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    calculateBudget: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//calculate total income and expenses</span></span><br><span class="line">      calculateTotal(<span class="string">"exp"</span>);</span><br><span class="line">      calculateTotal(<span class="string">"inc"</span>);</span><br><span class="line">      <span class="comment">//calculate the budget:income-expenses</span></span><br><span class="line">      data.budget = data.totals.inc - data.totals.exp;</span><br><span class="line">      <span class="comment">//calculate the percentage</span></span><br><span class="line">      data.percentage = <span class="built_in">Math</span>.round((data.totals.exp / data.totals.inc) * <span class="number">100</span>);</span><br><span class="line">      <span class="comment">// expenses = 100 income = 300, spent 33.3333% = 100/300=0.3333*100</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>回到全局控器使用這些方法，但我們還需要一種可以回傳預算的方法，讓它可以儲存在變數中，才能將預算傳遞並顯示在 UI</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updateBudget = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. Calculate the budget</span></span><br><span class="line">    budgetCtrl.calculateBudget();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. Return the budget</span></span><br><span class="line">    <span class="keyword">var</span> budget = budgetCtrl.getBudget();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. Display the budget on the UI</span></span><br><span class="line">    <span class="built_in">console</span>.log(budget);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> input, newItem;</span><br><span class="line">    <span class="comment">//1.獲得輸入欄的資料</span></span><br><span class="line">    input = UICtrl.getInput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//2.把項目新增到 budget 控制器</span></span><br><span class="line">      newItem = budgetCtrl.addItem(input.type, input.description, input.value);</span><br><span class="line">      <span class="comment">//3.把項目新增到 UI</span></span><br><span class="line">      UICtrl.addListItem(newItem, input.type);</span><br><span class="line">      <span class="comment">//4.清除輸入欄位</span></span><br><span class="line">      UICtrl.clearFields();</span><br><span class="line">      <span class="comment">//5.update budget</span></span><br><span class="line">      updateBudget();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="更新使用者介面控制器"><a href="#更新使用者介面控制器" class="headerlink" title="更新使用者介面控制器"></a>更新使用者介面控制器</h2><p>這裡我們要把預算、收入、支出、百分比都呈現在畫面上。回到 UI 控制器，傳入的參數是資料結構裡的物件。在呈現百分比的地方設定一個條件句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    budgetLabel: <span class="string">".budget__value"</span>,</span><br><span class="line">    incomeLabel: <span class="string">".budget__income--value"</span>,</span><br><span class="line">    expensesLabel: <span class="string">".budget__expenses--value"</span>,</span><br><span class="line">    percentageLabel: <span class="string">".budget__expenses--percentage"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayBudget: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.budgetLabel).textContent = obj.budget;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.incomeLabel).textContent = obj.totalInc;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.expensesLabel).textContent =</span><br><span class="line">        obj.totalExp;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (obj.percentage &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(DOMstrings.percentageLabel).textContent =</span><br><span class="line">          obj.percentage + <span class="string">"%"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(DOMstrings.percentageLabel).textContent = <span class="string">"---"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updateBudget = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    UICtrl.displayBudget(budget);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>每次重載畫面的時候，別忘了要清除之前輸入的資料，所以要設定初始值歸 0</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"start"</span>);</span><br><span class="line">      UICtrl.displayBudget(&#123;</span><br><span class="line">        budget: <span class="number">0</span>,</span><br><span class="line">        totalInc: <span class="number">0</span>,</span><br><span class="line">        totalExp: <span class="number">0</span>,</span><br><span class="line">        percentage: <span class="number">-1</span></span><br><span class="line">      &#125;);</span><br><span class="line">      setupEventListeners();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="事件委派"><a href="#事件委派" class="headerlink" title="事件委派"></a>事件委派</h2><p>這個部分將會用到事件委派（Event Delegation） 概念。事件委派的特性有以下幾點：是一種受惠於 Event Bubbling 而能減少監聽器數目的方法。</p><p>事件委派的使用時機有兩個：</p><ol><li>父元素底下有好幾個我們想使用的子元素，這時不必在所有子元素使用事件處理程序，我們把事件委派添加到父元素，例如將 <code>click</code>事件加到父元素，<br>藉由 <code>Event Bubbling</code> 然後決定事件要傳遞在哪個子元素觸發，而非綁定在子元素上。優點是可減少監聽數目。缺點是由於需要判斷是哪些子元素節點是我們有興趣觸發的項目，因此需額外寫程式碼判斷。</li><li>當我們想要把事件處理程序附加到元素上時，但是載入畫面的時候，還沒有出現在 DOM 上面</li></ol><p>首先先在父元素上綁定事件，並建立刪除功能。由於事件冒泡發生了，所以父元素藉由事件的目標屬性（target property) 知道它的來源，事件冒泡觸發的地點：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> DOM = UICtrl.getDOMstrings();</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .querySelector(DOM.container)</span><br><span class="line">      .addEventListener(<span class="string">"click"</span>, ctrlDeleteItem);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      splitID = itemID.split(<span class="string">"-"</span>);</span><br><span class="line">      type = splitID[<span class="number">0</span>];</span><br><span class="line">      ID = splitID[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><p>但在我們點擊的時候，儘管我們點擊圖示，但我們要刪除的是包含子元素及它的父元素的整個 HTML 結構，所以這裡使用 DOM 遍歷同時使用 <code>split</code>，獲取父元素的 ID。在使用 <code>split</code>拆分的時候， JavaScript 會把拆分的結果從其原始類型轉換為物件。像這樣：</p><p><img src="https://i.imgur.com/oFGwqbM.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      splitID = itemID.split(<span class="string">"-"</span>);</span><br><span class="line">      type = splitID[<span class="number">0</span>];</span><br><span class="line">      ID = <span class="built_in">parseInt</span>(splitID[<span class="number">1</span>]); <span class="comment">//字串轉為數字</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(budgetController, UIcontroller);</span><br></pre></td></tr></table></figure><h2 id="從預算控制器刪除一個項目"><a href="#從預算控制器刪除一個項目" class="headerlink" title="從預算控制器刪除一個項目"></a>從預算控制器刪除一個項目</h2><p>如果要刪除一個項目，應用程式控制器要傳遞給刪除方法的參數包括類型、ID。<code>indexOf</code>方法回傳元素的索引號。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    deleteItem: <span class="function"><span class="keyword">function</span>(<span class="params">type, id</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> ids, index;</span><br><span class="line">      <span class="comment">//ids =[1,2,4,5,6]</span></span><br><span class="line">      <span class="comment">//index = 3</span></span><br><span class="line">      ids = data.allItems[type].map(<span class="function"><span class="keyword">function</span>(<span class="params">current</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> current.id;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      index = ids.indexOf(id);</span><br><span class="line">      <span class="keyword">if</span> (index !== <span class="number">-1</span>) &#123;<span class="comment">//索引不是負值的時候執行</span></span><br><span class="line">        data.allItems[type].splice(index, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">        <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">            <span class="comment">//inc-1</span></span><br><span class="line">            splitID = itemID.split(<span class="string">'-'</span>);</span><br><span class="line">            type = splitID[<span class="number">0</span>];</span><br><span class="line">            ID = <span class="built_in">parseInt</span>(splitID[<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//delete item from data structure</span></span><br><span class="line">            budgetCtrl.deleteItem(type, ID);</span><br><span class="line">            <span class="comment">//delete item from UI</span></span><br><span class="line">            <span class="comment">//update and show the new budget</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="刪除畫面上的項目，並且更新預算"><a href="#刪除畫面上的項目，並且更新預算" class="headerlink" title="刪除畫面上的項目，並且更新預算"></a>刪除畫面上的項目，並且更新預算</h2><p>我們要先移動到該元素的父層再移除其子節點</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">   deleteListItem: <span class="function"><span class="keyword">function</span> (<span class="params">selectorId</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> el = <span class="built_in">document</span>.getElementById(selectorId);</span><br><span class="line">            el.parentNode.removeChild(el);</span><br><span class="line">        &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">        <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//delete item from UI</span></span><br><span class="line">            UICtrl.deleteListItem(itemID);</span><br><span class="line">            <span class="comment">//update and show the new budget</span></span><br><span class="line">             updateBudget();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="更新百分比"><a href="#更新百分比" class="headerlink" title="更新百分比"></a>更新百分比</h2><p>透過在函數建構式裡添加新方法，同時也會將它新增到它的原型當中，所有透過此費用原型創建的物件，因為原型鏈的關係，都會繼承這個方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> budgetController = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  Expense.prototype.calcPercentage = <span class="function"><span class="keyword">function</span>(<span class="params">totalIncome</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (totalIncome &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.percentage = <span class="built_in">Math</span>.round((<span class="keyword">this</span>.value / totalIncome) * <span class="number">100</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.percentage = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Expense.prototype.getPercentage = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.percentage;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    calculatePercentages: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">/*a=40</span></span><br><span class="line"><span class="comment">              b=10</span></span><br><span class="line"><span class="comment">              c=20</span></span><br><span class="line"><span class="comment">              income=100</span></span><br><span class="line"><span class="comment">              a=40/100=40%</span></span><br><span class="line"><span class="comment">              b=10/100=10%</span></span><br><span class="line"><span class="comment">              c=20/100=20% */</span></span><br><span class="line">      data.allItems.exp.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        cur.calcPercentage(data.totals.inc);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    getPercentages: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> allPerc = data.allItems.exp.map(<span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cur.getPercentage();</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> allPerc;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updatePercentage = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1. Calculate the percentage</span></span><br><span class="line">    budgetCtrl.calculatePercentages();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. Read the percentage from the budget controller</span></span><br><span class="line">    <span class="keyword">var</span> percentage = budgetCtrl.getPercentages();</span><br><span class="line">    <span class="comment">//3. Update the UI withe the new percentage</span></span><br><span class="line">    <span class="built_in">console</span>.log(percentage);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlAddItem = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input.description !== <span class="string">""</span> &amp;&amp; !<span class="built_in">isNaN</span>(input.value) &amp;&amp; input.value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//6. calculate and update percentage</span></span><br><span class="line">      updatePercentage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> ctrlDeleteItem = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemID, splitID, type, ID;</span><br><span class="line">    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;</span><br><span class="line">    <span class="keyword">if</span> (itemID) &#123;</span><br><span class="line">      <span class="comment">// calculate and update percentage</span></span><br><span class="line">      updatePercentage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="把百分比顯示在-UI"><a href="#把百分比顯示在-UI" class="headerlink" title="把百分比顯示在 UI"></a>把百分比顯示在 UI</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> DOMstrings = &#123;</span><br><span class="line">    expensesPercLabel: <span class="string">".item__percentage"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayPercentages: <span class="function"><span class="keyword">function</span>(<span class="params">percentage</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields = <span class="built_in">document</span>.querySelectorAll(DOMstrings.expensesPercLabel);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> nodeListForEach = <span class="function"><span class="keyword">function</span>(<span class="params">list, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">          callback(list[i], [i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      nodeListForEach(fields, <span class="function"><span class="keyword">function</span>(<span class="params">current, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (percentage[index] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          current.textContent = percentage[index] + <span class="string">"%"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          current.textContent = <span class="string">"---"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> updatePercentages = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="title">UICtrl</span>.<span class="title">displayPercentages</span>(<span class="params">percentages</span>);</span></span><br><span class="line"><span class="function">  &#125;;</span></span><br><span class="line"><span class="function">&#125;)(<span class="params">budgetController, UIcontroller</span>);</span></span><br></pre></td></tr></table></figure><h2 id="格式化數字"><a href="#格式化數字" class="headerlink" title="格式化數字"></a>格式化數字</h2><p>接著在 UI 控制器添加方法，接下來每次在銀幕上顯示數字，就會調用這個方法，然後把數字輸入該方法，然後輸出格式化的數字。使用<code>substr()</code>取得我們要放入千分號的位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> formateNumber = <span class="function"><span class="keyword">function</span>(<span class="params">num, type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> numSplit, int, dec, type;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        數字前有＋或-</span></span><br><span class="line"><span class="comment">        小數點後正好2位數</span></span><br><span class="line"><span class="comment">        逗號分隔千位數</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    num = <span class="built_in">Math</span>.abs(num);</span><br><span class="line">    num = num.toFixed(<span class="number">2</span>);</span><br><span class="line">    numSplit = num.split(<span class="string">"."</span>);</span><br><span class="line">    int = numSplit[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (int.length &gt; <span class="number">3</span>) &#123;</span><br><span class="line">      int = int.substr(<span class="number">0</span>, int.length - <span class="number">3</span>) + <span class="string">","</span> + int.substr(int.length - <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dec = numSplit[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (type === <span class="string">"exp"</span> ? <span class="string">"-"</span> : <span class="string">"+"</span>) + <span class="string">""</span> + int + <span class="string">"."</span> + dec;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    addListItem: <span class="function"><span class="keyword">function</span>(<span class="params">obj, type</span>) </span>&#123;</span><br><span class="line">      newHtml = newHtml.replace(<span class="string">"%value%"</span>, formateNumber(obj.value, type));</span><br><span class="line">    &#125;,</span><br><span class="line">    displayBudget: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> type;</span><br><span class="line">      obj.budget &gt; <span class="number">0</span> ? (type = <span class="string">"inc"</span>) : (type = <span class="string">"exp"</span>);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.budgetLabel</span><br><span class="line">      ).textContent = formateNumber(obj.budget, type);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.incomeLabel</span><br><span class="line">      ).textContent = formateNumber(obj.totalInc, <span class="string">"inc"</span>);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(</span><br><span class="line">        DOMstrings.expensesLabel</span><br><span class="line">      ).textContent = formateNumber(obj.totalExp, <span class="string">"exp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="取得日期"><a href="#取得日期" class="headerlink" title="取得日期"></a>取得日期</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    displayMonth: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> now, month, year;</span><br><span class="line">      now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">      months = [</span><br><span class="line">        <span class="string">"January"</span>,</span><br><span class="line">        <span class="string">"February"</span>,</span><br><span class="line">        <span class="string">"March"</span>,</span><br><span class="line">        <span class="string">"April"</span>,</span><br><span class="line">        <span class="string">"May"</span>,</span><br><span class="line">        <span class="string">"June"</span>,</span><br><span class="line">        <span class="string">"July"</span>,</span><br><span class="line">        <span class="string">"August"</span>,</span><br><span class="line">        <span class="string">"September"</span>,</span><br><span class="line">        <span class="string">"October"</span>,</span><br><span class="line">        <span class="string">"November"</span>,</span><br><span class="line">        <span class="string">"December"</span></span><br><span class="line">      ];</span><br><span class="line">      month = now.getMonth();</span><br><span class="line">      year = now.getFullYear();</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.dateLabel).textContent =</span><br><span class="line">        months[month] + <span class="string">" "</span> + year;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      UICtrl.displayMonth();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="觸發-change-事件改變輸入欄位顏色"><a href="#觸發-change-事件改變輸入欄位顏色" class="headerlink" title="觸發 change 事件改變輸入欄位顏色"></a>觸發 change 事件改變輸入欄位顏色</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UIcontroller = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> nodeListForEach = <span class="function"><span class="keyword">function</span>(<span class="params">list, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">      callback(list[i], [i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    changeType: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> fields = <span class="built_in">document</span>.querySelectorAll(</span><br><span class="line">        DOMstrings.inputType +</span><br><span class="line">          <span class="string">","</span> +</span><br><span class="line">          DOMstrings.inputDescription +</span><br><span class="line">          <span class="string">","</span> +</span><br><span class="line">          DOMstrings.inputValue</span><br><span class="line">      );</span><br><span class="line">      nodeListForEach(fields, <span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">        cur.classList.toggle(<span class="string">"red-focus"</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(DOMstrings.inputBtn).classList.toggle(<span class="string">"red"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">var</span> controller = (<span class="function"><span class="keyword">function</span>(<span class="params">budgetCtrl, UICtrl</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> setupEventListeners = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .querySelector(DOM.inputType)</span><br><span class="line">      .addEventListener(<span class="string">"change"</span>, UICtrl.changeType);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 預算控制器- &lt;a href=&quot;https://chiangyuchi.github.io/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 彈跳視窗</title>
    <link href="http://yoursite.com/2019/08/12/2019-08-12/"/>
    <id>http://yoursite.com/2019/08/12/2019-08-12/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2020-07-24T04:28:11.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - Rolling Dice Game - <a href="https://chiangyuchi.github.io/rolldice/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是 Udemy 上的課程的一個小遊戲，操作 click 事件，並搭配判斷式切換玩家，以及新增 class，實現擲骰子遊戲。</p><p><img src="https://i.imgur.com/YbiR3M7.jpg" alt></p><ul><li>以判斷式當擲出 1，則切換玩家，並且此輪不累積分數</li><li>當連續擲出 2 個 6 的時候，判定兩方誰目前累積的所有分數歸零</li><li>可儲存該輪暫存分數到總分裡</li><li>需判定誰達到勝利標準</li><li>可由玩家輸入自行決定最後的勝利標準</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="建立初始化的函數"><a href="#建立初始化的函數" class="headerlink" title="建立初始化的函數"></a>建立初始化的函數</h2><p>宣告儲存累積總分、每一輪獲得的分數、該輪玩家、啟動遊戲的變數，並且在載入畫面的時候，就呼叫一個初始化的函數，裡面會將累積總分、每一輪獲得的分數、遊戲啟動狀態、骰子是否顯示、預設玩家…都恢復到初始值。</p><p>這樣的寫法，可促進程式碼的簡潔度，只要在需要的時候，如展開新遊戲的時候，在該函式內再度呼叫初始化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scores, roundScore, activePlayer, gamePlaying;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  scores = [<span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  activePlayer = <span class="number">0</span>;</span><br><span class="line">  gamePlaying = <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-0"</span>).textContent = <span class="string">"Player 1"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-1"</span>).textContent = <span class="string">"Player 2"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.add(<span class="string">"active"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="遊戲啟動後用隨機數字調用骰子圖案"><a href="#遊戲啟動後用隨機數字調用骰子圖案" class="headerlink" title="遊戲啟動後用隨機數字調用骰子圖案"></a>遊戲啟動後用隨機數字調用骰子圖案</h2><p>遊戲的進行，主要都是由 <code>if</code>、<code>else if</code>、<code>else</code> 來判斷。觸發 click 事件後，先判定遊戲啟動，再產生隨機數字，並且將產生的隨機數字儲存在宣告在判斷式當中的變數裡面，依據儲存的數字，調用要顯示在畫面上的骰子圖案。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-roll"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    <span class="keyword">var</span> dice = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">6</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> diceDOM = <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>);</span><br><span class="line">    diceDOM.style.display = <span class="string">"block"</span>;</span><br><span class="line">    diceDOM.src = <span class="string">"dice-"</span> + dice + <span class="string">".png"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定遊戲規則"><a href="#設定遊戲規則" class="headerlink" title="設定遊戲規則"></a>設定遊戲規則</h2><p>這裡加入兩個遊戲規則：第一個規則、如果連續擲出 2 個 6，則目前累積的總分，以及該輪的暫存分數都歸 0。所以要設定儲存前一個骰子的變數。<code>lastDice</code>。<img src="https://i.imgur.com/vbWIyxZ.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dice === <span class="number">6</span> &amp;&amp; lastDice === <span class="number">6</span>) &#123;</span><br><span class="line">  scores[activePlayer] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent = <span class="string">"0"</span>;</span><br><span class="line">  nextPlayer();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lastDice = dice;</span><br></pre></td></tr></table></figure><p>第二個規則、如果擲出 1，該輪暫存分數不能計分，會直接跳到下一個玩家。<br><img src="https://i.imgur.com/jU47Md2.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dice !== <span class="number">1</span>) &#123;</span><br><span class="line">            roundScore += dice;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">'#current-'</span> + activePlayer).textContent = roundScore;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            nextPlayer();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="切換玩家的方式"><a href="#切換玩家的方式" class="headerlink" title="切換玩家的方式"></a>切換玩家的方式</h2><p>使用 ternary operator 及 toggle 切換玩家</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextPlayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  activePlayer === <span class="number">0</span> ? (activePlayer = <span class="number">1</span>) : (activePlayer = <span class="number">0</span>);</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="累積分數"><a href="#累積分數" class="headerlink" title="累積分數"></a>累積分數</h2><p>玩家可擲無限多次骰子後，再選擇把分數儲存到總分裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-hold"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    scores[activePlayer] += roundScore;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent =</span><br><span class="line">      scores[activePlayer];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定勝利分數"><a href="#設定勝利分數" class="headerlink" title="設定勝利分數"></a>設定勝利分數</h2><p>預設勝利分數是 20 分，也可以由玩家自行決定勝利總分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.querySelector(<span class="string">".final-score"</span>).value;</span><br><span class="line"><span class="keyword">var</span> winningScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (input) &#123;</span><br><span class="line">  winningScore = input;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  winningScore = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (scores[activePlayer] &gt;= winningScore) &#123;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#name-"</span> + activePlayer).textContent = <span class="string">"Winner!"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.add(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  gamePlaying = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重新開始遊戲"><a href="#重新開始遊戲" class="headerlink" title="重新開始遊戲"></a>重新開始遊戲</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-new"</span>).addEventListener(<span class="string">"click"</span>, init);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - Rolling Dice Game - &lt;a href=&quot;https://chiangyuc
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 骰子遊戲</title>
    <link href="http://yoursite.com/2019/08/12/2019-08-13/"/>
    <id>http://yoursite.com/2019/08/12/2019-08-13/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2020-07-23T09:34:42.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - Rolling Dice Game - <a href="https://chiangyuchi.github.io/rolldice/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是 Udemy 上的課程的一個小遊戲，操作 click 事件，並搭配判斷式切換玩家，以及新增 class，實現擲骰子遊戲。</p><p><img src="https://i.imgur.com/YbiR3M7.jpg" alt></p><ul><li>以判斷式當擲出 1，則切換玩家，並且此輪不累積分數</li><li>當連續擲出 2 個 6 的時候，判定兩方誰目前累積的所有分數歸零</li><li>可儲存該輪暫存分數到總分裡</li><li>需判定誰達到勝利標準</li><li>可由玩家輸入自行決定最後的勝利標準</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="建立初始化的函數"><a href="#建立初始化的函數" class="headerlink" title="建立初始化的函數"></a>建立初始化的函數</h2><p>宣告儲存累積總分、每一輪獲得的分數、該輪玩家、啟動遊戲的變數，並且在載入畫面的時候，就呼叫一個初始化的函數，裡面會將累積總分、每一輪獲得的分數、遊戲啟動狀態、骰子是否顯示、預設玩家…都恢復到初始值。</p><p>這樣的寫法，可促進程式碼的簡潔度，只要在需要的時候，如展開新遊戲的時候，在該函式內再度呼叫初始化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scores, roundScore, activePlayer, gamePlaying;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  scores = [<span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  activePlayer = <span class="number">0</span>;</span><br><span class="line">  gamePlaying = <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"score-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-0"</span>).textContent = <span class="string">"Player 1"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"name-1"</span>).textContent = <span class="string">"Player 2"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.add(<span class="string">"active"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="遊戲啟動後用隨機數字調用骰子圖案"><a href="#遊戲啟動後用隨機數字調用骰子圖案" class="headerlink" title="遊戲啟動後用隨機數字調用骰子圖案"></a>遊戲啟動後用隨機數字調用骰子圖案</h2><p>遊戲的進行，主要都是由 <code>if</code>、<code>else if</code>、<code>else</code> 來判斷。觸發 click 事件後，先判定遊戲啟動，再產生隨機數字，並且將產生的隨機數字儲存在宣告在判斷式當中的變數裡面，依據儲存的數字，調用要顯示在畫面上的骰子圖案。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-roll"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    <span class="keyword">var</span> dice = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">6</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> diceDOM = <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>);</span><br><span class="line">    diceDOM.style.display = <span class="string">"block"</span>;</span><br><span class="line">    diceDOM.src = <span class="string">"dice-"</span> + dice + <span class="string">".png"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定遊戲規則"><a href="#設定遊戲規則" class="headerlink" title="設定遊戲規則"></a>設定遊戲規則</h2><p>這裡加入兩個遊戲規則：第一個規則、如果連續擲出 2 個 6，則目前累積的總分，以及該輪的暫存分數都歸 0。所以要設定儲存前一個骰子的變數。<code>lastDice</code>。<img src="https://i.imgur.com/vbWIyxZ.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dice === <span class="number">6</span> &amp;&amp; lastDice === <span class="number">6</span>) &#123;</span><br><span class="line">  scores[activePlayer] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent = <span class="string">"0"</span>;</span><br><span class="line">  nextPlayer();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lastDice = dice;</span><br></pre></td></tr></table></figure><p>第二個規則、如果擲出 1，該輪暫存分數不能計分，會直接跳到下一個玩家。<br><img src="https://i.imgur.com/jU47Md2.jpg" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dice !== <span class="number">1</span>) &#123;</span><br><span class="line">            roundScore += dice;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">'#current-'</span> + activePlayer).textContent = roundScore;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            nextPlayer();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="切換玩家的方式"><a href="#切換玩家的方式" class="headerlink" title="切換玩家的方式"></a>切換玩家的方式</h2><p>使用 ternary operator 及 toggle 切換玩家</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextPlayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  activePlayer === <span class="number">0</span> ? (activePlayer = <span class="number">1</span>) : (activePlayer = <span class="number">0</span>);</span><br><span class="line">  roundScore = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-0"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"current-1"</span>).textContent = <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-0-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".player-1-panel"</span>).classList.toggle(<span class="string">"active"</span>);</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="累積分數"><a href="#累積分數" class="headerlink" title="累積分數"></a>累積分數</h2><p>玩家可擲無限多次骰子後，再選擇把分數儲存到總分裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-hold"</span>).addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (gamePlaying) &#123;</span><br><span class="line">    scores[activePlayer] += roundScore;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">"#score-"</span> + activePlayer).textContent =</span><br><span class="line">      scores[activePlayer];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="設定勝利分數"><a href="#設定勝利分數" class="headerlink" title="設定勝利分數"></a>設定勝利分數</h2><p>預設勝利分數是 20 分，也可以由玩家自行決定勝利總分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.querySelector(<span class="string">".final-score"</span>).value;</span><br><span class="line"><span class="keyword">var</span> winningScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (input) &#123;</span><br><span class="line">  winningScore = input;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  winningScore = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (scores[activePlayer] &gt;= winningScore) &#123;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">"#name-"</span> + activePlayer).textContent = <span class="string">"Winner!"</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">".dice"</span>).style.display = <span class="string">"none"</span>;</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.add(<span class="string">"winner"</span>);</span><br><span class="line">  <span class="built_in">document</span></span><br><span class="line">    .querySelector(<span class="string">".player-"</span> + activePlayer + <span class="string">"-panel"</span>)</span><br><span class="line">    .classList.remove(<span class="string">"active"</span>);</span><br><span class="line">  gamePlaying = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重新開始遊戲"><a href="#重新開始遊戲" class="headerlink" title="重新開始遊戲"></a>重新開始遊戲</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">".btn-new"</span>).addEventListener(<span class="string">"click"</span>, init);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - Rolling Dice Game - &lt;a href=&quot;https://chiangyuc
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 九九乘法表</title>
    <link href="http://yoursite.com/2019/08/08/2019-08-08/"/>
    <id>http://yoursite.com/2019/08/08/2019-08-08/</id>
    <published>2019-08-07T16:00:00.000Z</published>
    <updated>2019-11-11T01:17:35.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 九九乘法表 - <a href="https://chiangyuchi.github.io/multiplication-chart/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是 六角學院的一個小挑戰，使用 JavaScript for 迴圈獲取九九乘法表所有內容。</p><p><img src="https://i.imgur.com/l5wfo8D.png" alt></p><ul><li>使用 for 迴圈獲取九九成法表全部內容</li><li>不能將數字直接寫在 HTML 上，必須用 JavaScript 渲染</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>這個練習，用到的是最基本的 <code>for Loop</code>、<code>createElement</code>、<code>setAttribute</code> 觀念。創造一個原本不在 HTML 結構裡的畫面。</p><h2 id="HTML-結構"><a href="#HTML-結構" class="headerlink" title="HTML 結構"></a>HTML 結構</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"mainTitle"</span>&gt;</span>九九乘法表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"secondTitle"</span>&gt;</span>MULTIPLICATION CHART<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用雙迴圈獲得相乘數字"><a href="#使用雙迴圈獲得相乘數字" class="headerlink" title="使用雙迴圈獲得相乘數字"></a>使用雙迴圈獲得相乘數字</h2><ul><li>使用雙迴圈獲得九九乘法表前後相乘的 2 個數字</li><li>以 <code>Document.createElement()</code> 方法可以依指定的標籤名稱（tagName）建立 HTML 元素，</li><li>以 <code>Element.setAttribute()</code>，設定元素的屬性值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">".wrap"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createChart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> box = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">    box.setAttribute(<span class="string">"class"</span>, <span class="string">"box"</span>);</span><br><span class="line">    wrap.appendChild(box);</span><br><span class="line">    <span class="keyword">const</span> chart = <span class="built_in">document</span>.createElement(<span class="string">"ul"</span>);</span><br><span class="line">    chart.setAttribute(<span class="string">"class"</span>, <span class="string">"chart"</span>);</span><br><span class="line">    box.appendChild(chart);</span><br><span class="line">    <span class="keyword">const</span> title = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">    title.textContent = i;</span><br><span class="line">    title.setAttribute(<span class="string">"class"</span>, <span class="string">"chart_title"</span>);</span><br><span class="line">    chart.appendChild(title);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">const</span> answer = i * j;</span><br><span class="line">      <span class="keyword">const</span> list = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">      list.textContent = <span class="string">`<span class="subst">$&#123;i&#125;</span>x<span class="subst">$&#123;j&#125;</span>=<span class="subst">$&#123;answer&#125;</span>`</span>;</span><br><span class="line">      chart.appendChild(list);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createChart();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 九九乘法表 - &lt;a href=&quot;https://chiangyuchi.github.io
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 時鐘</title>
    <link href="http://yoursite.com/2019/08/07/2019-08-07/"/>
    <id>http://yoursite.com/2019/08/07/2019-08-07/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2019-11-11T01:19:56.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - Clock - <a href="https://chiangyuchi.github.io/clock/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是六角學院的一個小挑戰，使用 JavaScript 原生語法獲取時間，並且讓時針持續轉動，實現時鐘功能。</p><p><img src="https://i.imgur.com/ZPAMSh5.png" alt></p><ul><li>使用 JavaScript 原生語法的 getDate() 獲取時間</li><li>使用 JavaScript 原生語法的 setInterval() 方式讓指針持續轉動。</li><li>使用 for 迴圈渲染出鐘面</li><li>以 nth-child(n) 改變重疊圖示的傾斜角度</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="HTML、CSS-結構"><a href="#HTML、CSS-結構" class="headerlink" title="HTML、CSS 結構"></a>HTML、CSS 結構</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-m"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-hand"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-hour"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-min"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand-sec"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"round"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clock</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: $light-green-color;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line"></span><br><span class="line">  &amp;::before &#123;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 310<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 310<span class="selector-tag">px</span>;</span><br><span class="line">    background-color: $green-color;</span><br><span class="line">    <span class="selector-tag">border-radius</span>: 100%;</span><br><span class="line">    <span class="selector-tag">content</span>: "";</span><br><span class="line">    <span class="selector-tag">top</span>: 0;</span><br><span class="line">    <span class="selector-tag">right</span>: 0;</span><br><span class="line">    <span class="selector-tag">bottom</span>: 0;</span><br><span class="line">    <span class="selector-tag">left</span>: 0;</span><br><span class="line">    <span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;</span><br><span class="line">    <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#212f0b</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用迴圈刻出鐘面"><a href="#使用迴圈刻出鐘面" class="headerlink" title="使用迴圈刻出鐘面"></a>使用迴圈刻出鐘面</h2><p>接著要開始做鐘面，這裡分為兩個部分進行，這兩層的作法是類似的：</p><ol><li>12 小時及橘色的區間</li><li>60 分鐘及白色小點</li></ol><p>先設定數字及中間橘色的分隔線先以中上的 24-12 為基準點</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hour-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">48%</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">45%</span> <span class="number">245%</span>;</span><br><span class="line"></span><br><span class="line">  .line &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    background: $orange-color;</span><br><span class="line">    <span class="selector-tag">margin</span>: 8<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且用 for 迴圈，推出所有畫面所需的小時標示，所有的標示並寫入畫面上，但會發現全部的圖示都是疊在一起的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> clock = <span class="built_in">document</span>.querySelector(<span class="string">".clock"</span>);</span><br><span class="line"><span class="keyword">const</span> clockM = <span class="built_in">document</span>.querySelector(<span class="string">".clock-m"</span>);</span><br><span class="line"><span class="comment">//clock face</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> clockHour = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> clockMin = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">  clockHour += <span class="string">`&lt;div class="hour-wrap"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="hour-24"&gt;<span class="subst">$&#123;i + <span class="number">12</span>&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="line"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="hour-12"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line">  clockMin += <span class="string">`&lt;div class="minute-wrap"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="dot"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;`</span>;</span><br><span class="line"></span><br><span class="line">  clock.innerHTML += clockHour;</span><br><span class="line">  clockM.innerHTML += clockMin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是結果會全部疊在一起</p><p><img src="https://i.imgur.com/6gVCKQn.png" alt></p><h2 id="使用-nth-child-n-改變傾斜角度"><a href="#使用-nth-child-n-改變傾斜角度" class="headerlink" title="使用 nth-child(n) 改變傾斜角度"></a>使用 nth-child(n) 改變傾斜角度</h2><p>這裡的作法是用 nth-child(n) 選取器改變重疊圖示的傾斜角度，也是分成 2 個部分，第一個是小時區間＋分鐘區間，總共有 2 層，但這 2 層都分成 12 等分，一個圓 360 度，每一個小時要增加 30 度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hour-wrap</span> &#123;</span><br><span class="line">  .line &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    <span class="selector-tag">width</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    background: $orange-color;</span><br><span class="line">    <span class="selector-tag">margin</span>: 8<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(60deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下來是鐘面的最後一個步驟，也就是做出設計稿上每小時中間的白色點點。因為每一個小時是 30 度，因此每一個點都要多加 5 度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clock-m</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line"></span><br><span class="line">  .minute-wrap &#123;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">    <span class="selector-tag">top</span>: 30<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">left</span>: 50%;</span><br><span class="line">    <span class="selector-tag">width</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 58<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-left</span>: <span class="selector-tag">-7px</span>;</span><br><span class="line">    <span class="selector-tag">transform-origin</span>: 55% 255%;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(60deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(4)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(120deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(5)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(150deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(6)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(180deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(7)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(210deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(8)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(240deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(9)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(270deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(10)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(300deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(11)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(330deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:nth-child(12)</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.dot</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">27px</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">58px</span>;</span><br><span class="line">      <span class="attribute">margin-left</span>: -<span class="number">7px</span>;</span><br><span class="line">      <span class="attribute">color</span>: white;</span><br><span class="line">      <span class="attribute">transform-origin</span>: <span class="number">55%</span> <span class="number">255%</span>;</span><br><span class="line"></span><br><span class="line">      &amp;:after &#123;</span><br><span class="line">        <span class="selector-tag">content</span>: "";</span><br><span class="line">        <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">        <span class="selector-tag">width</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">height</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-tag">white</span>;</span><br><span class="line">        <span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(5deg);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(10deg);</span><br><span class="line"></span><br><span class="line">        &amp;:before &#123;</span><br><span class="line">          <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line">          <span class="selector-tag">content</span>: "";</span><br><span class="line">          <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">          <span class="selector-tag">width</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">          <span class="selector-tag">height</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">          background-color: $orange-color;</span><br><span class="line">          <span class="selector-tag">right</span>: <span class="selector-tag">-2px</span>;</span><br><span class="line">          <span class="selector-tag">top</span>: <span class="selector-tag">-10px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(15deg);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child(4)</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(20deg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取得時間"><a href="#取得時間" class="headerlink" title="取得時間"></a>取得時間</h2><p>現在鐘面已經完成了，最後的步驟就是把指針放上，並取得時間。我們先把指針以頂端的 24-12 為基準點對準中心，　<code>transform-origin: center bottom</code>。它的轉動的方式，依照 css 的 <code>transform</code>來修改。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">hand-sec</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">126px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: $lighter-green-color;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: center bottom;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(0.1, 2.7, 0.58, 1);</span><br></pre></td></tr></table></figure><p>方式是每秒獲取一次時間，並依據取得時間的結果，去修改時針，分針，秒針的轉動角度，接下來要讓指針取得時間，這裡的取得時間的作法是參考 JavaScript 30 Days 的寫法，以 <code>new Date()</code>取得時針、分針、秒針的時間，並且用<code>setInterval()</code> 方式讓指針持續轉動。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> secondHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-sec"</span>);</span><br><span class="line"><span class="keyword">const</span> minsHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-min"</span>);</span><br><span class="line"><span class="keyword">const</span> hourHand = <span class="built_in">document</span>.querySelector(<span class="string">".hand-hour"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">const</span> seconds = now.getSeconds();</span><br><span class="line">  <span class="keyword">const</span> secondsDegree = (seconds / <span class="number">60</span>) * <span class="number">360</span>;</span><br><span class="line">  secondHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;secondsDegree&#125;</span>deg)`</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(seconds);</span><br><span class="line">  <span class="keyword">const</span> mins = now.getMinutes();</span><br><span class="line">  <span class="keyword">const</span> minsDegree = (mins / <span class="number">60</span>) * <span class="number">360</span>;</span><br><span class="line">  minsHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;minsDegree&#125;</span>deg)`</span>;</span><br><span class="line">  <span class="keyword">const</span> hours = now.getHours();</span><br><span class="line">  <span class="keyword">const</span> hoursDegree = (hours / <span class="number">12</span>) * <span class="number">360</span> + (mins / <span class="number">60</span>) * <span class="number">30</span>;</span><br><span class="line">  hourHand.style.transform = <span class="string">`rotate(<span class="subst">$&#123;hoursDegree&#125;</span>deg)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setInterval(setDate, <span class="number">1000</span>);</span><br><span class="line">setDate();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - Clock - &lt;a href=&quot;https://chiangyuchi.github.io
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - BMI 計算器</title>
    <link href="http://yoursite.com/2019/08/06/2019-08-06/"/>
    <id>http://yoursite.com/2019/08/06/2019-08-06/</id>
    <published>2019-08-05T16:00:00.000Z</published>
    <updated>2019-11-11T02:23:35.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - BMI 計算器 - <a href="https://chiangyuchi.github.io/bmi-calculator/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這個 BMI 練習透過 HTML 中的 web storage 物件，使用 localstroage 儲存在瀏覽器的儲存空間裡面，如此一來，本來存入程式碼當中的資料，就不會因重新整理頁面或者關閉瀏覽器而消失。放在 localStorage 的資料會永久保存，直到被使用者清除。透過這個練習認識 web storage。</p><p><img src="https://i.imgur.com/0BSvyIZ.png" alt></p><ul><li>讀取、更新 Storage</li><li>可顯示健康狀態提示文字</li><li>搭配 localstorage 的存取</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="web-storage-種類"><a href="#web-storage-種類" class="headerlink" title="web storage 種類"></a>web storage 種類</h2><ul><li><code>window.sessionStorage</code>: sessionStorage 的資料會在頁面(頁籤)關閉時清空。</li><li><code>window.localStorage</code> : 放在 localStorage 的資料會永久保存，直到被使用者清除。</li></ul><h2 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h2><h3 id="讀取-Storage"><a href="#讀取-Storage" class="headerlink" title="讀取 Storage"></a>讀取 Storage</h3><p>透過在 setItem() 方法中指定物件屬性的 key 以及 value ，我們可以在 storage 物件中加入屬性或修改原本的屬性內容。<br>Storage.setItem(‘key’, ‘value’)</p><h3 id="更新-Storage"><a href="#更新-Storage" class="headerlink" title="更新 Storage"></a>更新 Storage</h3><p>透過在 setItem() 方法中指定物件屬性的 key 以及 value ，可以在 storage 物件中加入屬性或修改原本的屬性內容。<br>Storage.setItem(‘key’, ‘value’)</p><h2 id="將資料轉為-JSON-格式"><a href="#將資料轉為-JSON-格式" class="headerlink" title="將資料轉為 JSON 格式"></a>將資料轉為 JSON 格式</h2><p>透過 Storage 方法方便將資料儲存在本地端，可是有時候我們使用 setItem() 時將值指定為一個物件，再使用 getItem() 來取得資料時，會回傳一個奇怪的 [object object]字串出來，項這樣：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> string = <span class="string">"testword"</span>;</span><br><span class="line"><span class="keyword">let</span> number = <span class="number">12345</span>;</span><br><span class="line"><span class="keyword">let</span> array = [<span class="string">"asd"</span>, <span class="number">123</span>, <span class="literal">true</span>];</span><br><span class="line"><span class="keyword">let</span> object = &#123;</span><br><span class="line">  test: <span class="number">321</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">localStorage.setItem(<span class="string">"item"</span>, string);</span><br><span class="line">localStorage.setItem(<span class="string">"item2"</span>, number);</span><br><span class="line">localStorage.setItem(<span class="string">"item3"</span>, array);</span><br><span class="line">localStorage.setItem(<span class="string">"item4"</span>, object);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(localStorage.getItem(<span class="string">"item"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(localStorage.getItem(<span class="string">"item2"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(localStorage.getItem(<span class="string">"item3"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(localStorage.getItem(<span class="string">"item4"</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/M8pMJzJ.png" alt></p><p>這是因為對 object 使用 toString()方法的時候，預設情況下 toString() 方法被每個 object 對象繼承。如果此方法在自定義對象中未被被覆蓋，toString() 將會回傳 [object type]，其中 type 是定義對象的類型。</p><p>所以我們這裡使用到 JSON 這種資料格式避免這種問題。</p><ol><li>JSON.stringify()：將資料轉為 JSON 格式的字串。</li><li>JSON.parse(myJSON)：將資料由 JSON 格式字串轉回原本的資料內容及型別。</li></ol><h2 id="計算、儲存資料"><a href="#計算、儲存資料" class="headerlink" title="計算、儲存資料"></a>計算、儲存資料</h2><p>先計算出 BMI 質量，並用得出的數字比對判斷式，再將結果依序存入陣列當中，最後將數據轉為 JSON 格式並儲存</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addData</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  <span class="keyword">var</span> Height = <span class="built_in">document</span>.querySelector(<span class="string">".howHeight"</span>).value;</span><br><span class="line">  <span class="keyword">var</span> Weight = <span class="built_in">document</span>.querySelector(<span class="string">".howWeight"</span>).value;</span><br><span class="line">  <span class="keyword">var</span> BMI = Weight / ((Height / <span class="number">100</span>) * (Height / <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">  BMI = BMI.toFixed(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">var</span> color = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">var</span> situation = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> nowDate = date.toDateString();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (BMI &lt; <span class="number">18.5</span>) &#123;</span><br><span class="line">    situation = <span class="string">"小瘦瘦"</span>;</span><br><span class="line">    color = <span class="string">"LightBlue"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">18.5</span> &lt;= BMI &amp;&amp; BMI &lt; <span class="number">24</span>) &#123;</span><br><span class="line">    situation = <span class="string">"理想"</span>;</span><br><span class="line">    color = <span class="string">"green"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">24</span> &lt;= BMI &amp;&amp; BMI &lt; <span class="number">27</span>) &#123;</span><br><span class="line">    situation = <span class="string">"微胖胖"</span>;</span><br><span class="line">    color = <span class="string">"orange"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">27</span> &lt;= BMI &amp;&amp; BMI &lt; <span class="number">30</span>) &#123;</span><br><span class="line">    situation = <span class="string">"有些肥胖"</span>;</span><br><span class="line">    color = <span class="string">"yellow"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">30</span> &lt;= BMI) &#123;</span><br><span class="line">    situation = <span class="string">"你是胖子"</span>;</span><br><span class="line">    color = <span class="string">"red"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="literal">NaN</span> = BMI)) &#123;</span><br><span class="line">    situation = <span class="string">"請輸入數據"</span>;</span><br><span class="line">    color = <span class="string">"black"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> health = &#123;</span><br><span class="line">    content: [color, situation, BMI, Weight, Height, nowDate]</span><br><span class="line">  &#125;;</span><br><span class="line">  data.push(health);</span><br><span class="line">  <span class="comment">// 更新網頁內容</span></span><br><span class="line">  updateList(data);</span><br><span class="line">  <span class="comment">// 更新localstorage,要存入要轉成string</span></span><br><span class="line">  localStorage.setItem(<span class="string">"listData"</span>, <span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取得資料"><a href="#取得資料" class="headerlink" title="取得資料"></a>取得資料</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">"listData"</span>)) || [];</span><br></pre></td></tr></table></figure><h2 id="更新畫面"><a href="#更新畫面" class="headerlink" title="更新畫面"></a>更新畫面</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">updateList(data);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateList</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">var</span> len = items.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    str +=</span><br><span class="line">      <span class="string">'&lt;li style="border-left: 5px solid '</span> +</span><br><span class="line">      items[i].content[<span class="number">0</span>] +</span><br><span class="line">      <span class="string">';"&gt;&lt;span style = "width:100px;margin-left:20px;font-size:20px;font-weight:bold;" &gt; '</span> +</span><br><span class="line">      items[i].content[<span class="number">1</span>] +</span><br><span class="line">      <span class="string">'&lt;/span&gt;&lt;span style="width:100px;margin-left:30px;"&gt;BMI'</span> +</span><br><span class="line">      items[i].content[<span class="number">2</span>] +</span><br><span class="line">      <span class="string">'&lt;/span&gt;&lt;span style = "width:100px;margin-left:20px;" &gt; 體重 '</span> +</span><br><span class="line">      items[i].content[<span class="number">3</span>] +</span><br><span class="line">      <span class="string">'kg&lt;/span&gt;&lt;span style = "width:100px;margin-left:30px;" &gt; 身高'</span> +</span><br><span class="line">      items[i].content[<span class="number">4</span>] +</span><br><span class="line">      <span class="string">'cm&lt;/span&gt; &lt;span style="width:200px;margin-left:80px;"&gt;'</span> +</span><br><span class="line">      items[i].content[<span class="number">5</span>] +</span><br><span class="line">      <span class="string">"&lt;/span&gt;    &lt;/li&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  list.innerHTML = str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - BMI 計算器 - &lt;a href=&quot;https://chiangyuchi.github.
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 顧客心得</title>
    <link href="http://yoursite.com/2019/08/05/2019-08-05/"/>
    <id>http://yoursite.com/2019/08/05/2019-08-05/</id>
    <published>2019-08-04T16:00:00.000Z</published>
    <updated>2020-07-09T08:34:15.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 顧客心得 - <a href="https://chiangyuchi.github.io/testimony/" target="_blank" rel="noopener">Demo</a></p><h1 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h1><p>這是一個網路上找到的練習題目，主要是網頁上常見的顧客心得區塊</p><p><img src="https://i.imgur.com/1tuY6t7.jpg" alt></p><ul><li>操作陣列索引值</li><li>使用物件建構子</li><li>forEach()</li><li>事件委派</li><li>樣板字面值</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="建立顧客資料"><a href="#建立顧客資料" class="headerlink" title="建立顧客資料"></a>建立顧客資料</h2><p>這裡要練習使用函式建構式 (function constructor)，初始的陣列是一個空陣列，物件包含圖片索引、姓名、文字，當函式執行時當做參數傳入。其中圖片部分要利用樣板字面值與圖片索引取得圖片</p><p>利用關鍵字 <code>new</code>建立顧客資料的物件，並且將剛剛函式執行時傳入的參數用<code>this</code>指定到建立的空物件內容。再將產生的物件新增到空陣列裡面。</p><pre><code>使用 new 這個關鍵字時，實際上會先有一個空的物件被建立。接著 People 這個函式會被執行（invoke）。我們知道當函式執行的時候，在 execution context 中會有 this 被建立，而當我們使用 new 的時候，函式裡面的 this 會被指定成剛剛所建立的那個空物件。[https://pjchender.blogspot.com/2016/06/javascriptfunction-constructornew.html](https://pjchender.blogspot.com/2016/06/javascriptfunction-constructornew.html)</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> customers = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Customer</span>(<span class="params">img, name, text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.img = img;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.text = text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCustomer</span>(<span class="params">img, name, text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> fullImg = <span class="string">`./img/customer-<span class="subst">$&#123;img&#125;</span>.jpg`</span>;</span><br><span class="line">  <span class="keyword">let</span> customer = <span class="keyword">new</span> Customer(fullImg, name, text);</span><br><span class="line">  customers.push(customer);</span><br><span class="line">&#125;</span><br><span class="line">createCustomer(<span class="number">0</span>, <span class="string">"John"</span>, <span class="string">"講解的很用心 範例也很多"</span>);</span><br></pre></td></tr></table></figure><h2 id="切換顧客心得"><a href="#切換顧客心得" class="headerlink" title="切換顧客心得"></a>切換顧客心得</h2><p>使用 <code>querySelectorAll</code> 選擇所有包含 <code>btn</code> 名稱的元素，使用此方法會得到一個類似陣列的 <code>NodeList</code>。因此接下來可以使用forEach()，將 nodelist 裡面的所有元素，都傳入函式執行一次。要執行的是監聽個別元素的點擊事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">buttons.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">button</span>)</span>&#123;</span><br><span class="line">  button.addEventListner(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>這裡使用事件委派的方式，就省去個別綁定 button 的 click 事件的麻煩。把 click 事件改由外層的父節點來監聽，利用事件傳遞的原理，判斷 <code>e.target</code> 是我們要的目標節點，才去執行後續的動作。所以使用 2 個判斷式，判斷是否具備滿足條件，如果是，就往前或往後切換圖片</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (e.target.parentElement.classList.contains(<span class="string">'prevBtn'</span>))</span><br><span class="line"><span class="keyword">if</span> (e.target.parentElement.classList.contains(<span class="string">'nextBtn'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;JavaScript 練習 - 顧客心得 - &lt;a href=&quot;https://chiangyuchi.github.io/
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 計算機</title>
    <link href="http://yoursite.com/2019/08/01/2019-08-01/"/>
    <id>http://yoursite.com/2019/08/01/2019-08-01/</id>
    <published>2019-07-31T16:00:00.000Z</published>
    <updated>2020-08-07T06:02:41.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><h2 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h2><p>這是一個很經典的基礎 JavaScript 練習題，一開始把題目想得太複雜，但參考網上的作法後，了解到如何運用基礎的 JavaScript 語法做出一個基本功能的計算機。這個練習會用到：</p><ul><li>變數</li><li>if-else 條件判斷</li><li>includes() 方法</li><li>matches() 方法</li><li>dataset 自定義資料屬性</li><li>Event deligation 事件委派</li></ul><h2 id="基本-HTML-結構"><a href="#基本-HTML-結構" class="headerlink" title="基本 HTML 結構"></a>基本 HTML 結構</h2><p>基本的 HTML 結構如下，可以看到輸入欄位、運算符號及數字鍵，其中運算符號上面具備 <code>data-action</code> 屬性以便點擊時取得相應功能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"calculator"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"calculator__display"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"calculator__keys"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"key--operator"</span> <span class="attr">data-action</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"key--operator"</span> <span class="attr">data-action</span>=<span class="string">"subtract"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"key--operator"</span> <span class="attr">data-action</span>=<span class="string">"multiply"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"key--operator"</span> <span class="attr">data-action</span>=<span class="string">"divide"</span>&gt;</span>÷<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>7<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>8<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>9<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>6<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>0<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">data-action</span>=<span class="string">"decimal"</span>&gt;</span>.<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">data-action</span>=<span class="string">"clear"</span>&gt;</span>AC<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"key--equal"</span> <span class="attr">data-action</span>=<span class="string">"calculate"</span>&gt;</span>=<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基礎功能"><a href="#基礎功能" class="headerlink" title="基礎功能"></a>基礎功能</h2><h3 id="使用事件委派監聽"><a href="#使用事件委派監聽" class="headerlink" title="使用事件委派監聽"></a>使用事件委派監聽</h3><p>監聽所有點擊事件，在此使用事件委派監聽，因為所有按鍵都是 <code>keys</code> 的子層，並且使用 <code>matches()</code> 確定按下的鍵的類型。如果按下的鍵屬性是 button，那就指向觸發事件的 DOM 物件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> calculator = <span class="built_in">document</span>.querySelector(<span class="string">".calculator"</span>);</span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">document</span>.querySelector(<span class="string">".calculator__keys"</span>);</span><br><span class="line"><span class="keyword">const</span> action = key.dataset.action;</span><br><span class="line">keys.addEventListener(<span class="string">"click"</span>, (e) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(e.target.matches(<span class="string">'button'</span>))&#123;</span><br><span class="line">      <span class="keyword">const</span> key = e.target;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且利用 <code>data-action</code> 與判斷式，判斷點擊目標的自定義資料屬性。一個簡單的計算機可能發生以下幾種狀況：</p><ul><li>數字鍵 （0-9)</li><li>運算符 an operator key (+, -, ×, ÷)</li><li>小數點</li><li>等於</li><li>清除</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> key = e.target;</span><br><span class="line"><span class="keyword">const</span> action = key.dataset.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!action) &#123;</span><br><span class="line">  <span class="comment">//如果點擊目標不是任何運算動作，就是數字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (</span><br><span class="line">  action === <span class="string">"add"</span> ||</span><br><span class="line">  action === <span class="string">"subtract"</span> ||</span><br><span class="line">  action === <span class="string">"multiply"</span> ||</span><br><span class="line">  action === <span class="string">"divide"</span></span><br><span class="line">) &#123;</span><br><span class="line">  <span class="comment">//如果點擊鍵是+-*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (action === <span class="string">"decimal"</span>) &#123;</span><br><span class="line">  <span class="comment">//如果點擊鍵是小數點</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (action === <span class="string">"clear"</span>) &#123;</span><br><span class="line">  <span class="comment">//如果點擊鍵是清除</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (action === <span class="string">"calculate"</span>) &#123;</span><br><span class="line">  <span class="comment">//如果點擊鍵是等於</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取得輸入值並顯示在計算機"><a href="#取得輸入值並顯示在計算機" class="headerlink" title="取得輸入值並顯示在計算機"></a>取得輸入值並顯示在計算機</h3><p>計算機都會有一個開機預設的 0，如果按下任何一個數字鍵，就會取代目前銀幕上的 0。如果銀幕上現在是非 0 的其他數字，按下第二個數字鍵，就會附加在目前顯示的數字尾巴。所以這裡需要獲得 2 項資訊：</p><ul><li>目前點擊數字</li><li>目前銀幕顯示數字</li></ul><p>透過 <code>textContent</code> 屬性取得上面兩項資訊的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> display = <span class="built_in">document</span>.querySelector(<span class="string">".calculator__display"</span>); <span class="comment">// 取得計算機銀幕欄位</span></span><br><span class="line">keys.addEventListener(<span class="string">"click"</span>, (e) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.target.matches(<span class="string">"button"</span>)) &#123;</span><br><span class="line">    <span class="keyword">const</span> key = e.target;</span><br><span class="line">    <span class="keyword">const</span> action = key.dataset.action;</span><br><span class="line">    <span class="keyword">const</span> keyContent = key.textContent; <span class="comment">//取得點擊鍵的值</span></span><br><span class="line">    <span class="keyword">const</span> displayedNum = display.textContent; <span class="comment">//取得銀幕顯示值</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>假如銀幕現在顯示 0，取代現在顯示的 0；不是 0，例如 1，附加點擊的第二個按鍵在 1 後面例如 13</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!action) &#123;</span><br><span class="line">  <span class="keyword">if</span> (displayedNum === <span class="string">"0"</span>) &#123;</span><br><span class="line">    display.textConten = keyContent;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    display.textConten = displayedNum + keyContent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小數點"><a href="#小數點" class="headerlink" title="小數點"></a>小數點</h4><ul><li>使用 includes() 檢查字串有沒有小數點，如果沒有小數點，而且前一個點擊事件不是運算符，例如 11，那就加上小數點</li><li>如果前一個點擊事件是等號或者運算符事件，點擊小數點就會顯示 0.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (action === <span class="string">"decimal"</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!displayedNum.includes(<span class="string">"."</span>) &amp;&amp; previousKeyType !== <span class="string">"operator"</span>) &#123;</span><br><span class="line">    display.textContent = displayedNum + <span class="string">"."</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">    previousKeyType === <span class="string">"operator"</span> ||</span><br><span class="line">    previousKeyType === <span class="string">"calculate"</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    display.textContent = <span class="string">"0."</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  calculator.dataset.previousKeyType = <span class="string">"decimal"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="運算符號事件：新增第二個運算數字"><a href="#運算符號事件：新增第二個運算數字" class="headerlink" title="運算符號事件：新增第二個運算數字"></a>運算符號事件：新增第二個運算數字</h4><p>一個兩個數字的運算，例如 1 + 3 會有三個資料需儲存</p><ul><li>第一個數字</li><li>運算符號</li><li>第二個數字</li></ul><p>在點擊運算符號的時候，第一個數字會被儲存，第二個數字會取代第一個數字而顯示在銀幕上。所以在點擊運算符號的時候，使用 <code>dataset</code> 儲存第一個數字、目前的點擊事件類型、運算符號號</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">  action === <span class="string">"add"</span> ||</span><br><span class="line">  action === <span class="string">"subtract"</span> ||</span><br><span class="line">  action === <span class="string">"multiply"</span> ||</span><br><span class="line">  action === <span class="string">"divide"</span></span><br><span class="line">) &#123;</span><br><span class="line">  calculator.dataset.firstValue = displayedNum; <span class="comment">//儲存第一個值</span></span><br><span class="line">  calculator.dataset.previousKeyType = <span class="string">"operator"</span>; <span class="comment">//儲存點擊事件類型</span></span><br><span class="line">  calculator.dataset.operator = action; <span class="comment">//儲存運算符號</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="等號事件"><a href="#等號事件" class="headerlink" title="等號事件"></a>等號事件</h4><p>按下等號的時候，會運用到已經用 dataset 儲存的第一個值、儲存的運算符號、銀幕目前顯示的值。而且按下運算符號後，需把運算結果更新成下一個算式的的第一個值。<br>例如 5-1 = 4 , 下一個算式的第一個數字就是 1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (action === <span class="string">"calculate"</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> operator = calculator.dataset.operator;</span><br><span class="line">  <span class="keyword">let</span> firstValue = calculator.dataset.firstValue;</span><br><span class="line">  <span class="keyword">let</span> secondValue = displayedNum;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (firstValue) &#123;</span><br><span class="line">    <span class="keyword">if</span> (previousKeyType === <span class="string">"calculate"</span>) &#123;</span><br><span class="line">      firstValue = displayedNum;</span><br><span class="line">      secondValue = calculate.dataset.modeValue;</span><br><span class="line">    &#125;</span><br><span class="line">    display.textContent = calculate(firstValue, operator, secondValue);</span><br><span class="line">  &#125;</span><br><span class="line">  calculator.dataset.modeValue = secondValue;</span><br><span class="line"></span><br><span class="line">  calculator.dataset.previousKeyType = <span class="string">"calculate"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="運算符號事件優化"><a href="#運算符號事件優化" class="headerlink" title="運算符號事件優化"></a>運算符號事件優化</h4><p>在運算符號事件發生的時候，如果 按下 8+3+ 就會出現等同於按下等號的狀況。第一個數字已經被儲存，第二個數字現在是銀幕上顯示的數字，所以邏輯跟按下等號一樣</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> operator = calculator.dataset.operator;</span><br><span class="line"><span class="keyword">let</span> firstValue = calculator.dataset.firstValue;</span><br><span class="line"><span class="keyword">let</span> secondValue = displayedNum;</span><br><span class="line"><span class="keyword">if</span> (</span><br><span class="line">  firstValue &amp;&amp;</span><br><span class="line">  operator &amp;&amp;</span><br><span class="line">  previousKeyType !== <span class="string">"operator"</span> &amp;&amp;</span><br><span class="line">  previousKeyType !== <span class="string">"calculate"</span></span><br><span class="line">) &#123;</span><br><span class="line">  <span class="keyword">let</span> calcValue = calculate(firstValue, operator, secondValue);</span><br><span class="line">  calculator.dataset.firstValue = calcValue;</span><br><span class="line">  display.textContent = calcValue;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  calculator.dataset.firstValue = displayedNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;h2 id=&quot;Introduction-介紹&quot;&gt;&lt;a href=&quot;#Introduction-介紹&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 練習 - 顏色猜測遊戲</title>
    <link href="http://yoursite.com/2019/07/31/2019-07-31/"/>
    <id>http://yoursite.com/2019/07/31/2019-07-31/</id>
    <published>2019-07-30T16:00:00.000Z</published>
    <updated>2020-08-07T09:36:13.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><h1 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo"></a>Demo</h1><p>JavaScript 練習 - 顏色猜測遊戲 - <a href="https://chiangyuchi.github.io/color-guessing/" target="_blank" rel="noopener">Demo</a></p><h2 id="Introduction-介紹"><a href="#Introduction-介紹" class="headerlink" title="Introduction 介紹"></a>Introduction 介紹</h2><p>這個小遊戲的練習目的主要是熟悉基礎的 JavaScript 方法</p><p><img src="https://i.imgur.com/PMWMXxh.png" alt></p><ul><li>for-loops</li><li>if-else 條件判斷</li><li>Math.random() 取得隨機數值</li><li>Math.floor() 取得整數</li><li>RGB 顏色模型</li></ul><h2 id="基本-HTML-結構"><a href="#基本-HTML-結構" class="headerlink" title="基本 HTML 結構"></a>基本 HTML 結構</h2><p>基本的 HTML 結構如下</p><ul><li>顯示一個要比對的色碼</li><li>重置鍵</li><li>模式切換鍵 （難/易）</li><li>訊息區塊</li><li>隨機生成六組顏色方塊</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;The Great &lt;br&gt;&lt;span id=&quot;colorDisplay&quot;&gt;RGB&lt;/span&gt;&lt;br&gt; Color Game&lt;/h1&gt;</span><br><span class="line">  &lt;div id=&quot;stripe&quot;&gt;</span><br><span class="line">      &lt;button id=&quot;reset&quot;&gt;New Colors&lt;/button&gt;</span><br><span class="line">      &lt;span id=&quot;message&quot;&gt;&lt;/span&gt;</span><br><span class="line">      &lt;button id=&quot;easyBtn&quot; class=&quot;mode&quot;&gt;Easy&lt;/button&gt;</span><br><span class="line">      &lt;button id=&quot;hardBtn&quot; class=&quot;mode selected&quot;&gt;Hard&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;square&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="基礎功能"><a href="#基礎功能" class="headerlink" title="基礎功能"></a>基礎功能</h2><h3 id="隨機生成顏色"><a href="#隨機生成顏色" class="headerlink" title="隨機生成顏色"></a>隨機生成顏色</h3><p>綁定六個顏色方塊，背景色是從隨機產生的顏色陣列中獲得</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> squares = <span class="built_in">document</span>.querySelectorAll(<span class="string">".square"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">  squares[i].style.backgroundColor = colors[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>陣列的顏色數目是 6 個，用一個產生隨機色的<code>getRandomColors(num)</code>函式返回一個陣列。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numSquares = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> colors = getRandomColors(numSquares);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomColors</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> arr = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">    arr.push(randomColor());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>運用 <code>Math.random()</code>、<code>Math.floor()</code>，取得 r、g、b 的隨機值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">  <span class="keyword">var</span> g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">  <span class="keyword">var</span> b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"rgb("</span> + r + <span class="string">", "</span> + g + <span class="string">", "</span> + b + <span class="string">")"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="產生要比對的色碼"><a href="#產生要比對的色碼" class="headerlink" title="產生要比對的色碼"></a>產生要比對的色碼</h3><p>根據從隨機數字取得的索引值，畫面上方顯示一個從上個步驟的陣列裡(1,2,3…6)挑選出的色碼，</p><p><img src="https://i.imgur.com/56ZJnbi.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pickedColor = pickColor();</span><br><span class="line"><span class="keyword">var</span> colorDisplay = <span class="built_in">document</span>.querySelector(<span class="string">"#colorDisplay"</span>);</span><br><span class="line">colorDisplay.textContent = pickedColor;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pickColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> random = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * colors.length);</span><br><span class="line">  <span class="keyword">return</span> colors[random];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="比對顏色"><a href="#比對顏色" class="headerlink" title="比對顏色"></a>比對顏色</h3><p>如果點選的區塊顏色，等於上面的色碼，所有區塊都會變成點選的顏色；否則，讓點選的區塊隱藏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">  squares[i].addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> clickedColor = <span class="keyword">this</span>.style.backgroundColor;</span><br><span class="line">    <span class="keyword">if</span> (clickedColor === pickedColor) &#123;</span><br><span class="line">      changeColor(clickedColor);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.style.backgroundColor = <span class="string">"#232323"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params">color</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">    squares[i].style.backgroundColor = color;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="調整難易度"><a href="#調整難易度" class="headerlink" title="調整難易度"></a>調整難易度</h3><p>調整難易度的邏輯其實跟第一個步驟大部分雷同，唯一的差別只是產生的陣列長度不同。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">easyBtn.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  easyBtn.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  hardBtn.classList.remove(<span class="string">"selected"</span>);</span><br><span class="line">  numSquares = <span class="number">3</span>;</span><br><span class="line">  colors = getRandomColors(numSquares);</span><br><span class="line">  pickedColor = pickColor();</span><br><span class="line">  colorDisplay.textContent = pickedColor;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (colors[i]) &#123;</span><br><span class="line">      squares[i].style.backgroundColor = colors[i];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      squares[i].style.display = <span class="string">"none"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">hardBtn.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  easyBtn.classList.remove(<span class="string">"selected"</span>);</span><br><span class="line">  hardBtn.classList.add(<span class="string">"selected"</span>);</span><br><span class="line">  numSquares = <span class="number">6</span>;</span><br><span class="line">  colors = getRandomColors(numSquares);</span><br><span class="line">  pickedColor = pickColor();</span><br><span class="line">  colorDisplay.textContent = pickedColor;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">    squares[i].style.backgroundColor = colors[i];</span><br><span class="line"></span><br><span class="line">    squares[i].style.display = <span class="string">"block"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="重新設定"><a href="#重新設定" class="headerlink" title="重新設定"></a>重新設定</h3><p>恢復初始值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">resetBtn.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    colors = getRandomColors(numSquares);</span><br><span class="line">    pickedColor = pickColor();</span><br><span class="line">    colorDisplay.textContent = pickedColor;</span><br><span class="line">    message.textContent = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; squares.length; i++) &#123;</span><br><span class="line">        squares[i].style.backgroundColor = colors[i];</span><br><span class="line">    &#125;</span><br><span class="line">    resetBtn.textContent = <span class="string">"New Colors"</span>;</span><br><span class="line">    h1.style.backgroundColor = <span class="string">"steelblue"</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;h1 id=&quot;Demo-1&quot;&gt;&lt;a href=&quot;#Demo-1&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
</feed>
